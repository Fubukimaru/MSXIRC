AS80 Assembler for i8080 [1.31].                                     Page    1
---------------------------------- M14.ASM -----------------------------------

7920 lines read, no errors in pass 1.
                        ; MSX IRC Client v 1.0
                        ;
                        ; constante
                        
                        
                        	;--- Macro for printing a $-finished string
                        
                        print	macro	
                        	ld	de,\1
                        	ld	c,_STROUT
                        	call	DOS
                        	endm
                        
                        	;--- DOS function calls
                        
                        
0005 =                  DOS	equ	#0005
                        
0000 =                  _TERM0:	equ	#00	;Program terminate
0001 =                  _CONIN:	equ	#01	;Console input with echo
0002 =                  _CONOUT:	equ	#02	;Console output
0006 =                  _DIRIO:	equ	#06	;Direct console I/O
0007 =                  _INNO:	equ	#07     ;
0008 =                  _INNOE:	equ	#08	;Console input without echo
0009 =                  _STROUT:	equ	#09	;String output
000a =                  _BUFIN:	equ	#0A	;Buffered line input
000b =                  _CONST:	equ	#0B	;Console status
000f =                  _FOPEN: equ	#0F	;Open file
0010 =                  _FCLOSE	equ	#10	;Close file
001a =                  _SDMA:	equ	#1A	;Set DMA address
0027 =                  _RBREAD:	equ	#27	;Random block read
0062 =                  _TERM:	equ	#62	;Terminate with error code
0063 =                  _DEFAB:	equ	#63	;Define abort exit routine
006f =                  _DOSVER:	equ	#6F	;Get DOS version
002a =                  _GETDATE:	equ	#2A	;Get Date 
002c =                  _GETTIME:	equ	#2C	;Get Time
                        
                        	;--- BIOS functions calls
                        
                        bios	macro	
                        	rst	#30
                        	db	0
                        	dw	\1
                        	endm
                        
000c =                  RDSLT	equ	#0C
006c =                  INITXT	equ	#006C
f3ae =                  linnl40	equ	#F3AE
005c =                  LDIRVM	equ	#5C
004a =                  RDVRM	equ	#4A
004d =                  WRTVRM	equ	#4D
0047 =                  WRTVDP	equ	#47	;C=R, B=Data
0056 =                  FILVRM	equ	#56
009f =                  CHGET	equ	#9F
00b1 =                  INLIN	equ	#B1
00b7 =                  BREAKX	equ	#B7
00c0 =                  BEEP	equ	#C0
00c3 =                  CLS	equ	#C3
00c6 =                  POSIT	equ	#C6
00d5 =                  GTSTCK  equ	#D5
                        
AS80 Assembler for i8080 [1.31].                                     Page    2
---------------------------------- M14.ASM -----------------------------------

                        
0024 =                  ENASLT:	equ	#0024
f342 =                  TPASLOT1:	equ	#F342
f847 =                  ARG:	equ	#F847
ffca =                  EXTBIO:	equ	#FFCA
fc9e =                  timer:	equ	#FC9E
                        
                        	;--- Scan code special buttons
                        
001b =                  ESC_	equ	27
001e =                  UP_  	equ	30
001f =                  DOWN_   equ	31
001d =                  LEFT_   equ	29
001c =                  RIGHT_  equ	28
0009 =                  TAB_	equ	9
0008 =                  BS_	equ	8
0018 =                  SELECT_	equ	24
000b =                  CLS_	equ	11
0012 =                  INC_	equ	18
007f =                  DEL_	equ	127
                        
                        	;--- TCP/IP UNAPI routines
                        
0001 =                  TCPIP_GET_CAPAB:	equ	1
0006 =                  TCPIP_DNS_Q:	equ	6
0007 =                  TCPIP_DNS_S:	equ	7
000d =                  TCPIP_TCP_OPEN:	equ	13
000e =                  TCPIP_TCP_CLOSE:	equ	14
000f =                  TCPIP_TCP_ABORT:	equ	15
0010 =                  TCPIP_TCP_STATE:	equ	16
0011 =                  TCPIP_TCP_SEND:	equ	17
0012 =                  TCPIP_TCP_RCV:	equ	18
001d =                  TCPIP_WAIT:	equ	29
                        
                        	;--- TCP/IP UNAPI error codes
                        
0000 =                  ERR_OK:			equ	0
0001 =                  ERR_NOT_IMP:		equ	1
0002 =                  ERR_NO_NETWORK:		equ	2
0003 =                  ERR_NO_DATA:		equ	3
0004 =                  ERR_INV_PARAM:		equ	4
0005 =                  ERR_QUERY_EXISTS:	equ	5
0006 =                  ERR_INV_IP:		equ	6
0007 =                  ERR_NO_DNS:		equ	7
0008 =                  ERR_DNS:		equ	8
0009 =                  ERR_NO_FREE_CONN:	equ	9
000a =                  ERR_CONN_EXISTS:	equ	10
000b =                  ERR_NO_CONN:		equ	11
000c =                  ERR_CONN_STATE:		equ	12
000d =                  ERR_BUFFER:		equ	13
000e =                  ERR_LARGE_DGRAM:	equ	14
000f =                  ERR_INV_OPER:		equ	15
                        
                        ;***   MAIN PROGRAM   ***
                        	; MSX-DOS start's *.com files at #100
0100 =                  	org	#100
0100 : 2ad148           	ld	hl,(chsas)
0103 : 11e704           	ld	de,1255
0106 : af               	xor	a
0107 : ed52             	sbc	hl,de
0109 : c0               	ret	nz
                        
AS80 Assembler for i8080 [1.31].                                     Page    3
---------------------------------- M14.ASM -----------------------------------

                        	;--- Checks the DOS version and establishes variable 
                        
010a : 0e6f             	ld	c,_DOSVER
010c : cd0500           	call	DOS
010f : b7               	or	a
0110 : 2012             	jr	nz,NODOS2
0112 : 78               	ld	a,b
0113 : fe02             	cp	2
0115 : 380d             	jr	c,NODOS2
                        
0117 : 3eff             	ld	a,#FF
0119 : 324220           	ld	(DOS2),a	;#FF for DOS 2, 0 for DOS 1
                        	print	USEDOS2_S
011c : 114320          >	ld	de,USEDOS2_S
011f : 0e09            >	ld	c,_STROUT
0121 : cd0500          >	call	DOS
                        
0124 :                  NODOS2:
                        	;--- Prints the presentation
                        	print	PRESENT_S
0124 : 115120          >	ld	de,PRESENT_S
0127 : 0e09            >	ld	c,_STROUT
0129 : cd0500          >	call	DOS
                        
                        	print	INFO_S
012c : 11ef20          >	ld	de,INFO_S
012f : 0e09            >	ld	c,_STROUT
0131 : cd0500          >	call	DOS
                        
                        
                        	;--- Checks if there are command line parameters.
                        	;    If not, prints information and finishes.
                        
0134 : 3e01             	ld	a,1
0136 : 118c33           	ld	de,BUFFER
0139 : cde21d           	call	EXTPAR
013c : 3809             	jr	c,NOPARA
                        ; convert filename.ext to FILENAMEEXT 8+3
013e : 218c33           	ld	hl,BUFFER
0141 : 11f545           	ld	DE,FCB+1
0144 : cd8f3a           	call	CFILENAME	
                        ;	print	FCB+1
                        
0147 :                  NOPARA:
                        	;--- Open file .ini, set user parametr's
0147 : 11f445           	ld	de,FCB
014a : 0e0f             	ld	c,_FOPEN
014c : cd0500           	call	DOS
014f : b7               	or	a
0150 : 110e21           	ld	de,NOINIF_S
0153 : c2851e           	jp	nz,PRINT_TERML
0156 : 118c33           	ld	de,BUFFER
0159 : 0e1a             	ld	c,_SDMA
015b : cd0500           	call	DOS
015e : 210100           	ld	hl,1	; set recod = 1 byte
0161 : 220246           	ld	(FCB+14),hl
0164 : 11f445           	ld	de,FCB
0167 : 210002           	ld	hl,512	; read 512 recod  
016a : 0e27             	ld	c,_RBREAD
016c : cd0500           	call	DOS
016f : 228932           	ld	(LBUFF),hl	
0172 : 118c33           	ld	de,BUFFER
AS80 Assembler for i8080 [1.31].                                     Page    4
---------------------------------- M14.ASM -----------------------------------

0175 : 19               	add	hl,de
0176 : af               	xor	a
0177 : 77               	ld	(hl),a		; 0 -> end record's
0178 : 11f445           	ld	de,FCB
017b : 0e10             	ld	c,_FCLOSE
017d : cd0500           	call	DOS
                        	;--- Extract user parametr's
0180 : ed4b8932         	ld	bc,(LBUFF)
0184 : 78               	ld	a,b
0185 : b1               	or	c
0186 : ca9e01           	jp	z,CHECKSL	;not recod
0189 : 218c33           	ld	hl,BUFFER
018c : fd211544         	ld	iy,WRDPA
0190 : cdb21f           	call	G_PA
0193 : 3a072e           	ld	a,(PA_ST)
                        ;	or	%11100100
                        ;	cp	%11111111
0196 : e640             	and	%01000000
0198 : c4bd3a           	call	nz,LOADFONT
                        ; aplicate color and timestump parametr
019b : cd9b40           	call	APP_PA
                        
                        ;
                        
019e :                  CHECKSL:
                        
                        
019e : fb               	ei
019f : 063c             	ld	b,60
01a1 : 76               Lsw:	halt
01a2 : 10fd             	djnz	Lsw
                        	
01a4 : cd093a           	call	INISCREEN
                        ; 1st screen ( info )
                        
                        ;	clear screen
01a7 : cd383b           	call 	CLS_G
01aa : cd003c           	call	LOAD_S
                        ; ini system windows
01ad : 21c445           	ld	hl,WCB4
01b0 : 117088           	ld	de,sWCB0
01b3 : 011800           	ld	bc,24
01b6 : edb0             	ldir
                        ; ini select page windows
01b8 : 21dc45           	ld	hl,WCB5
01bb : 118888           	ld	de,sWCB1
01be : 011800           	ld	bc,24
01c1 : edb0             	ldir
                        ; posit BIOS cursor
01c3 : 211900           	ld	hl,#0019 ;v-25
                        	bios	POSIT
01c6 : f7              >	rst	#30
01c7 : 00              >	db	0
01c8 : c600            >	dw	POSIT
                        
                        ; print system information
01ca : dd217088         	ld	ix,sWCB0
01ce : 010000           	ld	bc,0	
01d1 : ed437688         	ld	(sWCB0+6),bc ;set cursor
01d5 : 210441           	ld	hl,SYSMESS1
01d8 : cd553b           	call	PRINT_TW
01db : 3a072e           	ld	a,(PA_ST)
AS80 Assembler for i8080 [1.31].                                     Page    5
---------------------------------- M14.ASM -----------------------------------

01de : e640             	and	%01000000
01e0 : 2827             	jr	z,Ls01
01e2 : 3aee44           	ld	a,(fntsour)
01e5 : b7               	or	a
01e6 : 2809             	jr	z,Ls02
01e8 : 214341           	ld	hl,SM_fntLOAD
01eb : cd553b           	call	PRINT_TW
01ee : c30f02           	jp	LsSP1
01f1 : 216141           Ls02:	ld	hl,SM_fntLERR
01f4 : cd553b           	call	PRINT_TW
01f7 : 3aef44           	ld	a,(fferr)
01fa : c630             	add	a,"0"
01fc : cd5e3c           	call 	OUTC_TW
01ff : 3e0d             	ld	a,13
0201 : cd5e3c           	call	OUTC_TW
0204 : 3e0a             	ld	a,10
0206 : cd5e3c           	call	OUTC_TW
0209 : 212d41           Ls01:	ld	hl,SM_fntBIOS
020c : cd553b           	call	PRINT_TW
                        ; test 
                        ;	ld	b,8+13
                        ;	ld	hl,FCB+1
                        ;LsT1:	push 	hl
                        ;	ld	a,(hl)
                        ;	call OUTC_TW
                        ;	pop	hl
                        ;	inc	hl
                        ;	djnz	LsT1
                        ;	ld	a,13
                        ;	call	OUTC_TW
                        ;	ld	a,10
                        ;	call	OUTC_TW
                        ;
                        ;	ld	hl,PA_FONT
                        ;	call 	PRINT_TW
                        ;
                        ;	ld	de,(ttvar)
                        ;	ld	hl,BUFFER
                        ;	ld	b,5
                        ;	ld	c,0
                        ;	ld	a,%00001000
                        ;	call	NUMTOASC
                        ;	call	PRINT_TW
                        
                        ; end test
                        
020f :                  LsSP1:
020f : 3a4220           	ld	a,(DOS2)
0212 : b7               	or	a
0213 : c22102           	jp	nz,LsSPD2
                        	;--- DOS1 not mapper support
0216 : 21f842           	ld	hl,SM_DOS1MAP
0219 : cd553b           	call 	PRINT_TW
021c : cd182c           	call	INIMAPDOS1
021f : 182d             	jr	MAPPER3
                        
0221 :                  LsSPD2:
                        	;--- Get mapper support routines in DOS 2
0221 : 110204           	ld	de,#0402
0224 : af               	xor	a
0225 : cdcaff           	call	EXTBIO
0228 : dd217088         	ld	ix,sWCB0
AS80 Assembler for i8080 [1.31].                                     Page    6
---------------------------------- M14.ASM -----------------------------------

022c : b7               	or	a
022d : c23902           	jp	nz,MAPPER2
0230 : 21d042           	ld	hl,SM_NOMAPPER
0233 : cd553b           	call	PRINT_TW
0236 : c3aa02           	jp	NOMAPPER
0239 : 327a2c           MAPPER2:ld	(totmaps),a
023c : 79               	ld	a,c
023d : 327b2c           	ld	(freemaps),a
0240 : 11a22b           	ld	de,ALL_SEG
0243 : 013000           	ld	bc,16*3
0246 : edb0             	ldir
                        
0248 : 218941           	ld	hl,SM_D2MAPI
024b : cd553b           	call	PRINT_TW
024e :                  MAPPER3:
024e : 21ae41           	ld	hl,SM_D2M_TOT
0251 : cd553b           	call	PRINT_TW
0254 : 1600             	ld	d,0
0256 : 3a7a2c           	ld	a,(totmaps)
0259 : 5f               	ld	e,a
025a : 218c33           	ld	hl,BUFFER
025d : 0603             	ld	b,3
025f : 0e20             	ld	c," "
0261 : 3e08             	ld	a,%00001000
0263 : cd8c37           	call	NUMTOASC
0266 : cd553b           	call	PRINT_TW
0269 : 3e0d             	ld	a,13
026b : cd5e3c           	call	OUTC_TW
026e : 3e0a             	ld	a,10
0270 : cd5e3c           	call	OUTC_TW
                        
0273 : 21d241           	ld	hl,SM_D2M_FREE	
0276 : cd553b           	call	PRINT_TW
0279 : 1600             	ld	d,0
027b : 3a7b2c           	ld	a,(freemaps)
027e : 5f               	ld	e,a
027f : 218c33           	ld	hl,BUFFER
0282 : 0603             	ld	b,3
0284 : 0e20             	ld	c," "
0286 : 3e08             	ld	a,%00001000
0288 : cd8c37           	call	NUMTOASC
028b : cd553b           	call	PRINT_TW
028e : 3e0d             	ld	a,13
0290 : cd5e3c           	call	OUTC_TW
0293 : 3e0a             	ld	a,10
0295 : cd5e3c           	call	OUTC_TW
                        	
0298 : cdc92b           	call	GET_P2
029b : 327c2c           	ld	(P2_sys),a
                        
029e : fd215a2c         	ld	iy,EMAPTAB
02a2 : 3e10             	ld	a,16
02a4 :                  MAPPER4:
                        ;	push	af
                        ;	ld	d,0
                        ;	ld	e,(iy+1)
                        ;	ld	hl,BUFFER
                        ;	ld	b,9
                        ;	ld	c,0
                        ;	ld	a,%10001101
                        ;	call	NUMTOASC
                        ;	call	PRINT_TW
AS80 Assembler for i8080 [1.31].                                     Page    7
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	d,0
                        ;	ld	e,(iy+0)
                        ;	ld	hl,BUFFER
                        ;	ld	b,9
                        ;	ld	c,0
                        ;	ld	a,%10001101
                        ;	call	NUMTOASC
                        ;	call	PRINT_TW
                        ;	ld	a,13
                        ;	call	OUTC_TW
                        ;	ld	a,10
                        ;	call	OUTC_TW
                        ;	pop	af	
                        ;	inc	iy
                        ;	inc	iy
                        ;	dec	a
                        ;	jr	nz,MAPPER4
                        
                        	
                        
                        
                        
02a4 : cdc32b           	call	GET_P1		; TCP/IP calls use	
02a7 : 32cf1e           	ld	(TPASEG1),a
                        
                        
02aa :                  NOMAPPER:	; ******************************************
02aa :                  INITCP:
02aa : cdc32b           	call	GET_P1
02ad : 320241           	ld	(S_U),a		; save work mapper
02b0 : 3aa800           	ld	a,(#A8)
02b3 : 1f               	rra
02b4 : 1f               	rra
02b5 : f680             	or	%10000000
02b7 : e683             	and	%10000011
02b9 : 47               	ld	b,a
02ba : 3affff           	ld	a,(#FFFF)
02bd : eeff             	xor	#FF
02bf : e60c             	and	%00001100
02c1 : b0               	or	b
02c2 : 320341           	ld	(S_L),a
                        
                        
                        	;> From this point we can call TERMINATE to return to
                        
                        	;--- Search a TCP/IP UNAPI implementation
                        
02c5 : 21922b           	ld	hl,TCPIP_S	; API specification identifier (TCP/IP)
02c8 : 1147f8           	ld	de,ARG		;
02cb : 010f00           	ld	bc,15
02ce : edb0             	ldir
                        	
02d0 : af               	xor	a		; how many API (identifier) ?
02d1 : 47               	ld	b,a		;
02d2 : 112222           	ld	de,#2222	;
02d5 : cdcaff           	call	EXTBIO
02d8 : 78               	ld	a,b
02d9 : b7               	or	a		; =0 ?
02da : 21f329           	ld	hl,NOTCPIP_S
02dd : ca2f03           	jp	z,IUNAPID
                        
02e0 : 3e01             	ld	a,1		; 1-st API (identifier = TCP/IP)
AS80 Assembler for i8080 [1.31].                                     Page    8
---------------------------------- M14.ASM -----------------------------------

02e2 : 112222           	ld	de,#2222
02e5 : cdcaff           	call	EXTBIO		;A=slot , B=segment (#FF=not RAM), HL=en
                        				; page - 3 tehn A,B register not use  
                        	;--- Setup the UNAPI calling code
                        
                        ;	ld	(CALL_UNAPI+1),hl
02e8 : 22841f           	ld	(CALL_um+8),hl ;*
02eb : 229f1f           	ld	(CALL_U+17),hl ;*
                        
02ee : 4f               	ld	c,a
02ef : 7c               	ld	a,h
02f0 : fec0             	cp	#C0
02f2 : 79               	ld	a,c
02f3 : 380d             	jr	c,NO_UNAPI_P3
                        
                        ;	ld	a,#C9
                        ;	ld	(SET_UNAPI),a
02f5 : 3ec3             	ld	a,#C3		;*	
02f7 : 328e1f           	ld	(CALL_U),a	;* (JP XXXX (hl))
02fa : 228f1f           	ld	(CALL_U+1),hl	;*
                        
02fd : 21f641           	ld	hl,SM_UNAPI3
0300 : 1837             	jr	OK_SET_UNAPI
                        
0302 :                  NO_UNAPI_P3:
                        
                        ;	ld	(UNAPI_SLOT+1),a ; set slot UNAPI
0302 : 32931f           	ld	(CALL_U+5),a	; * slot UNAPI
0305 : 3a0341           	ld	a,(S_L)		; *
0308 : 32a61f           	ld	(CALL_U+24),a	; * slot work
                        
030b : 78               	ld	a,b
030c : feff             	cp	#FF
030e : 2005             	jr	nz,NO_UNAPI_ROM
                        	
                        ;	ld	a,#C9
                        ;	ld	(UNAPI_SEG),a
                        
0310 : 216342           	ld	hl,SM_UNAPIR
0313 : 1824             	jr	OK_SET_UNAPI
0315 :                  NO_UNAPI_ROM:
                        
                        ;	ld	(UNAPI_SEG+1),a
0315 : 327e1f           	ld	(CALL_um+2),a	; * UNAPI segment
0318 : 3a0241           	ld	a,(S_U)		; *
031b : 32881f           	ld	(CALL_um+12),a	; * work segment
031e : 217c1f           	ld	hl,CALL_um	; *
0321 : 118e1f           	ld	de,CALL_U	; *
0324 : 011200           	ld	bc,18		; *
0327 : edb0             	ldir			; *
                        
                        
0329 : 212442           	ld	hl,SM_UNAPIM
032c : c33903           	jp	OK_SET_UNAPI
032f :                  IUNAPID:
032f : 3ec9             	ld	a,#C9 ;(RET)
0331 : 328e1f           	ld	(CALL_U),a
0334 : 3e01             	ld	a,1
0336 : 32592c           	ld	(notcpip),a
0339 :                  OK_SET_UNAPI:
0339 : dd217088         	ld	ix,sWCB0
033d : cd553b           	call	PRINT_TW
AS80 Assembler for i8080 [1.31].                                     Page    9
---------------------------------- M14.ASM -----------------------------------

                        ; 
                        
                        
                        ;*****************************************************
                        ;	Root enter main programm
                        ;	System info, select work segment's open/close segmen
                        ;*****************************************************
0340 :                  SYS_S:	
0340 : 3a812c           	ld	a,(segp)
0343 : 32802c           	ld	(segsel),a
0346 :                  SYS_S1:
0346 : dd217088         	ld	ix,sWCB0
034a : 3a7c2c           	ld	a,(P2_sys)
034d : cdc62b           	call	PUT_P2
0350 : cd3d3f           	call	BFSegT
0353 : cdf53e           	call	BOSegT
0356 : cd003c           	call	LOAD_S
                        
                        
                        ; draw attribute cursor segment select (ix+10) 1..24 (
0359 : dd218888         	ld	ix,sWCB1
035d : cd1440           	call	CLAT_C_N
                        
0360 : cd3740           	call	SETAT_S
0363 : cded3b           	call	LOAD_SA
                        
0366 :                  LsSPW:	
                        
0366 : cd1818           	call	TCPSEP
0369 : cd633b           	call	CLOCK	
036c : 0e0b             	ld	c,_CONST
036e : cd0500           	call	DOS
0371 : b7               	or	a
0372 : 28f2             	jr	z,LsSPW
0374 : 0e07             	ld	c,_INNO
0376 : cd0500           	call	DOS
0379 : 47               	ld	b,a
                        ;	ld	a,(S_C)
                        ;	call	PUT_P2
037a : dd217088         	ld	ix,sWCB0
037e : 21ebfb           	ld	hl,#FBEB
0381 : 78               	ld	a,b
0382 : cb6e             	bit	5,(hl)
0384 : ca9e04           	jp	z,Ls_help
0387 : fe0d             	cp	#0D
0389 : caf103           	jp	z,Ls_GoTo
038c : fe1d             	cp	LEFT_
038e : ca2904           	jp	z,LsDEC
0391 : fe1e             	cp	UP_
0393 : ca2904           	jp	z,LsDEC
0396 : fe1f             	cp	DOWN_
0398 : ca5f04           	jp	z,LsINC
039b : fe1c             	cp	RIGHT_
039d : ca5f04           	jp	z,LsINC
03a0 : fe1b             	cp	27
03a2 : ca8304           	jp	z,Ls_ESC
03a5 : e65f             	and	%01011111
03a7 : fe53             	cp	"S"
03a9 : ca9906           	jp	z,SERV_C
03ac : fe51             	cp	"Q"
03ae : ca4916           	jp	z,EXIT
                        
AS80 Assembler for i8080 [1.31].                                     Page   10
---------------------------------- M14.ASM -----------------------------------

03b1 : c36603           	jp	LsSPW
03b4 :                  S_LEFT:
03b4 : 3a812c           	ld	a,(segp)
03b7 : 47               	ld	b,a
03b8 :                  S_L2:
03b8 : 05               	dec	b
03b9 : 3eff             	ld	a,#FF
03bb : b8               	cp	b
03bc : 2002             	jr	nz,S_L3
03be : 064f             	ld	b,79
03c0 : 78               S_L3:	ld	a,b		
03c1 : 17               	rla
03c2 : 5f               	ld	e,a
03c3 : 1600             	ld	d,0
03c5 : 21832c           	ld	hl,MAPTAB
03c8 : 19               	add	hl,DE
03c9 : 7e               	ld	a,(hl)
03ca : b7               	or	a
03cb : 28eb             	jr	z,S_L2
03cd : 78               S_L1:	ld	a,b
03ce : 32802c           	ld	(segsel),a
03d1 : c3f103           	jp	Ls_GoTo
                        
03d4 :                  S_RIGHT:
03d4 : 3a812c           	ld	a,(segp)
03d7 : 47               	ld	b,a
03d8 :                  S_R2:
03d8 : 04               	inc	b
03d9 : 3e4f             	ld	a,79
03db : b8               	cp	b
03dc : 3002             	jr	nc,S_R3
03de : 0600             	ld	b,0
03e0 : 78               S_R3:	ld	a,b		
03e1 : 17               	rla
03e2 : 5f               	ld	e,a
03e3 : 1600             	ld	d,0
03e5 : 21832c           	ld	hl,MAPTAB
03e8 : 19               	add	hl,DE
03e9 : 7e               	ld	a,(hl)
03ea : b7               	or	a
03eb : 28eb             	jr	z,S_R2
03ed : 78               S_R1:	ld	a,b
03ee : 32802c           	ld	(segsel),a
                        ;	jp	Ls_GoTo
                        
                        ; Go to on selected segment (channel/Query/Server/Help
                        
03f1 :                  Ls_GoTo:	
03f1 : cd1440           	call	CLAT_C_N
03f4 : cded3b           	call	LOAD_SA
03f7 : af               	xor	a
03f8 : 3a802c           	ld	a,(segsel)
03fb : 17               Ls_go1:	rla
03fc : 5f               	ld	e,a
03fd : 1600             	ld	d,0
03ff : 21832c           	ld	hl,MAPTAB
0402 : 19               	add	hl,DE
0403 : 7e               	ld	a,(hl)
0404 : e67f             	and	%01111111
0406 : fe48             	cp	"H"
0408 : ca9004           	jp	z,LsEnSH
040b : fe43             	cp	"C"
AS80 Assembler for i8080 [1.31].                                     Page   11
---------------------------------- M14.ASM -----------------------------------

040d : ca3c0c           	jp	z,LsEnCS
0410 : fe53             	cp	"S"
0412 : ca8b06           	jp	z,LsEnSS
0415 : fe51             	cp	"Q"
0417 : ca2512           	jp	z,LsEnQS
041a : 3a7c2c           	ld	a,(P2_sys)
041d : cdc62b           	call	PUT_P2
0420 : 211d43           	ld	hl,SM_LostSeg
0423 : cd553b           	call	PRINT_TW
0426 : c36603           	jp	LsSPW
0429 :                  LsDEC:
0429 : dd218888         	ld	ix,sWCB1
042d : dd7e0a           	ld	a,(ix+10)	
0430 : fe01             	cp	1
0432 : 2807             	jr	z,LsD1
0434 : 3d               	dec	a
0435 : dd770a           	ld	(ix+10),a
0438 : c34604           	jp	LsD2
043b : dd7e16           LsD1:	ld	a,(ix+22)
043e : b7               	or	a
043f : ca6603           	jp	z,LsSPW
0442 : 3d               	dec	a
0443 : dd7716           	ld	(ix+22),a
0446 : dd7e0a           LsD2:	ld	a,(ix+10)	
0449 : dd8616           	add	a,(ix+22)
                        ;	inc	a
044c : 210090           	ld	hl,#9000
044f : 113700           	ld	de,50+4+1
0452 : 3d               LsD4:	dec	a
0453 : 2803             	jr	z,LsD3
0455 : 19               	add	hl,de
0456 : 18fa             	jr	LsD4
0458 : 7e               LsD3:	ld	a,(hl)
0459 : 32802c           	ld	(segsel),a
                        
045c : c34603           	jp	SYS_S1
045f :                  LsINC:
045f : dd218888         	ld	ix,sWCB1
0463 : dd460a           	ld	b,(ix+10)
0466 : dd4e16           	ld	c,(ix+22)
0469 : 78               	ld	a,b
046a : 81               	add	a,c
046b : ddbe10           	cp	(ix+16)
046e : d26603           	jp	nc,LsSPW
0471 : 78               	ld	a,b
0472 : ddbe05           	cp	(ix+5)
0475 : 3006             	jr	nc,LsI1
0477 : 3c               	inc	a
0478 : dd770a           	ld	(ix+10),a
047b : 18c9             	jr	LsD2
047d : 0c               LsI1:	inc	c
047e : dd7116           	ld	(ix+22),c
0481 : 18c3             	jr	LsD2
                        
                        ; Go to back segment
0483 :                  Ls_ESC:
0483 : cd1440           	call	CLAT_C_N
0486 : cded3b           	call	LOAD_SA
0489 : af               	xor	a
048a : 3a812c           	ld	a,(segp)
048d : c3fb03           	jp	Ls_go1
                        
AS80 Assembler for i8080 [1.31].                                     Page   12
---------------------------------- M14.ASM -----------------------------------

                        
                        
0490 :                  LsEnSH:
                        ;************************************
                        ; Enter Help Segment
                        ;************************************
0490 : 23               	inc	hl
0491 : 7e               	ld	a,(hl)
0492 : 327d2c           	ld	(S_C),a
0495 : 3a802c           	ld	a,(segsel)
0498 : 32812c           	ld	(segp),a
049b : c37805           	jp	Hmcw	
                        
049e :                  Ls_help:
                        ;************************************
                        ; Select Help Segment (Open if need)	
                        ;************************************
                        ; clear kbd buffer
049e : cd913e           	call	CLKB
04a1 : cd1440           	call	CLAT_C_N
                        ; Find help segment
04a4 : 3e48             	ld	a,"H"
04a6 : 114646           	ld	de,helpdes
04a9 : cd0716           	call	SrS
04ac : 3806             	jr	c,Ls_h_noh
04ae : 327d2c           	ld	(S_C),a
04b1 : c37805           	jp	Hmcw
                        
                        ; Help segment not found, ini help segment
04b4 :                  Ls_h_noh:
                        ; get allocate record
04b4 : cdcf15           	call	ALL_REC
04b7 : 78               	ld	a,b
04b8 : 32812c           	ld	(segp),a
04bb : dae015           	jp	c,NO_REC
04be : e5               	push	hl
04bf : 3e00             	ld	a,0
04c1 : 0600             	ld	b,0
04c3 : cda22b           	call	ALL_SEG
04c6 : e1               	pop	hl
04c7 : dae915           	jp	c,NO_SEG
                        ; set record to H status
04ca : 3648             	ld	(hl),"H"
04cc : 23               	inc	hl
                        ; set segment mapper
04cd : 77               	ld	(hl),a
                        ; ini Help Segment
04ce : 327d2c           	ld	(S_C),a
04d1 : cdc62b           	call	PUT_P2
04d4 : cd383b           	call	CLS_G
                        
04d7 : 3a812c           	ld	a,(segp)
04da : 32bb88           	ld	(segs),a
                        
04dd : 1600             	ld	d,0
04df : 3abb88           	ld	a,(segs)
04e2 : 5f               	ld	e,a
04e3 : 210080           	ld	hl,#8000
04e6 : 0602             	ld	b,2
04e8 : 0e30             	ld	c,"0"
04ea : 3e00             	ld	a,%00000000
04ec : cd8c37           	call	NUMTOASC
AS80 Assembler for i8080 [1.31].                                     Page   13
---------------------------------- M14.ASM -----------------------------------

                        
04ef : 210380           	ld	hl,#8000+3
04f2 : 3648             	ld	(hl),"H"	; Help segment status
04f4 : 23               	inc	hl
04f5 : 23               	inc	hl
04f6 : 114646           	ld	de,helpdes	; Help segment descriptor
04f9 : eb               	ex	hl,de
04fa : 010400           	ld	bc,4
04fd : edb0             	ldir
                        
                        ; test block
                        ;	ex	hl,de
                        ;	ld	d,0
                        ;	ld	a,(S_C)
                        ;	ld	e,a
                        ;	ld	c,"0"
                        ;	ld	b,3
                        ;	ld	a,0
                        ;	inc	hl
                        ;	call	NUMTOASC
                        ; end test, block
                        
                        ;
04ff : 214c45           	ld	hl,WCB0		; help WCB template
0502 : 117088           	ld	de,sWCB0
0505 : 011800           	ld	bc,24
0508 : edb0             	ldir			; set WCB to segment
050a : dd217088         	ld	ix,sWCB0
                        ; load help file
050e : 212846           	ld	hl,FCBhelp+1+8+3
0511 : 061c             	ld	b,28
0513 : af               	xor	a
0514 : 77               LsHi2:	ld	(hl),a
0515 : 23               	inc	hl
0516 : 10fc             	djnz	LsHi2
0518 : 3a7c2c           	ld	a,(P2_sys)
051b : cdc62b           	call	PUT_P2
051e : 111c46           	ld	de,FCBhelp
0521 : 0e0f             	ld	c,_FOPEN
0523 : cd0500           	call	DOS	
0526 : 110090           	ld	de,#9000
0529 : 0e1a             	ld	c,_SDMA
052b : cd0500           	call	DOS
052e : 210100           	ld	hl,1
0531 : 222a46           	ld	(FCBhelp+14),hl
0534 : 111c46           	ld	de,FCBhelp
0537 : 21ff2f           	ld	hl,#BFFF-#9000
053a : 0e27             	ld	c,_RBREAD
053c : cd0500           	call	DOS
053f : 22e844           	ld	(var2),hl
0542 : 111c46           	ld	de,FCBhelp
0545 : 0e10             	ld	c,_FCLOSE
0547 : cd0500           	call	DOS
                        ;	ld	h,0	;
                        ;	ld	l,26	;
                        ; copy help buffer to help segment
054a : 210090           	ld	hl,#9000;
054d :                  LsHi1:
054d : 3a7c2c           	ld	a,(P2_sys)
0550 : cdc62b           	call	PUT_P2
0553 : 7e               	ld	a,(hl)
0554 : 47               	ld	b,a
AS80 Assembler for i8080 [1.31].                                     Page   14
---------------------------------- M14.ASM -----------------------------------

0555 : 3a7d2c           	ld	a,(S_C)
0558 : cdc62b           	call	PUT_P2
055b : 78               	ld	a,b
055c : 77               	ld	(hl),a
055d : 23               	inc	hl
055e : 7c               	ld	a,h
055f : fec0             	cp	#C0
0561 : 20ea             	jr	nz,LsHi1
                        ; set size help bufer
0563 : dd217088         	ld	ix,sWCB0
0567 : 2ae844           	ld	hl,(var2)
056a : ed5b7c88          	ld	de,(sWCB0+12)	;#9000 text buffer
056e : 19               	add	hl,de
056f : 228088           	ld	(sWCB0+16),hl	; end buffer 
                        
0572 : cd3d3f           	call 	BFSegT	; rebuld active segment tabl
                        
0575 : c37805           	jp	Hmcw	; Help screen operations
                        
0578 :                  Hmcw:
                        ; bufer[ix+18] -> screen[cur]	
0578 : 3a7d2c           	ld	a,(S_C)
057b : cdc62b           	call	PUT_P2
                        
                        
                        ; set segment information attributes
057e : cdb53f           	call	SSIA
                        
0581 : dd217088                 ld	ix,sWCB0	;WCB
0585 : cd683e           	call	CLS_TW
0588 : 2a8288           	ld	hl,(sWCB0+18)
058b : af               	xor	a
058c : dd7706           	ld	(ix+6),a
058f : dd7707           	ld	(ix+7),a
0592 : dd7715           	ld	(ix+21),a
0595 : 3c               	inc	a
                        ;	ld	(ix+11),a		; test load
0596 : dd7e07           Hmcw2:   ld	a,(ix+7) ;v pos
0599 : dd4e05           	ld	c,(ix+5) ;v max
059c : b9               	cp	c
059d : f2c005           	jp	p,Hmcw1   ; y posit > max y (out of screen)
05a0 : ed5b8088         	ld	de,(sWCB0+16)
05a4 : 7d               	ld	a,l
05a5 : 93               	sub	e
05a6 : 7c               	ld	a,h
05a7 : 9a               	sbc	a,d
05a8 : 3011             	jr	nc,Hmcw3  ; out of buffer
05aa : 7e               	ld	a,(hl)
05ab : 23               	inc	hl
05ac : fe0a             	cp	#0A
05ae : 2003             	jr	nz,Hmcw0
05b0 : 228688           	ld	(sWCB0+22),hl	
05b3 : e5               Hmcw0:	push	hl
05b4 : cd5e3c           	call	OUTC_TW
05b7 : e1               	pop	hl
05b8 : c39605           	jp	Hmcw2
05bb :                  Hmcw3:
05bb : 3e01             	ld	a,1
05bd : dd7715           	ld	(ix+21),a	; out of buffer
05c0 :                  Hmcw1:
05c0 : cd003c           	call 	LOAD_S
                        ; operations 
AS80 Assembler for i8080 [1.31].                                     Page   15
---------------------------------- M14.ASM -----------------------------------

                        ;	bios	CHGET
05c3 :                  HmwcG:
05c3 : cd633b           	call	CLOCK
05c6 : cd1818           	call	TCPSEP
05c9 : c3a115           	jp	SEL_RE
05cc :                  HLP_RE:
05cc : cdf43f           	call	L_SIA	
05cf : 0e0b             	ld	c,_CONST
05d1 : cd0500           	call	DOS
05d4 : b7               	or	a
05d5 : 28ec             	jr	z,HmwcG
05d7 : 0e07             	ld	c,_INNO
05d9 : cd0500           	call	DOS
05dc : 47               	ld	b,a
05dd : 3a7d2c           	ld	a,(S_C)
05e0 : cdc62b           	call	PUT_P2
05e3 : 78               	ld	a,b
05e4 : 21ebfb           	ld	hl,#FBEB
                        
                        ; control end
                        
05e7 : dd217088         	ld	ix,sWCB0
05eb : fe1b             	cp	ESC_
05ed : ca6f06           	jp	z,Hmcw_EX
05f0 : fe1e             	cp	UP_
05f2 : 281f             	jr	z,HmcwUP
05f4 : fe1f             	cp	DOWN_
05f6 : 2847             	jr	z,HmcwDOWN
05f8 : cb4e             	bit	1,(hl)
05fa : 2803             	jr	z,HmcWCTRL
05fc : c37805           	jp	Hmcw
05ff :                  HmcWCTRL:
05ff : fe1d             	cp	LEFT_
0601 : cab403           	jp	z,S_LEFT
0604 : fe1c             	cp	RIGHT_
0606 : cad403           	jp	z,S_RIGHT
0609 : e65f             	and	%01011111
                        ;	cp	5 ; (CTRL-E); "E"
060b : fe11             	cp	17	; CPTL+Q
060d : ca7806           	jp	z,HmcwCLOSE
0610 : c37805           	jp	Hmcw
                        	
0613 :                  HmcwUP:
0613 : 0601             	ld	b,1
0615 : 21ebfb           	ld	hl,#FBEB
0618 : cb46             	bit	0,(hl)
061a : 2003             	jr	nz,Hmcw_UP2
061c : dd4605           	ld	b,(ix+5)		; *
061f :                  Hmcw_UP2:
061f : 2a8288           	ld	hl,(sWCB0+18)
0622 : ed5b7c88         	ld	de,(sWCB0+12)       ; top buffer
0626 : 2b               	dec	hl
0627 :                  Hmcw_UP1:
0627 : af               	xor	a
0628 : e5               	push	hl
0629 : ed52             	sbc	hl,de
062b : e1               	pop	hl
062c : fa3806           	jp	m,Hmcw_UP3
062f : 2b               	dec	hl
0630 : 7e               	ld	a,(hl)
0631 : fe0a             	cp	#0A
0633 : 20f2             	jr	nz,Hmcw_UP1
AS80 Assembler for i8080 [1.31].                                     Page   16
---------------------------------- M14.ASM -----------------------------------

0635 : 05               	dec	b
0636 : 20ef             	jr	nz,Hmcw_UP1
0638 :                  Hmcw_UP3:
0638 : 23               	inc	hl
0639 : 228288           	ld	(sWCB0+18),hl
063c : c37805           	jp	Hmcw
063f :                  HmcwDOWN:
063f : dd7e15           	ld	a,(ix+21)
                        
0642 : b7               	or	a          ; out of buffer
0643 : c27805           	jp	nz,Hmcw
0646 : 21ebfb           	ld	hl,#FBEB
0649 : cb46             	bit	0,(hl)
064b : 200f             	jr	nz,Hmcw_DW0
064d : dd7e16           	ld	a,(ix+22)
0650 : dd7712           	ld	(ix+18),a
0653 : dd7e17           	ld	a,(ix+23)
0656 : dd7713           	ld	(ix+19),a
0659 : c37805           	jp	Hmcw
                        
065c :                  Hmcw_DW0:
065c : 2a8288           	ld	hl,(sWCB0+18)
065f :                  Hmcw_DW1:
                        ;	ld	a,(hl)
                        ;	inc	hl
                        ;	cp	#0A
                        ;	jr	nz,mcw_DW1
065f : 3e0a             	ld	a,#0A
0661 : 010000           	ld	bc,0
0664 : edb1             Hmcw_DW2	cpir
0666 : c26406           	jp	nz,Hmcw_DW2
                        
0669 : 228288           	ld	(sWCB0+18),hl
066c : c37805           	jp	Hmcw
066f :                  Hmcw_EX:
066f : 3a812c           	ld	a,(segp)
0672 : 32802c           	ld	(segsel),a
0675 : c34003           	jp	SYS_S
0678 :                  HmcwCLOSE:
0678 : 3a812c           	ld	a,(segp)
067b : cdbb15           	call	FRE_RECS
067e : cd3d3f           	call	BFSegT
0681 : dd7e10           	ld	a,(ix+16)
0684 : b7               	or 	a
0685 : ca4003           	jp	z,SYS_S
0688 : c3b403           	jp	S_LEFT;
                        
068b :                  LsEnSS:
                        ;*****************************************
                        ; Enter Server Segment
                        ;*****************************************
068b : 23               	inc	hl
068c : 7e               	ld	a,(hl)
068d : 327d2c           	ld	(S_C),a
0690 : 3a802c           	ld	a,(segsel)
0693 : 32812c           	ld	(segp),a
0696 : c39c07           	jp	SRVC
                        
                        
                        
                        ;Create Server record (Server Console)
0699 :                  SERV_C:
AS80 Assembler for i8080 [1.31].                                     Page   17
---------------------------------- M14.ASM -----------------------------------

                        ;*****************************************
                        ; Server control segment
                        ;*****************************************
0699 : cd913e           	call	CLKB			; clear kbd buffer
069c : cd1440           	call	CLAT_C_N		; clear attribute channel (server)
                        ;
069f : 3af444           	ld	a,(serv1)		
06a2 : b7               	or	a
06a3 : c2f215           	jp	nz,NO_SERV		; server record exist
                        
06a6 : cdcf15           	call	ALL_REC			
06a9 : 78               	ld	a,b
06aa : 32812c           	ld	(segp),a
06ad : dae015           	jp	c,NO_REC
06b0 : e5               	push	hl
06b1 : 3e00             	ld	a,0
06b3 : 0600             	ld	b,0
06b5 : cda22b           	call	ALL_SEG
06b8 : e1               	pop	hl
06b9 : dae915           	jp	c,NO_SEG
                        ; set record to S status
06bc : 3653             	ld	(hl),"S"
06be : 23               	inc	hl
                        ; set segmet mapper
06bf : 77               	ld	(hl),a
                        ; Ini Server control segment
06c0 : 327d2c           	ld	(S_C),a
06c3 : 328a2d           	ld	(serv1s+1),a		; mapper segment N save to sw
06c6 : cdc62b           	call	PUT_P2
06c9 : cd383b           	call	CLS_G			; global screen clear
06cc : 3e01             	ld	a,1
06ce : 32f444           	ld	(serv1),a		; set exsist server record
                        
06d1 : 3a812c           	ld	a,(segp)
06d4 : 32bb88           	ld	(segs),a	
06d7 : 32892d           	ld	(serv1s),a		; save N record
                        
06da : 1600             	ld	d,0
06dc : 3abb88           	ld	a,(segs)	; N segment record
06df : 5f               	ld	e,a		
06e0 : 210080           	ld	hl,#8000	
06e3 : 0602             	ld	b,2
06e5 : 0e30             	ld	c,"0"
06e7 : 3e00             	ld	a,%00000000
06e9 : cd8c37           	call	NUMTOASC
06ec : 210380           	ld	hl,#8000+3
06ef : 3653             	ld	(hl),"S"	; S descriptor
06f1 : 23               	inc	hl
06f2 : 23               	inc	hl
06f3 : fd215f2e         	ld	iy,PA_SERVER	; Server name -> name record
06f7 : 063c             	ld	b,60	; ***
06f9 : fd7e00           SRVC2:	ld	a,(iy)
06fc : b7               	or	a
06fd : 2806             	jr	z,SRVC1
06ff : 77               	ld	(hl),a
0700 : 23               	inc	hl
0701 : fd23             	inc	iy
0703 : 10f4             	djnz	SRVC2
0705 :                  SRVC1:
                        ; test block
                        ;       			; print # map segment
                        ;        ld      d,0
AS80 Assembler for i8080 [1.31].                                     Page   18
---------------------------------- M14.ASM -----------------------------------

                        ;        ld      a,(S_C)
                        ;        ld      e,a
                        ;        ld      c,"0"
                        ;        ld      b,3
                        ;        ld      a,0
                        ;		
                        ;       inc     hl
                        ;        call    NUMTOASC
                        ;	not realise ?
                        ; end test, block
                        
0705 : 216445           	ld	hl,WCB01 	; server WCB template
0708 : 117088           	ld	de,sWCB0
070b : 011800           	ld	bc,24
070e : edb0             	ldir
0710 : dd217088         	ld	ix,sWCB0
                        ; Information block
                        
0714 : 21582e           	ld	hl,AA_SERVER
0717 : cda609           	call	PRINT_BF
071a : 21552e           	ld	hl,AA_CRLF
071d : cda609           	call	PRINT_BF	
0720 : 215f2f           	ld	hl,AA_PORT
0723 : cda609           	call	PRINT_BF
0726 : 21552e           	ld	hl,AA_CRLF
0729 : cda609           	call	PRINT_BF
072c : 216e2f           	ld	hl,AA_SRVPASS
072f : cda609           	call	PRINT_BF
0732 : 21552e           	ld	hl,AA_CRLF
0735 : cda609           	call	PRINT_BF
0738 : 218f2f           	ld	hl,AA_NICK
073b : cda609           	call	PRINT_BF
073e : 21552e           	ld	hl,AA_CRLF
0741 : cda609           	call	PRINT_BF
0744 : 21b52f           	ld	hl,AA_ANICK
0747 : cda609           	call	PRINT_BF
074a : 21552e           	ld	hl,AA_CRLF
074d : cda609           	call	PRINT_BF
0750 : 21de2f           	ld	hl,AA_USER
0753 : cda609           	call	PRINT_BF
0756 : 21552e           	ld	hl,AA_CRLF
0759 : cda609           	call	PRINT_BF
075c : 217443           	ld	hl,SM_CONNS
075f : cda609           	call	PRINT_BF
                        ; 
                        
                        ; 				ini windows enter string
0762 : 21ac45           	ld	hl,WCB3
0765 : 11a088           	ld	de,sWCB2
0768 : 011800           	ld	bc,24
076b : edb0             	ldir
076d : dd21a088         	ld	ix,sWCB2
0771 : cd683e           	call	CLS_TW	
                        
                        ; ini cursor
0774 : af               	xor	a
0775 : 32b888           	ld	(oldcur),a
0778 : 32b988           	ld	(oldcur+1),a
                        ;	inc	a
077b : 32ba88           	ld	(oldcur+2),a
                        ; clear ct buffer
077e : 21008a           	ld	hl,#8A00
AS80 Assembler for i8080 [1.31].                                     Page   19
---------------------------------- M14.ASM -----------------------------------

0781 : 010e01           	ld	bc,270
0784 : af               Swi4:	xor	a
0785 : 77               	ld	(hl),a
0786 : 23               	inc	hl
0787 : 0b               	dec	bc
0788 : 78               	ld	a,b
0789 : b1               	or	c
078a : 20f8             	jr	nz,Swi4
                        
078c : cd003c           	call	LOAD_S
                        ;	ini buffer for back loading
                        
078f : 211900           	ld	hl,#0019 ;v-25
                        	bios	POSIT
0792 : f7              >	rst	#30
0793 : 00              >	db	0
0794 : c600            >	dw	POSIT
                        
0796 : cd913e           	call	CLKB
0799 : cd3d3f           	call	BFSegT		; rebuild active segmrnt tabl
                        
                        
079c :                  SRVC:
                        	
079c :                  SRVw:
079c : 3a7d2c           	ld	a,(S_C)
079f : cdc62b           	call	PUT_P2
07a2 : cdb53f           	call	SSIA
                        
07a5 : dd21a088         	ld	ix,sWCB2
                        
07a9 : 2aa288           	ld	hl,(sWCB2+2)	;*
07ac : 1600             	ld	d,0
07ae : dd5e06           	ld	e,(ix+6)
07b1 : 19               	add	hl,de
07b2 : cdd13d           	call	CURSOR
07b5 : cd003c           	call	LOAD_S
                        
07b8 :                  SRVC0:				; macros auto
07b8 : ed4bcd46         	ld	bc,(tsb)
07bc : 78               	ld	a,b
07bd : b1               	or	c
07be : 2810             	jr	z,SRVCB
07c0 : 0b               	dec	bc
07c1 : ed43cd46         	ld	(tsb),bc
07c5 : 2acf46           	ld	hl,(tsb+2)
07c8 : 7e               	ld	a,(hl)
07c9 : 23               	inc	hl
07ca : 22cf46           	ld	(tsb+2),hl
07cd : c3f407           	jp	SRVCC
07d0 :                  SRVCB:
07d0 : cd1818           	call	TCPSEP
07d3 : 3a8f2d           	ld	a,(req)
07d6 : fe01             	cp	1
07d8 : ca6f0c           	jp	z,CHANNEL_CREATE	;CHANNEL_CREATE
07db : c3a115           	jp	SEL_RE
07de :                  SRV_RE:
07de : cdf43f           	call	L_SIA
                        ;	ld	a,"s"
                        ;	ld	(#8000+2),a
                        
07e1 : cd550c           	call	newsload
AS80 Assembler for i8080 [1.31].                                     Page   20
---------------------------------- M14.ASM -----------------------------------

                        
07e4 : cd633b           	call	CLOCK
                        			; keyboard input
07e7 : 0e0b             	ld	c,_CONST
07e9 : cd0500           	call	DOS
07ec : b7               	or	a
07ed : 28c9             	jr	z,SRVC0
07ef : 0e07             	ld	c,_INNO
07f1 : cd0500           	call	DOS
07f4 :                  SRVCC:
07f4 : 47               	ld	b,a
07f5 : 3a7d2c           	ld	a,(S_C)
07f8 : cdc62b           	call	PUT_P2
07fb : dd21a088         	ld	ix,sWCB2
07ff : 21ebfb           	ld	hl,#FBEB
0802 : 78               	ld	a,b
                        
0803 : cb7e             	bit	7,(hl)
0805 : cac20b           	jp	z,SRV_F3
0808 : cb76             	bit	6,(hl)
080a : ca950b           	jp	z,SRV_F2
080d : cb6e             	bit	5,(hl)
080f : ca9e04           	jp	z,Ls_help ; JMP HELP
0812 : fe0d             	cp	#0D
0814 : ca6d09           	jp	z,SRV_se
0817 : fe1b             	cp	ESC_
0819 : ca8c0b           	jp	z,SRV_EX
081c : fe0b             	cp	11	; CLS/HOME cancel view buffer chancel
081e : ca060b           	jp	z,SRV_home
0821 : fe1e             	cp	UP_
0823 : ca160b           	jp	z,SRV_UP
0826 : fe1f             	cp	DOWN_
0828 : ca270b           	jp	z,SRV_DW
082b : fe26             	cp	"&"
082d : cad00b           	jp	z,SRV_F4
                        	
                        ;	cp	24	; SELECT
                        ;	jp	z,SRV_contr
                        
                        ; edit enter string
0830 : fe08             	cp	8 ; "BS" <-
0832 : ca3309           	jp	z,SRV_bs
0835 : fe12             	cp	18 ; INS
0837 : caa008           	jp	z,SRV_ins
083a : fe7f             	cp	127 ; DEL
083c : ca0809           	jp	z,SRV_del	
083f : fe1d             	cp	LEFT_
0841 : caaa08           	jp	z,SRV_left
0844 : fe1c             	cp	RIGHT_
0846 : cad408           	jp	z,SRV_right
                        
                        ; regular char	
0849 : 08               	ex	af,af'
084a : 3ae744           	ld	a,(s_ins)
084d : b7               	or	a
084e : 281c             	jr	z,SRV_r4    ; no insret option
                        ;	ld	l,(ix+16)   ; b_end
                        ;	ld	h,(ix+17)
0850 : 2ab088           	ld	hl,(sWCB2+16) ;*
0853 : 5d               	ld	e,l
0854 : 54               	ld	d,h
0855 : 2b               	dec	hl
AS80 Assembler for i8080 [1.31].                                     Page   21
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	c,(ix+18)   ; b_cur
                        ;	ld	b,(ix+19)
0856 : ed4bb288         	ld	bc,(sWCB2+18)
085a : af               	xor	a
085b : ed42             	sbc	hl,bc
085d : 380d             	jr	c,SRV_r4    ; no right part string
085f : 23               	inc	hl
0860 : 4d               	ld	c,l
0861 : 44               	ld	b,h
0862 : 6b               	ld	l,e
0863 : 62               	ld	h,d
0864 : 13               	inc	de
                        ;	ld	(ix+16),e   ; b_end ++
                        ;	ld	(ix+17),d
0865 : ed53b088         	ld	(sWCB2+16),de
0869 : 03               	inc	bc
086a : edb8             	lddr                ; scroll 
086c : 08               SRV_r4:	ex	af,af'
                        ; save cahr to buff
                        ;	ld	l,(ix+18)   ; b curs
                        ;	ld	h,(ix+19)
086d : 2ab288           	ld	hl,(sWCB2+18)
0870 : 77               	ld	(hl),a
0871 : 23               	inc	hl
                        ;	ld	(ix+18),l
                        ;	ld	(ix+19),h
0872 : 22b288           	ld	(sWCB2+18),hl
                        ;	ld	e,(ix+16)   ; b end
                        ;	ld	d,(ix+17)
0875 : ed5bb088         	ld	de,(sWCB2+16)
0879 : af               	xor	a
087a : ed52             	sbc	hl,de
087c : 3805             	jr	c,SRV_r3
087e : 13               	inc	de
                        ;	ld	(ix+16),e   ; inc b_end
                        ;	ld	(ix+17),d
087f : ed53b088         	ld	(sWCB2+16),de
0883 :                  SRV_r3:
                        ;
0883 : dd7e06           	ld	a,(ix+6)
0886 : dd4604           	ld	b,(ix+4)
0889 : 05               	dec	b
088a : b8               	cp	b           ; screen cursor end positoin ?
088b : 3006             	jr	nc,SRV_r1   ; y
088d : 3c               	inc	a           ; no, inc h-cur
088e : dd7706           	ld	(ix+6),a
0891 : 1807             	jr	SRV_r2
0893 :                  SRV_r1:	
                        ;	ld	l,(ix+22)   ; inc star out buf
                        ;	ld	h,(ix+23)
0893 : 2ab688           	ld	hl,(sWCB2+22)
0896 : 23               	inc	hl
                        ;	ld	(ix+22),l
                        ;	ld	(ix+23),h
0897 : 22b688           	ld	(sWCB2+22),hl
089a :                  SRV_r2:
                        
089a : cd253e           	call	OUTSTRW
                        ;	call	OUTC_TW
089d : c39c07           	jp	SRVw
08a0 :                  SRV_ins
08a0 : 3ae744           	ld	a,(s_ins)
AS80 Assembler for i8080 [1.31].                                     Page   22
---------------------------------- M14.ASM -----------------------------------

08a3 : 2f               	cpl	
08a4 : 32e744           	ld	(s_ins),a
08a7 : c39c07           	jp	SRVw
08aa :                  SRV_left:
08aa : cb4e             	bit	1,(hl)
08ac : cab403           	jp	z,S_LEFT
                        ;	ld	e,(ix+18)	; b_cur
                        ;	ld	d,(ix+19)
08af : ed5bb288         	ld	de,(sWCB2+18)
                        ;	ld	l,(ix+12)	; buff
                        ;	ld	h,(ix+13)
08b3 : 2aac88           	ld	hl,(sWCB2+12)
08b6 : af               	xor	a	
08b7 : ed52             	sbc	hl,de	; |<- X
08b9 : d29c07           	jp	nc,SRVw ; no LEFT
08bc : 1b               	dec	de
                        ;	ld	(ix+18),e
                        ;	ld	(ix+19),d
08bd : ed53b288         	ld	(sWCB2+18),de
                        ; LEFT
08c1 : dd3506                   dec	(ix+6)   ; c_cur --
08c4 : f2ce08           	jp	p,SRVL1  ; > 0 norm
08c7 : dd3406           	inc	(ix+6)   ; c_cur ++     
                        ;	ld	(ix+22),e       ; then  (stout) := (cur)
                        ;	ld	(ix+23),d
08ca : ed53b688         	ld	(sWCB2+22),de
08ce :                  SRVL1:	
                        	
08ce : cd253e           	call	OUTSTRW
08d1 : c39c07           	jp	SRVw
                        
08d4 :                  SRV_right:
08d4 : cb4e             	bit	1,(hl)
08d6 : cad403           	jp	z,S_RIGHT
                        ;	ld	e,(ix+18) ; b_cur
                        ;	ld	d,(ix+19)
08d9 : ed5bb288         	ld	de,(sWCB2+18)
                        ;	ld	l,(ix+16) ; b_end
                        ;	ld	h,(ix+17)
08dd : 2ab088           	ld	hl,(sWCB2+16)
                        ;	dec	hl
08e0 : 13               	inc	de
08e1 : af               	xor	a
08e2 : ed52             	sbc	hl,de
08e4 : da9c07           	jp	c,SRVw    ; ->| X
                        ;	ld	(ix+18),e
                        ;	ld	(ix+19),d
08e7 : ed53b288         	ld	(sWCB2+18),de
08eb : dd4604           	ld	b,(ix+4)   ; H-size
08ee : dd7e06           	ld	a,(ix+6)   ; h_cur
08f1 : 3c               	inc	a
08f2 : b8               	cp	b
08f3 : d2fb08           	jp	nc,SRV_R1
08f6 : dd7706           	ld	(ix+6),a
08f9 : 1807             	jr	SRV_R2
08fb :                  SRV_R1:
                        ;	ld	l,(ix+22)
                        ;	ld	h,(ix+23)
08fb : 2ab688           	ld	hl,(sWCB2+22)
08fe : 23               	inc	hl
                        ;	ld	(ix+22),l
                        ;	ld	(ix+23),h
AS80 Assembler for i8080 [1.31].                                     Page   23
---------------------------------- M14.ASM -----------------------------------

08ff : 22b688           	ld	(sWCB2+22),hl
                        
0902 : cd253e           SRV_R2:	call	OUTSTRW
0905 : c39c07           	jp	SRVw
0908 :                  SRV_del:
                        ;	ld	l,(ix+18) ; b_cur
                        ;	ld	h,(ix+19)
0908 : 2ab288           	ld	hl,(sWCB2+18)
                        ;	ld	e,(ix+16) ; b_end
                        ;	ld	d,(ix+17) ; if b_cur > b_end -> exit ; if b_cur =
090b : ed5bb088         	ld	de,(sWCB2+16)
                        ;	inc	hl
090f : 1b               	dec	de
0910 : af               	xor	a
0911 : ed52             	sbc	hl,de
0913 : 3803             	jr	c,SRV_del1   ; -1
0915 : c29c07           	jp	nz,SRVw      ; 1
0918 :                  SRV_del1
                        ;	ld	(ix+16),e ; dec b_end
                        ;	ld	(ix+17),d
0918 : ed53b088         	ld	(sWCB2+16),de
091c : 280f             	jr	z,SRV_del2   ; 0
                        ; scroll right part string
091e : 13               	inc 	de
091f : af               	xor	a
0920 : 19               	add	hl,de	
                        			; hl = b_cur  de = b_end-1 old
0921 : eb               	ex	hl,de   ; hl = b_end new de = B_cur
0922 : ed52             	sbc	hl,de   ; 
0924 : 4d               	ld	c,l
0925 : 44               	ld	b,h
0926 : 6b               	ld	l,e
0927 : 62               	ld	h,d
0928 : 2b               	dec	hl
0929 : 03               	inc	bc
092a : eb               	ex	hl,de  ;
092b : edb0             	ldir           
                        
                        
092d :                  SRV_del2:
092d : cd253e                   call	OUTSTRW
0930 : c39c07           	jp	SRVw
                        ; "back space" delete last symlol hposit --
0933 :                  SRV_bs:
                        ;	ld	l,(ix+12) ;buff	
                        ;	ld	h,(ix+13)
0933 : 2aac88           	ld	hl,(sWCB2+12)
                        ;	ld	e,(ix+18) ;cur
                        ;	ld	d,(ix+19)
0936 : ed5bb288         	ld	de,(sWCB2+18)
093a : af               	xor	a
093b : ed52             	sbc	hl,de     ; |<- X
093d : d29c07           	jp	nc,SRVw   ; no BS
0940 : 1b               	dec	de
                        ;	ld	(ix+18),e
                        ;	ld	(ix+19),d
0941 : ed53b288         	ld	(sWCB2+18),de
                        
                        ; bs		
0945 : dd3506                   dec	(ix+6)   ; c_cur --
0948 : f25209           	jp	p,SRVbs1  ; > 0 norm
094b : dd3406           	inc	(ix+6)   ; c_cur ++     
AS80 Assembler for i8080 [1.31].                                     Page   24
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	(ix+22),e       ; then  (stout) := (cur)
                        ;	ld	(ix+23),d
094e : ed53b788         	ld	(sWCB2+23),de
0952 :                  SRVbs1:	
                        ;scroll right part strint to left on 1 byte
                        ;	ld	l,(ix+16)	; end buff
                        ;	ld	h,(ix+17)
0952 : 2ab088           	ld	hl,(sWCB2+16)
0955 : 2b               	dec	hl              ; endbuff--
                        ;	ld	(ix+16),l	
                        ;	ld	(ix+17),h
0956 : 22b088           	ld	(sWCB2+16),hl
0959 : af               	xor	a
095a : ed52             	sbc	hl,de
095c : 7c               	ld	a,h
095d : b5               	or	l
095e : 2807             	jr	z,SRVbs2
0960 : 4d               	ld	c,l
0961 : 44               	ld	b,h
0962 : 6b               	ld	l,e
0963 : 62               	ld	h,d
0964 : 23               	inc	hl
0965 : edb0             	ldir
                        
0967 :                  SRVbs2:	
0967 : cd253e           	call	OUTSTRW
096a : c39c07           	jp	SRVw
                        
096d :                  SRV_se:
                        ;
096d : cd683e           	call	CLS_TW     ; clear enter string of screen
0970 : af               	xor	a
0971 : dd7706           	ld	(ix+6),a
0974 : dd7707           	ld	(ix+7),a
                        
0977 : 2ab088           	ld	hl,(sWCB2+16)
097a : 360d             	ld	(hl),#0D
097c : 23               	inc	hl
097d : 360a             	ld	(hl),#0A
097f : 23               	inc	hl	   ; curs
                        
0980 : ed5bac88         	ld	de,(sWCB2+12) ;buff
                        
0984 : ed53b288         	ld	(sWCB2+18),de ; curs
                        
0988 : ed53b688         	ld	(sWCB2+22),de
098c : ed53da44         	ld	(bbuf),de  ;
                         
0990 : af               	xor	a
0991 : ed52             	sbc	hl,de
0993 : 22dc44           	ld	(lenb),hl  ;		
                        
0996 : ed53b088         	ld	(sWCB2+16),de
                        ;
                        
099a : 7e               	ld	a,(hl)
099b : fe0d             	cp	13
099d : ca9c07           	jp	z,SRVw	; epmty string not send
                        	
09a0 : cdda09           	call BuffOU
09a3 : c39c07           	jp 	SRVw	
                        
AS80 Assembler for i8080 [1.31].                                     Page   25
---------------------------------- M14.ASM -----------------------------------

09a6 :                  PRINT_BF:
09a6 : 010000           	ld	bc,0	
09a9 : 22da44           	ld	(bbuf),hl
09ac : 7e               PR_BF2:	ld	a,(hl)
09ad : fe24             	cp	"$"
09af : 2807             	jr	z,PR_BF1
09b1 : b7               	or	a
09b2 : 2804             	jr	z,PR_BF1
09b4 : 23               	inc	hl
09b5 : 03               	inc	bc
09b6 : 18f4             	jr	PR_BF2
09b8 : ed43dc44         PR_BF1:	ld	(lenb),bc
                        
09bc : 3a7d2c           	ld	a,(S_C)
09bf : cdc62b           	call	PUT_P2
09c2 : 1848             	jr	BuffOU1
                        
                        
09c4 :                  PRINT_BFT:
09c4 : 010000           	ld	bc,0	
09c7 : 22da44           	ld	(bbuf),hl
09ca :                  PR_BFT2:
09ca : 7e               	ld	a,(hl)
09cb : fe24             	cp	"$"
09cd : 2807             	jr	z,PR_BFT1
09cf : b7               	or	a
09d0 : 2804             	jr	z,PR_BFT1
09d2 : 23               	inc	hl
09d3 : 03               	inc	bc
09d4 : 18d6             	jr	PR_BF2
09d6 :                  PR_BFT1:
09d6 : ed43dc44         	ld	(lenb),bc
                        	
09da :                  BuffOU:
09da : cdef1b           	call	TCPSEND
                        ; 	string[bbuf,lenb] to buffer(ix)
09dd : 2ada44           	ld	hl,(bbuf)
09e0 : 22de44           	ld	(bbuf1),hl
09e3 : 2adc44           	ld	hl,(lenb)
09e6 : 22e044           	ld	(lenb1),hl
                        
09e9 : 21942f           	ld	hl,PA_NICK
09ec : 22da44           	ld	(bbuf),hl
09ef : 012000           	ld	bc,32
09f2 : af               	xor	a
09f3 : edb1             	cpir
09f5 : 01942f           	ld	bc,PA_NICK
09f8 : ed42             	sbc	hl,bc
09fa : 22dc44           	ld	(lenb),hl
09fd : cd0c0a           	call	BuffOU1
                        
0a00 : 2ade44           	ld	hl,(bbuf1)
0a03 : 22da44           	ld	(bbuf),hl
0a06 : 2ae044           	ld	hl,(lenb1)
0a09 : 22dc44           	ld	(lenb),hl
                        
                        
0a0c :                  BuffOU1:
0a0c : ed4bdc44         	ld	bc,(lenb)
0a10 : 78               	ld	a,b
0a11 : b1               	or	c
0a12 : c8               	ret	z
AS80 Assembler for i8080 [1.31].                                     Page   26
---------------------------------- M14.ASM -----------------------------------

0a13 : 3e2a             	ld	a,"*"
0a15 : 320280           	ld	(w0new),a
0a18 : af               	xor	a
0a19 : 3abb88           	ld	a,(segs)
0a1c : 17               	rla
0a1d : 4f               	ld	c,a
0a1e : 0600             	ld	b,0
0a20 : 21832c           	ld	hl,MAPTAB
0a23 : 09               	add	hl,bc
0a24 : cbbe             	res	7,(hl)	
                        
                        ; time stump
                        
0a26 : 3ae644           	ld	a,(t_stmp)
0a29 : b7               	or	a
0a2a : 2855             	jr	z,SRV_se00
0a2c : dd217088         	ld	ix,sWCB0
0a30 : dd7e06           	ld	a,(ix+6)
0a33 : b7               	or	a
0a34 : 204b             	jr	nz,SRV_se00
0a36 : cd633b           	call	CLOCK
0a39 : 2ada44           	ld	hl,(bbuf)
0a3c : 22e244           	ld	(bbuf2),hl
0a3f : 2adc44           	ld	hl,(lenb)
0a42 : 22e444           	ld	(lenb2),hl
                        	
0a45 : 21f52d           	ld	hl,TABTS
0a48 : 3ae644           	ld	a,(t_stmp)
0a4b : e60f             	and	#0F
0a4d : 17               	rla
0a4e : 4f               	ld	c,a
0a4f : 0600             	ld	b,0
0a51 : 09               	add	hl,bc
0a52 : 5e               	ld	e,(hl)
0a53 : 23               	inc	hl
0a54 : 4e               	ld	c,(hl)
0a55 : 1680             	ld	d,#80
0a57 : 0600             	ld	b,0
0a59 : ed53da44         	ld	(bbuf),de
0a5d : ed43dc44         	ld	(lenb),bc
0a61 : cd810a           	call	SRV_se00
0a64 : 114780           	ld	de,#8000+71
0a67 : 010100           	ld	bc,1
0a6a : ed53da44         	ld	(bbuf),de
0a6e : ed43dc44         	ld	(lenb),bc
0a72 : cd810a           	call	SRV_se00
0a75 : 2ae244           	ld	hl,(bbuf2)
0a78 : 22da44           	ld	(bbuf),hl
0a7b : 2ae444           	ld	hl,(lenb2)
0a7e : 22dc44           	ld	(lenb),hl
                        
0a81 :                  SRV_se00:
                        ;	ld	a,(S_C)
                        ;	call	PUT_P2
0a81 : dd217088         	ld	ix,sWCB0
0a85 : 2a8288           	ld	hl,(sWCB0+18)
0a88 : 0100c0           	ld	bc,#C000
0a8b : af               	xor	a
0a8c : ed42             	sbc	hl,bc           ; if different
0a8e : c2a60a           	jp	nz,SRV_se01	; not out channel windows
                        ; out chan windows
0a91 : 2ada44           	ld	hl,(bbuf)
AS80 Assembler for i8080 [1.31].                                     Page   27
---------------------------------- M14.ASM -----------------------------------

0a94 : ed4bdc44         	ld	bc,(lenb)
                        
0a98 :                  SRV_se0:
0a98 : 7e               	ld	a,(hl)
0a99 : e5               	push	hl
0a9a : c5               	push	bc
0a9b : cd5e3c           	call	OUTC_TW
0a9e : c1               	pop	bc
0a9f : e1               	pop	hl
0aa0 : 23               	inc	hl
0aa1 : 0b               	dec	bc
0aa2 : 78               	ld	a,b
0aa3 : b1               	or	c
0aa4 : 20f2             	jr	nz,SRV_se0
                        
0aa6 :                  SRV_se01:
                        
                        ; cut buffer
0aa6 : ed4bdc44         	ld	bc,(lenb)
                        ;	ld	l,(ix+12) ; start buff
                        ;	ld	h,(ix+13) ;
0aaa : 2a7c88           	ld	hl,(sWCB0+12)
0aad : 110092           	ld	de,#9200  ; low line *****************************
0ab0 : af               	xor	a
0ab1 : ed42             	sbc	hl,bc	; new buffer    hl = hl - (len)
0ab3 : ed52             	sbc	hl,de	; < #9000 ?
0ab5 : 3003             	jr	nc,SRV_se1 ; no overfull
0ab7 : 210000           	ld	hl,0	
0aba : 19               SRV_se1	add	hl,de	; hl - dest adr
                        ;	ld	(ix+12),l
                        ;	ld	(ix+13),h   ; new buff
0abb : 227c88           	ld	(sWCB0+12),hl
0abe : e5               	push	hl      ; old
0abf : 09               	add	hl,bc   ; source
0ac0 : eb               	ex	hl,de	
0ac1 : 2100c0           	ld	hl,#C000
0ac4 : af               	xor	a
0ac5 : ed52             	sbc	hl,de	; hl=#C000 - source
0ac7 : 4d               	ld	c,l
0ac8 : 44               	ld	b,h
0ac9 : e1               	pop	hl
0aca : eb               	ex	hl,de	
                        ; hl = new buf + (len) , de new buf , bc = #C000 - (ne
0acb : edb0             	ldir
                        
0acd : 3a7f2c           	ld	a,(T_S_C)
0ad0 : 47               	ld	b,a
0ad1 : 3a7d2c           	ld	a,(S_C)
0ad4 : b8               	cp	b
0ad5 : cc003c           	call	z,LOAD_S
0ad8 : fb               	ei
                        
                        		
                        ; load buffer
0ad9 : af               	xor	a
0ada : 2100c0           	ld	hl,#C000
0add : ed4bdc44         	ld	bc,(lenb)
0ae1 : ed42             	sbc	hl,bc
0ae3 : eb               	ex	hl,de
0ae4 : 2ada44           	ld	hl,(bbuf)
0ae7 : edb0             	ldir
                        
AS80 Assembler for i8080 [1.31].                                     Page   28
---------------------------------- M14.ASM -----------------------------------

                        ;	call	LOAD_S
0ae9 : c9               	ret
                        ;-------------------------------------
                        
0aea :                  SRV_contr:
0aea : dd217088         	ld	ix,sWCB0
0aee : cd683e           	call	CLS_TW
                        ;	ld	l,(ix+12)
                        ;	ld	h,(ix+13)
0af1 : 2a7c88           	ld	hl,(sWCB0+12)
0af4 :                  SRV_ctr1:
0af4 : e5               	push	hl
0af5 : 7e               	ld	a,(hl)
0af6 : cd5e3c           	call	OUTC_TW
0af9 : e1               	pop	hl
0afa : 23               	inc	hl
0afb : 7c               	ld	a,h
0afc : fec0             	cp	#C0
0afe : 20f4             	jr	nz,SRV_ctr1
0b00 : cd003c           	call 	LOAD_S
                        	
0b03 : c39c07           	jp	SRVw
0b06 :                  SRV_home:
0b06 : dd217088         	ld	ix,sWCB0
0b0a : 2100c0           	ld	hl,#C000
                        ;	ld	(ix+18),l
                        ;	ld	(ix+19),h
0b0d : 228288           	ld	(sWCB0+18),hl
0b10 : cd5640           	call	PPBC
0b13 : c39c07           	jp	SRVw
0b16 :                  SRV_UP:
0b16 : dd217088         	ld	ix,sWCB0
0b1a : cb46             	bit	0,(hl)  ; if 0 - SHIFT
0b1c : ca380b           	jp	z,SRVUPvPU ; View channel buffer UP 1 page
0b1f : cb4e             	bit	1,(hl)	; if 0 - CTRL
0b21 : ca3d0b           	jp	z,SRVUPvU ; View channel buffer UP 1 string
                        ; 
0b24 : c39c07           	jp	SRVw
                        	
0b27 :                  SRV_DW:
0b27 : dd217088         	ld	ix,sWCB0
0b2b : cb46             	bit	0,(hl)  ; if 0 - SHIFT
0b2d : ca640b           	jp	z,SRVDWvPD ; View channel buffer UP 1 page
0b30 : cb4e             	bit	1,(hl)	; if 0 - CTRL
0b32 : ca690b           	jp	z,SRVDWvD ; View channel buffer UP 1 string
                        ;
0b35 : c39c07           	jp	SRVw
0b38 :                  SRVUPvPU:
0b38 : dd5605           	ld	d,(ix+5)
0b3b : 1802             	jr	SRVU2
0b3d :                  SRVUPvU:
                        ; View channel buff UP 1 string
0b3d : 1601             	ld	d,1
0b3f :                  SRVU2:
                        ;	ld	ix,sWCB0
                        ;	ld	l,(ix+18)	; buffer curs
                        ;	ld	h,(ix+19)
0b3f : 2a8288           	ld	hl,(sWCB0+18)
0b42 : 2b               	dec	hl
0b43 : 2b               	dec	hl
0b44 : 3e0a             SRVU3:	ld	a,#0A
0b46 : edb9             SRVU1:	cpdr
AS80 Assembler for i8080 [1.31].                                     Page   29
---------------------------------- M14.ASM -----------------------------------

0b48 : 20fc             	jr	nz,SRVU1	; 
                        ;	ld	a,#80
                        ;	cp	h
                        ;		
0b4a : 15               	dec	d
0b4b : 20f7             	jr	nz,SRVU3
0b4d : 23               	inc	hl
0b4e : 23               	inc	hl              ;
0b4f : eb               	ex	hl,de
                        ;	ld	l,(ix+12)
                        ;	ld	h,(ix+13)
0b50 : 2a7c88           	ld	hl,(sWCB0+12)
0b53 : af               	xor	a
0b54 : 2b               	dec	hl
0b55 : ed52             	sbc	hl,de	;  hl-de=?
0b57 : d29c07           	jp	nc,SRVw
                        ;	ld	(ix+18),e
                        ;	ld	(ix+19),d
0b5a : ed538288         	ld	(sWCB0+18),de
0b5e : cd5640           	call	PPBC
0b61 : c39c07           	jp	SRVw
                        
0b64 :                  SRVDWvPD
0b64 : dd5605           	ld	d,(ix+5)
0b67 : 1802             	jr	SRVD0
0b69 :                  SRVDWvD:
                        ; View channel buff Down 1 string
0b69 : 1601             	ld	d,1
0b6b :                  SRVD0:
                        ;	ld	ix,sWCB0
                        ;	ld	l,(ix+18)
                        ;	ld	h,(ix+19)
0b6b : 2a8288           	ld	hl,(sWCB0+18)
0b6e : 3e0a             SRVD2:	ld	a,#0A
0b70 : edb1             SRVD1:	cpir
0b72 : c2700b           	jp	nz,SRVD1
0b75 : 7c               	ld	a,h
0b76 : fec0             	cp	#C0
0b78 : 300c             	jr	nc,SRVD3 ; out of buffer hl > #C000
0b7a : 15               	dec	d
0b7b : 20f1             	jr	nz,SRVD2
0b7d :                  SRVD4:
                        ;	ld	(ix+18),l
                        ;	ld	(ix+19),h
0b7d : 228288           	ld	(sWCB0+18),hl
0b80 : cd5640           	call	PPBC
0b83 : c39c07           	jp	SRVw
0b86 : 2100c0           SRVD3:	ld	hl,#C000 ; set cur end of buffer
0b89 : c37d0b           	jp	SRVD4
                        
0b8c :                  SRV_EX:
0b8c : 3a812c           	ld	a,(segp)
0b8f : 32802c           	ld	(segsel),a
0b92 : c34003           	jp	SYS_S
                        
0b95 :                  SRV_F2:
0b95 : cd913e           	call	CLKB
0b98 : cdc92b           	call	GET_P2
0b9b : 32f744           	ld	(segsRS),a
0b9e : 3a592c           	ld	a,(notcpip)	; check for TCP/IP UNAPI implementatio
0ba1 : b7               	or	a
0ba2 : 2809             	jr	z,SRVF2_1
AS80 Assembler for i8080 [1.31].                                     Page   30
---------------------------------- M14.ASM -----------------------------------

0ba4 : 21f329           	ld	hl,NOTCPIP_S	
0ba7 : cda609           	call	PRINT_BF
0baa : c39c07           	jp	SRVw
0bad :                  SRVF2_1:
                        				; check for exist connect
0bad : 3a862d           	ld	a,(serv1c)
0bb0 : b7               	or	a
0bb1 : 2809             	jr	z,SRVF2_2
0bb3 : 21ba43           	ld	hl,SM_CONNEXIST
0bb6 : cda609           	call	PRINT_BF
0bb9 : c39c07           	jp	SRVw
0bbc :                  SRVF2_2:			; Attempt connect
                        
0bbc : cd6016           	call	CONNECT_S
                        
                        
0bbf : c39c07           	jp	SRVw
                        
0bc2 :                  SRV_F3:
0bc2 : cd913e           	call	CLKB
0bc5 : af               	xor	a
0bc6 : cd751d           	call	TCP_ERROR2
0bc9 : af               	xor	a
0bca : 32862d           	ld	(serv1c),a
0bcd : c39c07           	jp	SRVw
0bd0 :                  SRV_F4:
0bd0 : 11d146           	ld	de,tsb+4
0bd3 : ed53cf46         	ld	(tsb+2),de
0bd7 : 3a7e2f           	ld	a,(PA_SRVPASS)
0bda : b7               	or	a
0bdb : 2815             	jr	z,SRVF4_1 ; no server password
0bdd : 3e2f             	ld	a,"/"
0bdf : 12               	ld	(de),a
0be0 : 13               	inc	de
0be1 : 21692f           	ld	hl,AA_SPAS
0be4 : cdc31a           	call	COPYARG
                        
0be7 : 217e2f           	ld	hl,PA_SRVPASS
0bea : cdc31a           	call	COPYARG
0bed : 1b               	dec	de
0bee : 3e0d             	ld	a,13
0bf0 : 12               	ld	(de),a
0bf1 : 13               	inc	de
                        
0bf2 :                  SRVF4_1:
0bf2 : 3e2f             	ld	a,"/"
0bf4 : 12               	ld	(de),a
0bf5 : 13               	inc	de
0bf6 : 218f2f           	ld	hl,AA_NICK
0bf9 : cdc31a           	call	COPYARG
                        	
0bfc : 21942f           	ld	hl,PA_NICK
0bff : cdc31a           	call	COPYARG
0c02 : 1b               	dec	de
0c03 : 3e0d             	ld	a,13
0c05 : 12               	ld	(de),a
0c06 : 13               	inc	de
                        
0c07 : 3e2f             	ld	a,"/"
0c09 : 12               	ld	(de),a
0c0a : 13               	inc	de
0c0b : 21de2f           	ld	hl,AA_USER
AS80 Assembler for i8080 [1.31].                                     Page   31
---------------------------------- M14.ASM -----------------------------------

0c0e : cdc31a           	call	COPYARG
                        
0c11 : 21e32f           	ld	hl,PA_USER
0c14 :                  SRVF4_3:
0c14 : 7e               	ld	a,(hl)
0c15 : b7               	or	a
0c16 : 2805             	jr	z,SRVF4_2
0c18 : 12               	ld	(de),a
0c19 : 23               	inc	hl
0c1a : 13               	inc	de
0c1b : 18f7             	jr	SRVF4_3
                        
0c1d :                  SRVF4_2:
0c1d : 3e0d             	ld	a,13
0c1f : 12               	ld	(de),a
0c20 : 13               	inc	de
0c21 : af               	xor	a
0c22 : 12               	ld	(de),a
                        
0c23 : 21d146           	ld	hl,tsb+4
0c26 : 010002           	ld	bc,512
0c29 : af               	xor	a
0c2a : edb1             	cpir
0c2c : c29c07           	jp	nz,SRVw
0c2f : 11d146           	ld	de,tsb+4
0c32 : af               	xor	a
0c33 : 2b               	dec	hl
0c34 : ed52             	sbc	hl,de
0c36 : 22cd46           	ld	(tsb),hl	
0c39 : c39c07           	jp 	SRVw
                        
                        
0c3c :                  LsEnCS:
                        ;*****************************************
                        ; Enter Server Segment
                        ;*****************************************
0c3c : 23                       inc     hl
0c3d : 7e                       ld      a,(hl)
0c3e : 327d2c                   ld      (S_C),a
0c41 : 3a802c                   ld      a,(segsel)
0c44 : 32812c                   ld      (segp),a
0c47 : c34c0d                   jp      CHAN
                        
                        
                        
                        ;Create Channel records
                        ;
                        ;
0c4a :                  CHANNEL_C:
0c4a : 3e43             	ld	a,"C"
0c4c : 11212e           	ld	de,C_CHAN
0c4f : cd0716           	call	SrS
0c52 : 381b             	jr	c,CHANNEL_CREATE
0c54 : c9               	ret
                        
0c55 :                  newsload:
0c55 : 3a0280           	ld	a,(w0new)
0c58 : b7               	or	a
0c59 : c8               	ret	z
0c5a : cd003c           	call	LOAD_S
0c5d : af               	xor	a
0c5e : 320280           	ld	(w0new),a
AS80 Assembler for i8080 [1.31].                                     Page   32
---------------------------------- M14.ASM -----------------------------------

0c61 : 3abb88           	ld	a,(segs)
0c64 : 17               	rla
0c65 : 4f               	ld	c,a
0c66 : 0600             	ld	b,0
0c68 : 21832c           	ld	hl,MAPTAB
0c6b : 09               	add	hl,bc
0c6c : cbfe             	set	7,(hl)
0c6e : c9               	ret
                        
                        
0c6f :                  CHANNEL_CREATE:
                        ;***********************************************
                        ; Channel control segment
                        ;***********************************************
0c6f : cd1440           	CALL	CLAT_C_N
0c72 : af               	xor	a
0c73 : 328f2d           	ld	(req),a
                        
0c76 : cdcf15           	call	ALL_REC
0c79 : 78               	ld	a,b
0c7a : 32812c           	ld	(segp),a
0c7d : dae015           	jp	c,NO_REC
0c80 : e5               	push	hl
0c81 : 3e00             	ld	a,0
0c83 : 0600             	ld	b,0
0c85 : cda22b           	call	ALL_SEG
0c88 : e1               	pop	hl
0c89 : dae915           	jp	c,NO_SEG
0c8c : 3643             	ld	(hl),"C"
0c8e : 23               	inc	hl
0c8f : 77               	ld	(hl),a
0c90 : 327d2c           	ld	(S_C),a
0c93 : cdc62b           	call	PUT_P2
0c96 : cd383b           	call	CLS_G
                        
0c99 : 0618                     ld      b,24
0c9b : 115000                   ld      de,80
0c9e : 219080                   ld      hl,#8000 + 80 * 2 - 16
0ca1 : 3e16                     ld      a,22 ;134 ?     ;"!"
0ca3 : 77               wi3:    ld      (hl),a
0ca4 : 19                       add     hl,de
0ca5 : 10fc                     djnz    wi3
                        
                        
0ca7 : 3a812c           	ld	a,(segp)
0caa : 32bb88           	ld	(segs),a
                        
0cad : 3af744           	ld	a,(segsRS)	; segment parent
0cb0 : 32bc88           	ld	(segsR),a
                        
0cb3 : 1600             	ld	d,0
0cb5 : 3abb88           	ld	a,(segs)
0cb8 : 5f               	ld	e,a
0cb9 : 210080           	ld	hl,#8000
0cbc : 0602             	ld	b,2
0cbe : 0e30             	ld	c,"0"
0cc0 : 3e00             	ld	a,0
0cc2 : cd8c37           	call	NUMTOASC
0cc5 : 210380           	ld	hl,#8000+3
0cc8 : 3643             	ld	(hl),"C"
0cca : 23               	inc	hl
0ccb : 23               	inc	hl
AS80 Assembler for i8080 [1.31].                                     Page   33
---------------------------------- M14.ASM -----------------------------------

0ccc : fd21212e         	ld	iy,C_CHAN
0cd0 : 0632             	ld	b,50
0cd2 : fd7e00           CCr01:	ld	a,(iy)
0cd5 : b7               	or	a
0cd6 : 280a             	jr	z,CCr02
0cd8 : fe20             	cp	" "
0cda : 2806             	jr	z,CCr02
0cdc : 77               	ld	(hl),a
0cdd : 23               	inc	hl
0cde : fd23             	inc	iy
0ce0 : 10f0             	djnz	CCr01
0ce2 : 3620             CCr02:	ld	(hl)," "
                        ; test block
                        ;	ld	d,0
                        ;	ld	a,(S_C)
                        ;	ld	e,a
                        ;	ld	c,"0"
                        ;	ld	b,3
                        ;	ld	a,0
                        ;	inc	hl
                        ;	call	NUMTOASC
                        
0ce4 : 217c45           	ld	hl,WCB1 	; channel WCB template
0ce7 : 117088           	ld	de,sWCB0
0cea : 011800           	ld	bc,24
0ced : edb0             	ldir
0cef : dd217088         	ld	ix,sWCB0
0cf3 : cd683e           	call	CLS_TW
                        				; ini windows nick's 
0cf6 : 219445           	ld	hl,WCB2
0cf9 : 118888           	ld	de,sWCB1
0cfc : 011800           	ld	bc,24
0cff : edb0             	ldir
0d01 : dd218888         	ld	ix,sWCB1
0d05 : cd683e           	call	CLS_TW
                        
                        				; ini windows enter string
0d08 : 21ac45           	ld	hl,WCB3
0d0b : 11a088           	ld	de,sWCB2
0d0e : 011800           	ld	bc,24
0d11 : edb0             	ldir
0d13 : dd21a088         	ld	ix,sWCB2
0d17 : cd683e           	call	CLS_TW
                        				; ini cursor
0d1a : af               	xor	a
0d1b : 32b888           	ld	(oldcur),a
0d1e : 32b988           	ld	(oldcur+1),a
                        ;	inc	a
0d21 : 32ba88           	ld	(oldcur+2),a
                        				; clear ct buffer
0d24 : 21008a           	ld	hl,#8A00
0d27 : 010e01           	ld	bc,270
0d2a : af               wi4:	xor	a
0d2b : 77               	ld	(hl),a
0d2c : 23               	inc	hl
0d2d : 0b               	dec	bc
0d2e : 78               	ld	a,b
0d2f : b1               	or	c
0d30 : 20f8             	jr	nz,wi4
                        
0d32 : cd003c           	call	LOAD_S
                        ;	ini buffer for back loading
AS80 Assembler for i8080 [1.31].                                     Page   34
---------------------------------- M14.ASM -----------------------------------

                        
0d35 : 211900           	ld	hl,#0019 ;v-25
                        	bios	POSIT
0d38 : f7              >	rst	#30
0d39 : 00              >	db	0
0d3a : c600            >	dw	POSIT
                        
                        ;	call	CLKB
0d3c : 3e01             	ld	a,1		; need new nick list
0d3e : 32bd88           	ld	(nlnew),a
0d41 : cd3d3f           	call	BFSegT		; rebuild active segmrnt tabl
0d44 : 3a7d2c           	ld	a,(S_C)
0d47 : cdc62b           	call	PUT_P2
0d4a : b7               	or	a
0d4b : c9               	ret
                        
                        ;	jp	SRVw	
                        ;=====================================================
                        ;	Channel control segment
                        ;=====================================================
0d4c :                  CHAN:
0d4c :                  tccw:	
                        
0d4c : ed4bcd46         	ld	bc,(tsb)
0d50 : 78               	ld	a,b
0d51 : b1               	or	c
0d52 : 2810             	jr	z,tccwB
0d54 : 0b               	dec	bc
0d55 : ed43cd46         	ld	(tsb),bc
0d59 : 2acf46           	ld	hl,(tsb+2)
0d5c : 7e               	ld	a,(hl)
0d5d : 23               	inc	hl
0d5e : 22cf46           	ld	(tsb+2),hl
0d61 : c3bd0d           	jp	tccwC
0d64 :                  tccwB:
                        
0d64 : 3a7d2c           	ld	a,(S_C)
0d67 : cdc62b           	call	PUT_P2
                        
0d6a : cdb53f           	call	SSIA
                        
0d6d : dd21a088         	ld	ix,sWCB2
                        
0d71 : 2aa288           	ld	hl,(sWCB2+2)	;*
0d74 : 1600             	ld	d,0
0d76 : dd5e06           	ld	e,(ix+6)
0d79 : 19               	add	hl,de
0d7a : cdd13d           	call	CURSOR
0d7d : cd003c           	call	LOAD_S
                        
                        
                        	
                        
0d80 :                  tccw0:
0d80 : cd633b           	call	CLOCK
0d83 : cd1818           	call	TCPSEP
0d86 : 3a8f2d           	ld	a,(req)
0d89 : fe01             	cp	1
0d8b : ca6f0c           	jp	z,CHANNEL_CREATE
0d8e : c3a115           	jp	SEL_RE
0d91 :                  CHA_RE:
0d91 : cdf43f           	call	L_SIA
AS80 Assembler for i8080 [1.31].                                     Page   35
---------------------------------- M14.ASM -----------------------------------

                        
                        ;	ld	a,"c"
                        ;	ld	(#8000+2),a
0d94 : 3a0480           	ld	a,(w1new)
0d97 : b7               	or	a
0d98 : 2813             	jr	z,CHA_RE1
0d9a : dd218888         	ld	ix,sWCB1
0d9e : cde711           	call	NICKOS
0da1 : af               	xor	a
0da2 : 320480           	ld	(w1new),a
0da5 : 320280           	ld	(w0new),a
0da8 : cd003c           	call	LOAD_S
0dab : 1803             	jr	CHA_RE2
0dad :                  CHA_RE1:
0dad : cd550c           	call	newsload
                        
0db0 :                  CHA_RE2:
                        	
0db0 : 0e0b             	ld	c,_CONST
0db2 : cd0500           	call	DOS
0db5 : b7               	or	a
0db6 : 28c8             	jr	z,tccw0
0db8 : 0e07             	ld	c,_INNO
0dba : cd0500           	call	DOS
0dbd : 47               tccwC:	ld	b,a
0dbe : 3a7d2c           	ld	a,(S_C)
0dc1 : cdc62b           	call	PUT_P2
0dc4 : dd21a088         	ld	ix,sWCB2
0dc8 : 21ebfb           	ld	hl,#FBEB
0dcb : 78               	ld	a,b
                        
0dcc : cb7e             	bit	7,(hl)
0dce : ca7811           	jp	z,tcc_F3
0dd1 : cb76             	bit	6,(hl)
0dd3 : ca1d10           	jp	z,tcc_F2
0dd6 : cb6e             	bit	5,(hl)
0dd8 : ca9e04           	jp	z,Ls_help
0ddb : fe0d             	cp	#0D
0ddd : ca3f0f           	jp	z,tcc_se
0de0 : fe1b             	cp	ESC_
0de2 : ca1410           	jp	z,tcc_ESC
0de5 : fe0b             	cp	11	; CLS/HOME cancel view buffer chancel
0de7 : ca8e0f           	jp	z,tcc_home
0dea : fe1e             	cp	UP_
0dec : ca9e0f           	jp	z,tcc_UP
0def : fe1f             	cp	DOWN_
0df1 : caaf0f           	jp	z,tcc_DW
                        	
0df4 : fe18             	cp	24	; SELECT
0df6 : ca1d10           	jp	z,tcc_F2
                        ;	jp	z,tcc_contr
0df9 : cb4e             	bit	1,(hl)
0dfb : 2005             	jr	nz,tccWNC
0dfd : fe11             	cp	17	;CTRL+Q
0dff : cad811           	jp	z,tcc_Q	
0e02 :                  tccWNC:
                        ; edit enter string
0e02 : fe08             	cp	8 ; "BS" <-
0e04 : ca050f           	jp	z,tcc_bs
0e07 : fe12             	cp	18 ; INS
0e09 : ca720e           	jp	z,tcc_ins
0e0c : fe7f             	cp	127 ; DEL
AS80 Assembler for i8080 [1.31].                                     Page   36
---------------------------------- M14.ASM -----------------------------------

0e0e : cada0e           	jp	z,tcc_del	
0e11 : fe1d             	cp	LEFT_
0e13 : ca7c0e           	jp	z,tcc_left
0e16 : fe1c             	cp	RIGHT_
0e18 : caa60e           	jp	z,tcc_right
                        
                        ; regular char
0e1b : 08               	ex	af,af'
0e1c : 3ae744           	ld	a,(s_ins)
0e1f : b7               	or	a
0e20 : 281c             	jr	z,tcc_r4    ; no insret option
0e22 : 2ab088           	ld	hl,(sWCB2+16) ;*
0e25 : 5d               	ld	e,l
0e26 : 54               	ld	d,h
0e27 : 2b               	dec	hl
0e28 : ed4bb288         	ld	bc,(sWCB2+18)
0e2c : af               	xor	a
0e2d : ed42             	sbc	hl,bc
0e2f : 380d             	jr	c,tcc_r4    ; no right part string
0e31 : 23               	inc	hl
0e32 : 4d               	ld	c,l
0e33 : 44               	ld	b,h
0e34 : 6b               	ld	l,e
0e35 : 62               	ld	h,d
0e36 : 13               	inc	de
0e37 : ed53b088         	ld	(sWCB2+16),de
0e3b : 03               	inc	bc
0e3c : edb8             	lddr                ; scroll 
0e3e : 08               tcc_r4:	ex	af,af'
                        ; save cahr to buff
0e3f : 2ab288           	ld	hl,(sWCB2+18)
0e42 : 77               	ld	(hl),a
0e43 : 23               	inc	hl
0e44 : 22b288           	ld	(sWCB2+18),hl
0e47 : ed5bb088         	ld	de,(sWCB2+16)
0e4b : af               	xor	a
0e4c : ed52             	sbc	hl,de
0e4e : 3805             	jr	c,tcc_r3
0e50 : 13               	inc	de
0e51 : ed53b088         	ld	(sWCB2+16),de
                        
0e55 :                  tcc_r3:
                        ;
0e55 : dd7e06           	ld	a,(ix+6)
0e58 : dd4604           	ld	b,(ix+4)
0e5b : 05               	dec	b
0e5c : b8               	cp	b           ; screen cursor end positoin ?
0e5d : 3006             	jr	nc,tcc_r1   ; y
0e5f : 3c               	inc	a           ; no, inc h-cur
0e60 : dd7706           	ld	(ix+6),a
0e63 : 1807             	jr	tcc_r2
0e65 :                  tcc_r1:	
0e65 : 2ab688           	ld	hl,(sWCB2+22)
0e68 : 23               	inc	hl
0e69 : 22b688           	ld	(sWCB2+22),hl
0e6c :                  tcc_r2:
                        
0e6c : cd253e           	call	OUTSTRW
                        ;	call	OUTC_TW
0e6f : c34c0d           	jp	tccw
0e72 :                  tcc_ins
0e72 : 3ae744           	ld	a,(s_ins)
AS80 Assembler for i8080 [1.31].                                     Page   37
---------------------------------- M14.ASM -----------------------------------

0e75 : 2f               	cpl	
0e76 : 32e744           	ld	(s_ins),a
0e79 : c34c0d           	jp	tccw
0e7c :                  tcc_left:
0e7c : cb4e             	bit	1,(hl)
0e7e : cab403           	jp	z,S_LEFT
0e81 : ed5bb288         	ld	de,(sWCB2+18)
0e85 : 2aac88           	ld	hl,(sWCB2+12)
0e88 : af               	xor	a	
0e89 : ed52             	sbc	hl,de	; |<- X
0e8b : d24c0d           	jp	nc,tccw ; no LEFT
0e8e : 1b               	dec	de
0e8f : ed53b288         	ld	(sWCB2+18),de
                        ; LEFT
0e93 : dd3506                   dec	(ix+6)   ; c_cur --
0e96 : f2a00e           	jp	p,tccL1  ; > 0 norm
0e99 : dd3406           	inc	(ix+6)   ; c_cur ++     
0e9c : ed53b688         	ld	(sWCB2+22),de
0ea0 :                  tccL1:	
                        	
0ea0 : cd253e           	call	OUTSTRW
0ea3 : c34c0d           	jp	tccw
                        
0ea6 :                  tcc_right:
0ea6 : cb4e             	bit	1,(hl)
0ea8 : cad403           	jp	z,S_RIGHT
0eab : ed5bb288         	ld	de,(sWCB2+18)
0eaf : 2ab088           	ld	hl,(sWCB2+16)
0eb2 : 13               	inc	de
0eb3 : af               	xor	a
0eb4 : ed52             	sbc	hl,de
0eb6 : da4c0d           	jp	c,tccw    ; ->| X
0eb9 : ed53b288         	ld	(sWCB2+18),de
0ebd : dd4604           	ld	b,(ix+4)   ; H-size
0ec0 : dd7e06           	ld	a,(ix+6)   ; h_cur
0ec3 : 3c               	inc	a
0ec4 : b8               	cp	b
0ec5 : d2cd0e           	jp	nc,tcc_R1
0ec8 : dd7706           	ld	(ix+6),a
0ecb : 1807             	jr	tcc_R2
0ecd :                  tcc_R1:
0ecd : 2ab688           	ld	hl,(sWCB2+22)
0ed0 : 23               	inc	hl
0ed1 : 22b688           	ld	(sWCB2+22),hl
                        
0ed4 : cd253e           tcc_R2:	call	OUTSTRW
0ed7 : c34c0d           	jp	tccw
0eda :                  tcc_del:
0eda : 2ab288           	ld	hl,(sWCB2+18) ; b_cur
0edd : ed5bb088         	ld	de,(sWCB2+16)
                        
0ee1 : 1b               	dec	de
0ee2 : af               	xor	a
0ee3 : ed52             	sbc	hl,de
0ee5 : 3803             	jr	c,tcc_del1   ; -1
0ee7 : c24c0d           	jp	nz,tccw      ; 1
0eea :                  tcc_del1
0eea : ed53b088         	ld	(sWCB2+16),de
0eee : 280f             	jr	z,tcc_del2   ; 0
                        ; scroll right part string
0ef0 : 13               	inc 	de
0ef1 : af               	xor	a
AS80 Assembler for i8080 [1.31].                                     Page   38
---------------------------------- M14.ASM -----------------------------------

0ef2 : 19               	add	hl,de	
                        			; hl = b_cur  de = b_end-1 old
0ef3 : eb               	ex	hl,de   ; hl = b_end new de = B_cur
0ef4 : ed52             	sbc	hl,de   ; 
0ef6 : 4d               	ld	c,l
0ef7 : 44               	ld	b,h
0ef8 : 6b               	ld	l,e
0ef9 : 62               	ld	h,d
0efa : 2b               	dec	hl
0efb : 03               	inc	bc
0efc : eb               	ex	hl,de  ;
0efd : edb0             	ldir           
                        
                        
0eff :                  tcc_del2:
0eff : cd253e                   call	OUTSTRW
0f02 : c34c0d           	jp	tccw
                        ; "back space" delete last symlol hposit --
0f05 :                  tcc_bs:
0f05 : 2aac88           	ld	hl,(sWCB2+12)
0f08 : ed5bb288         	ld	de,(sWCB2+18) ;cur
0f0c : af               	xor	a
0f0d : ed52             	sbc	hl,de     ; |<- X
0f0f : d24c0d           	jp	nc,tccw   ; no BS
0f12 : 1b               	dec	de
0f13 : ed53b288         	ld	(sWCB2+18),de
                        ; bs		
0f17 : dd3506                   dec	(ix+6)   ; c_cur --
0f1a : f2240f           	jp	p,tccbs1  ; > 0 norm
0f1d : dd3406           	inc	(ix+6)   ; c_cur ++     
0f20 : ed53b788         	ld	(sWCB2+23),de	; then  (stout) := (cur)
0f24 :                  tccbs1:	
                        ;scroll right part strint to left on 1 byte
0f24 : 2ab088           	ld	hl,(sWCB2+16)	; end buff
0f27 : 2b               	dec	hl              ; endbuff--
0f28 : 22b088           	ld	(sWCB2+16),hl
0f2b : af               	xor	a
0f2c : ed52             	sbc	hl,de
0f2e : 7c               	ld	a,h
0f2f : b5               	or	l
0f30 : 2807             	jr	z,tccbs2
0f32 : 4d               	ld	c,l
0f33 : 44               	ld	b,h
0f34 : 6b               	ld	l,e
0f35 : 62               	ld	h,d
0f36 : 23               	inc	hl
0f37 : edb0             	ldir
                        
0f39 :                  tccbs2:	
0f39 : cd253e           	call	OUTSTRW
0f3c : c34c0d           	jp	tccw
                        
0f3f :                  tcc_se:
                        ;
0f3f : cd683e           	call	CLS_TW     ; clear enter string of screen
0f42 : af               	xor	a
0f43 : dd7706           	ld	(ix+6),a
0f46 : dd7707           	ld	(ix+7),a
0f49 : 2ab088           	ld	hl,(sWCB2+16)
0f4c : 360d             	ld	(hl),#0D
0f4e : 23               	inc	hl
0f4f : 360a             	ld	(hl),#0A
AS80 Assembler for i8080 [1.31].                                     Page   39
---------------------------------- M14.ASM -----------------------------------

0f51 : 23               	inc	hl	   ; curs
0f52 : ed5bac88         	ld	de,(sWCB2+12) ; buff
0f56 : ed53b288         	ld	(sWCB2+18),de ; curs
0f5a : ed53b688         	ld	(sWCB2+22),de
0f5e : ed53da44         	ld	(bbuf),de  ;
0f62 : af               	xor	a
0f63 : ed52             	sbc	hl,de
0f65 : 22dc44           	ld	(lenb),hl  ;		
0f68 : ed53b088         	ld	(sWCB2+16),de ; buffe
0f6c : cdda09           	call 	BuffOU
0f6f : c34c0d           	jp 	tccw	
                        ; 
                        ; 
                        ;
0f72 :                  tcc_contr:
0f72 : dd217088         	ld	ix,sWCB0
0f76 : cd683e           	call	CLS_TW
                        ;	ld	l,(ix+12)
                        ;	ld	h,(ix+13)
0f79 : 2a7c88           	ld	hl,(sWCB0+12)
0f7c :                  tcc_ctr1:
0f7c : e5               	push	hl
0f7d : 7e               	ld	a,(hl)
0f7e : cd5e3c           	call	OUTC_TW
0f81 : e1               	pop	hl
0f82 : 23               	inc	hl
0f83 : 7c               	ld	a,h
0f84 : fec0             	cp	#C0
0f86 : 20f4             	jr	nz,tcc_ctr1
0f88 : cd003c           	call 	LOAD_S
                        	
0f8b : c34c0d           	jp	tccw
0f8e :                  tcc_home:
0f8e : dd217088         	ld	ix,sWCB0
0f92 : 2100c0           	ld	hl,#C000
                        ;	ld	(ix+18),l
                        ;	ld	(ix+19),h
0f95 : 228288           	ld	(sWCB0+18),hl
0f98 : cd5640           	call	PPBC
0f9b : c34c0d           	jp	tccw
0f9e :                  tcc_UP:
0f9e : dd217088         	ld	ix,sWCB0
0fa2 : cb46             	bit	0,(hl)  ; if 0 - SHIFT
0fa4 : cac00f           	jp	z,tccUPvPU ; View channel buffer UP 1 page
0fa7 : cb4e             	bit	1,(hl)	; if 0 - CTRL
0fa9 : cac50f           	jp	z,tccUPvU ; View channel buffer UP 1 string
                        ; 
0fac : c34c0d           	jp	tccw
                        	
0faf :                  tcc_DW:
0faf : dd217088         	ld	ix,sWCB0
0fb3 : cb46             	bit	0,(hl)  ; if 0 - SHIFT
0fb5 : caec0f           	jp	z,tccDWvPD ; View channel buffer UP 1 page
0fb8 : cb4e             	bit	1,(hl)	; if 0 - CTRL
0fba : caf10f           	jp	z,tccDWvD ; View channel buffer UP 1 string
                        ;
0fbd : c34c0d           	jp	tccw
0fc0 :                  tccUPvPU:
0fc0 : dd5605           	ld	d,(ix+5)
0fc3 : 1802             	jr	tccU2
0fc5 :                  tccUPvU:
                        ; View channel buff UP 1 string
AS80 Assembler for i8080 [1.31].                                     Page   40
---------------------------------- M14.ASM -----------------------------------

0fc5 : 1601             	ld	d,1
0fc7 :                  tccU2:
                        ;	ld	ix,sWCB0
                        ;	ld	l,(ix+18)	; buffer curs
                        ;	ld	h,(ix+19)
0fc7 : 2a8288           	ld	hl,(sWCB0+18)
0fca : 2b               	dec	hl
0fcb : 2b               	dec	hl
0fcc : 3e0a             tccU3:	ld	a,#0A
0fce : edb9             tccU1:	cpdr
0fd0 : 20fc             	jr	nz,tccU1	; 
                        ;	ld	a,#80
                        ;	cp	h
                        ;		
0fd2 : 15               	dec	d
0fd3 : 20f7             	jr	nz,tccU3
0fd5 : 23               	inc	hl
0fd6 : 23               	inc	hl              ;
0fd7 : eb               	ex	hl,de
                        ;	ld	l,(ix+12)
                        ;	ld	h,(ix+13)
0fd8 : 2a7c88           	ld	hl,(sWCB0+12)
0fdb : af               	xor	a
0fdc : 2b               	dec	hl
0fdd : ed52             	sbc	hl,de	;  hl-de=?
0fdf : d24c0d           	jp	nc,tccw
                        ;	ld	(ix+18),e
                        ;	ld	(ix+19),d
0fe2 : ed538288         	ld	(sWCB0+18),de
0fe6 : cd5640           	call	PPBC
0fe9 : c34c0d           	jp	tccw
                        
0fec :                  tccDWvPD
0fec : dd5605           	ld	d,(ix+5)
0fef : 1802             	jr	tccD0
0ff1 :                  tccDWvD:
                        ; View channel buff Down 1 string
0ff1 : 1601             	ld	d,1
0ff3 :                  tccD0:
                        ;	ld	ix,sWCB0
                        ;	ld	l,(ix+18)
                        ;	ld	h,(ix+19)
0ff3 : 2a8288           	ld	hl,(sWCB0+18)
0ff6 : 3e0a             tccD2:	ld	a,#0A
0ff8 : edb1             tccD1:	cpir
0ffa : c2f80f           	jp	nz,tccD1
0ffd : 7c               	ld	a,h
0ffe : fec0             	cp	#C0
1000 : 300c             	jr	nc,tccD3 ; out of buffer hl > #C000
1002 : 15               	dec	d
1003 : 20f1             	jr	nz,tccD2
1005 :                  tccD4:
                        ;	ld	(ix+18),l
                        ;	ld	(ix+19),h
1005 : 228288           	ld	(sWCB0+18),hl
1008 : cd5640           	call	PPBC
100b : c34c0d           	jp	tccw
100e : 2100c0           tccD3:	ld	hl,#C000 ; set cur end of buffer
1011 : c30510           	jp	tccD4
                        
1014 :                  tcc_ESC:
1014 : 3a812c           	ld	a,(segp)
AS80 Assembler for i8080 [1.31].                                     Page   41
---------------------------------- M14.ASM -----------------------------------

1017 : 32802c           	ld	(segsel),a
101a : c34003           	jp	SYS_S
                        
101d :                  tcc_F2:
                        ;	Select Nick -> Select Nick operation
                        ;
101d : cd913e           	call	CLKB
1020 : 3a7d2c           	ld	a,(S_C)
1023 : cdc62b           	call	PUT_P2
1026 : dd218888         	ld      ix,sWCB1	;nicks windows
                        
                        ; test for nicks empty
102a : dd7e17           	ld	a,(ix+23)
102d : b7               	or	a
102e : ca4c0d           	jp	z,tccw
                        
                        ;	stop chanel out on screen
1031 : af               	xor	a
1032 : 32ed44           	ld	(stopC),a
                        ; cursor on
1035 : dd7e0a           	ld	a,(ix+10)
1038 : b7               	or	a
1039 : 200b             	jr	nz,nks0
103b : dd4605           	ld	b,(ix+5)
103e : b8               	cp	b
103f : 3805             	jr	c,nks0
1041 : 3e01             	ld	a,1
1043 : dd770a           	ld	(ix+10),a ; n_cur =1
1046 :                  nks0:
                        
                        
                        ; *
                        ; 
                        
1046 :                  nicks1:
                        
                        
                        ; draw nick's box on channel win
1046 : 216d80           	ld	hl,29+80+#8000
1049 : 3618             	ld	(hl),24
104b : 23               	inc	hl
104c : 0620             	ld	b,32
104e : 3e17             	ld	a,23
1050 : 77               nks1	ld	(hl),a
1051 : 23               	inc	hl
1052 : 10fc             	djnz	nks1
                        ;	inc	hl
1054 : 3619             	ld	(hl),25
1056 : 21bd80           	ld	hl,29+80*2+#8000
1059 : 3616             	ld	(hl),22
105b : 21de80           	ld	hl,62+80*2+#8000
105e : 3616             	ld	(hl),22
1060 : 210d81           	ld	hl,29+80*3+#8000
1063 : 361a             	ld	(hl),26
1065 : 23               	inc	hl
1066 : 0620             	ld	b,32
1068 : 77               nks2	ld	(hl),a
1069 : 23               	inc	hl
106a : 10fc             	djnz	nks2
                        ;	inc	hl
106c : 361b             	ld	(hl),27
                        
AS80 Assembler for i8080 [1.31].                                     Page   42
---------------------------------- M14.ASM -----------------------------------

106e :                  nks_f:		
                        ; clear atribytes
106e : cd1440           	call	CLAT_C_N
                        ; 
1071 : cde711           	call	NICKOS	
                        
1074 :                  nks4:
                        ; draw nick cursor (atrib)
1074 : cd1f40           	call	SETAT_N	
1077 : cded3b           	call	LOAD_SA	; ***************************** ubr
                        ;	call	LOAD_S	; ***
                        ; out full nickname to nickname box
107a : dd7e16           	ld	a,(ix+22)
107d : dd860a           	add	a,(ix+10)	; a - npos nick in buffer
1080 : b7               	or	a
1081 : 283b             	jr	z,nks8	; no curs
                        ;	inc	a
1083 : 57               	ld	d,a
1084 : 010003           	ld	bc,#300	; **
1087 : 3e20             	ld	a," "
                        ;	ld	l,(ix+12)
                        ;	ld	h,(ix+13)
1089 : 2a9488           	ld	hl,(sWCB1+12)
108c : 15               nks6_:	dec	d
108d : 2804             	jr	z,nks5
108f : edb1             	cpir
1091 : 18f9             	jr	nks6_
1093 :                  nks5:	; hl - fineded nick in buff
1093 : 2b               	dec	hl
1094 : 11be80           	ld	de,30+80*2+#8000 ; 
1097 : 0620             	ld	b,32		 ; max nick lenght
1099 : 0e20             	ld	c," "
109b : 23               nks6:	inc	hl
109c : 7e               	ld	a,(hl)
109d : fe40             	cp	"@"
109f : 28fa             	jr	z,nks6
10a1 : fe25             	cp	"%"
10a3 : 28f6             	jr	z,nks6
10a5 : fe2b             	cp	"+"
10a7 : 28f2             	jr	z,nks6
10a9 : b9               	cp	c 	; " "
10aa : 280d             	jr	z,nks7
10ac : fe00             	cp	0
10ae : 2809             	jr	z,nks7
10b0 : eb               	ex	hl,de
10b1 : 77               	ld	(hl),a
10b2 : 23               	inc	hl
10b3 : eb               	ex	hl,de
10b4 : 05               	dec	b
10b5 : 2807             	jr	z,nks8
10b7 : 18e2             	jr	nks6
10b9 : eb               nks7:	ex	hl,de
10ba : 71               nks9:	ld	(hl),c
10bb : 23               	inc	hl
10bc : 10fc             	djnz	nks9
10be :                  nks8:	; transfer nick complete
                        
10be : cd003c           	call	LOAD_S
                        ;
                        
                        
10c1 :                  nks10:
AS80 Assembler for i8080 [1.31].                                     Page   43
---------------------------------- M14.ASM -----------------------------------

                        ; input block
10c1 : cd633b           	call	CLOCK	
10c4 : cd1818           	call	TCPSEP
10c7 : 0e0b             	ld	c,_CONST
10c9 : cd0500           	call	DOS
10cc : b7               	or	a
10cd : cac110           	jp	z,nks10
10d0 : 0e07             	ld	c,_INNO
10d2 : cd0500           	call	DOS
10d5 : 47               	ld	b,a
10d6 : 3a7d2c           	ld	a,(S_C)
10d9 : cdc62b           	call	PUT_P2
10dc : dd218888         	ld	ix,sWCB1	; nick WCB
10e0 : 21ebfb           	ld	hl,#FBEB
10e3 : 78               	ld	a,b
                        ;	bit	7,(hl)
                        
10e4 : fe1e             	cp	UP_
10e6 : ca3011           	jp	z,nks_UP
10e9 : fe1f             	cp	DOWN_
10eb : ca4f11           	jp	z,nks_DW
10ee : fe1d             	cp	LEFT_
                        	
10f0 : fe1c             	cp	RIGHT_
                        
10f2 : fe0d             	cp	#0D
10f4 : ca0811           	jp	z,nks_ent
                        	
10f7 : fe1b             	cp	27
10f9 : caff10           	jp	z,nks_end
                        
10fc : c3c110           	jp	nks10 ; **
                        
10ff :                  nks_end:
10ff : cd1440           	call	CLAT_C_N
1102 : cd5640           	call	PPBC
1105 : c34c0d           	jp	tccw
                        ; enter select nickname to channel send buffer
1108 :                  nks_ent:
1108 : 21be80           	ld	hl,30+80*2+#8000 ; full nick name of screen
110b : 0620             	ld	b,32		 ; max nickname length
110d : 11d146           	ld	de,tsb+4         ; send buffer pointer
1110 : ed53cf46         	ld	(tsb+2),de
1114 : fd210000         	ld	iy,0		 ; counter ini
1118 :                  nksent1:
1118 : 7e               	ld	a,(hl)	
1119 : fe20             	cp	" "
111b : caff10           	jp	z,nks_end
111e : 05               	dec	b
111f : caff10           	jp	z,nks_end
1122 : fd23             	inc	iy
                        
1124 : fd22cd46         	ld	(tsb),iy
1128 : eb               	ex	hl,de
1129 : 77               	ld	(hl),a
112a : eb               	ex	hl,de
112b : 13               	inc	de
112c : 23               	inc	hl
112d : c31811           	jp	nksent1
                        
1130 :                  nks_UP:
1130 : dd7e0a           	ld	a,(ix+10)
AS80 Assembler for i8080 [1.31].                                     Page   44
---------------------------------- M14.ASM -----------------------------------

1133 : b7               	or	a		; curs off
1134 : cac110           	jp	z,nks10 ; **
1137 : 3d               	dec	a
1138 : ca4111           	jp	z,nksUP1	; top screen
113b : dd770a           	ld	(ix+10),a
113e : c36e10           	jp	nks_f
1141 : dd7e16           nksUP1:	ld	a,(ix+22)
1144 : b7               	or	a		; top n_buff
1145 : cac110           	jp	z,nks10 ; **
1148 : 3d               	dec	a		; scroll 
1149 : dd7716           	ld	(ix+22),a
114c : c36e10           	jp	nks_f
114f :                  nks_DW:
114f : dd7e0a           	ld	a,(ix+10)	; curs
1152 : 57               	ld	d,a
1153 : dd4e16           	ld	c,(ix+22)	; shift 
1156 : dd4617           	ld	b,(ix+23)	; nick count
1159 : 81               	add	a,c
115a : b8               	cp	b
115b : d2c110           	jp	nc,nks10 ; **
115e : 7a               	ld	a,d
115f : b7               	or	a		; curs off
1160 : cac110           	jp	z,nks10 ; ** 
1163 : dd4605           	ld	b,(ix+5)	; v size
1166 : b8               	cp	b
1167 : d27111           	jp	nc,nksDW1
116a : 3c               	inc	a
116b : dd770a           	ld	(ix+10),a
116e : c36e10           	jp	nks_f
1171 : 0c               nksDW1:	inc 	c	
1172 : dd7116           	ld	(ix+22),c
1175 : c36e10           	jp	nks_f
                        	
                        
1178 :                  tcc_F3:
                        ; Test F3 load nick windows
                        ;tnicks	
                        
1178 : dd218888         	ld      ix,sWCB1	;nicks windows
117c : 214c46           	ld	hl,tnicks
117f : 01c800           	ld	bc,200
1182 : af               	xor	a
1183 : edb3             	otir			; Search #00
                        ;	inc	hl
1185 : 114c46           	ld	de,tnicks
1188 : af               	xor	a
1189 : ed52             	sbc	hl,de
118b : 4d               	ld	c,l
118c : 44               	ld	b,h
                        
118d : 018100           	ld	bc,tnickse-tnicks	;******
1190 : eb               	ex	hl,de
1191 : dd5e0c           	ld 	e,(ix+12)
1194 : dd560d           	ld	d,(ix+13)
1197 : edb0             	ldir			; load nick buffer- de, from hl, bc- length
1199 : dd7310           	ld	(ix+16),e	; save end buffer
119c : dd7211           	ld	(ix+17),d
                        
                        ;	jp	clcn2	; *********************
                        	
                        ; calc Nicks counter
                        ;
AS80 Assembler for i8080 [1.31].                                     Page   45
---------------------------------- M14.ASM -----------------------------------

119f : dd5e0c           	ld	e,(ix+12) ; buff
11a2 : dd560d           	ld	d,(ix+13)
11a5 : dd6e10           	ld	l,(ix+16) ; b_end
11a8 : dd6611           	ld	h,(ix+17)
11ab : af               	xor	a
11ac : ed52             	sbc	hl,de
11ae : 4d               	ld	c,l
11af : 44               	ld	b,h
11b0 : eb               	ex	hl,de
11b1 : 57               	ld	d,a	;0
11b2 : 3e20             	ld	a," "
11b4 : edb1             clcn1_:	cpir
11b6 : e2bc11           	jp	po,clcn2 ; ************************* jp pe ???
                        ;	inc	hl ****
11b9 : 14               	inc	d
11ba : 18f8             	jr	clcn1_
11bc :                  clcn2:	; d - nick's is counted
                        
                        ;	ld	d,12 ****
11bc : dd7217           	ld	(ix+23),d
11bf : af               	xor	a
11c0 : dd361600         	ld	(ix+22),0
11c4 : 3c               	inc	a
11c5 : dd770a           	ld	(ix+10),a
11c8 : cde711           	call	NICKOS
11cb : cd003c           	call	LOAD_S	; *****
                        
                        
                        ;tccF3_0:
                        ;	ld	a,(hl)
                        ;	cp	0
                        ;	jr	z,tccF3_1
                        ;	
                        ;	cp	" "
                        ;	jr	z,tccF3n
                        ;	push	hl
                        ;tccF3_2	call	OUTC_TW
                        ;	pop	hl
                        ;	inc	hl
                        ;	jr	tccF3_0
                        ;tccF3n:
                        ;	push	hl
                        ;	ld	a,#0D
                        ;	call	OUTC_TW
                        ;	ld	a,#0A
                        ;	jr	tccF3_2	
                        ;
11ce : cd003c           	call	LOAD_S
11d1 : fb               	ei
                        ;	clear kbd_buffer
                        
                        
11d2 : cd913e           	call	CLKB
11d5 : c34c0d           	jp	tccw
                        ; quit channel - part #channel , close channel
11d8 :                  tcc_Q:
                        ; part
11d8 : cd201d           	call	TCP_PARTC
                        
                        ; close
11db : 3a812c           	ld	a,(segp)
11de : cdbb15           	call	FRE_RECS
AS80 Assembler for i8080 [1.31].                                     Page   46
---------------------------------- M14.ASM -----------------------------------

11e1 : cd3d3f           	call	BFSegT
                        ;	ld	a,(ix+16)
                        ;	or 	a
                        ;	jp	z,SYS_S
11e4 : c3b403           	jp	S_LEFT;
                        
                        ;
                        ; nick out of screen
                        ; sWCB1 (nick windows) IX+22 - begin out 
                        ; ix+22 start nick N
                        ; ix+23 - counter nick
11e7 :                  NICKOS:
11e7 : cd683e           	call	CLS_TW
11ea : af               	xor	a
11eb : dd7706           	ld	(ix+6),a
11ee : dd7707           	ld	(ix+7),a
                        ;	ld	e,(ix+12) ; buff
                        ;	ld	d,(ix+13)
11f1 : ed5b9488         	ld	de,(sWCB1+12)
                        ;	ld	l,(ix+16) ; b_end
                        ;	ld	h,(ix+17)
11f5 : 2a9888           	ld	hl,(sWCB1+16)
11f8 : af               	xor	a
11f9 : ed52             	sbc	hl,de
11fb : 4d               	ld	c,l
11fc : 44               	ld	b,h
11fd : eb               	ex	hl,de
11fe : dd5616           	ld	d,(ix+22) ; n - nick
1201 : 14               	inc	d
1202 : 3e20             	ld	a," "
1204 : 15               niko01:	dec	d
1205 : 2805             	jr	z,niko02
1207 : edb1             	cpir
1209 : e0               	ret 	po
120a : 18f8             	jr	niko01
120c :                  niko02:
                        ;	ld	ix,sWCB1
120c : 7e               nicko1:	ld	a,(hl)
120d : b7               	or	a
120e : c8               	ret	z
120f : fe20             	cp	" "
1211 : 2808             	jr	z,nicko3
1213 : e5               	push	hl
1214 : cd5e3c           nicko2:	call	OUTC_TW
1217 : e1               	pop	hl
1218 : 23               	inc	hl
1219 : 18f1             	jr	nicko1
121b : e5               nicko3: push	hl
121c : 3e0d             	ld	a,#0D
121e : cd5e3c           	call	OUTC_TW
1221 : 3e0a             	ld	a,#0A
1223 : 18ef             	jr	nicko2	
                        ;*****************************************************
1225 :                  LsEnQS:
                        ;*******************************************
                        ; Enter Query Segment
                        ;*******************************************
1225 : 23               	inc	hl
1226 : 7e               	ld	a,(hl)
1227 : 327d2c           	ld	(S_C),a
122a : 3a802c           	ld	a,(segsel)
122d : 32812c           	ld	(segp),a
AS80 Assembler for i8080 [1.31].                                     Page   47
---------------------------------- M14.ASM -----------------------------------

1230 : c3ec12           	jp	QUEC
                        
                        ; Create Query record (Query segment)
1233 :                  QUERY_C:
                        ; test on exist some query
                        ; Find query segment
1233 : 3e51             	ld	a,"Q"
1235 : 115831           	ld	de,PA_QNICK
1238 : cd0716           	call	SrS
123b : 3801             	jr	c,QUE_NOq
                        ;	ld	(S_C),a
123d : c9               	ret	
123e :                  QUE_NOq:
123e : cd1440           	call	CLAT_C_N
                        ;
1241 : cdcf15           	call	ALL_REC
1244 : 78               	ld	a,b
1245 : 32812c           	ld	(segp),a
1248 : dafb15           	jp	c,NO_REC_M
124b : e5               	push	hl
124c : 3e00             	ld	a,0
124e : 0600             	ld	b,0
1250 : cda22b           	call	ALL_SEG
1253 : e1               	pop	hl
1254 : da0116           	jp	c,NO_SEG_M
                        ; set record Q status
1257 : 3651             	ld	(hl),"Q"
1259 : 23               	inc	hl
                        ; set segment mapper
125a : 77               	ld	(hl),a
                        ; INI Query control segment
125b : 327d2c           	ld	(S_C),a
125e : cdc62b           	call	PUT_P2
1261 : cd383b           	call	CLS_G
1264 : 3a812c           	ld	a,(segp)
1267 : 32bb88           	ld	(segs),a
126a : 1600             	ld	d,0
126c : 3abb88           	ld	a,(segs)
126f : 5f               	ld	e,a
1270 : 210080           	ld	hl,#8000
1273 : 0602             	ld	b,2
1275 : 0e30             	ld	c,"0"
1277 : 3e00             	ld	a,0
1279 : cd8c37           	call	NUMTOASC
127c : 210380           	ld	hl,#8000+3
127f : 3651             	ld	(hl),"Q"	; "Q" descriptor
1281 : 23               	inc	hl
1282 : 23               	inc	hl
                        ; query nickname 	
1283 : 115831           	ld	de,PA_QNICK
1286 : 061e             	ld	b,30
1288 : 1a               QUE_2:	ld	a,(de)
1289 : b7               	or	a
128a : 2809             	jr	z,QUE_1
128c : fe20             	cp	" "
128e : 2805             	jr	z,QUE_1
1290 : 77               	ld	(hl),a
1291 : 23               	inc	hl
1292 : 13               	inc	de
1293 : 10f3             	djnz	QUE_2
1295 : 3620             QUE_1:	ld	(hl)," "
                        
AS80 Assembler for i8080 [1.31].                                     Page   48
---------------------------------- M14.ASM -----------------------------------

                        ; test block
                        ;                        ; print # map segment
                        ;        ld      d,0
                        ;        ld      a,(S_C)
                        ;        ld      e,a
                        ;        ld      c,"0"
                        ;        ld      b,3
                        ;        ld      a,0
                        ;        inc     hl
                        ;        call    NUMTOASC
                        ;       not realise ?
                        ; end test, block
                        
                        
1297 : 216445                   ld      hl,WCB01        ; server WCB template
129a : 117088                   ld      de,sWCB0
129d : 011800                   ld      bc,24
12a0 : edb0                     ldir
12a2 : dd217088                 ld      ix,sWCB0
12a6 : cd683e                   call    CLS_TW
                        ;                               ini windows enter stri
12a9 : 21ac45                   ld      hl,WCB3
12ac : 11a088                   ld      de,sWCB2
12af : 011800                   ld      bc,24
12b2 : edb0                     ldir
12b4 : dd21a088                 ld      ix,sWCB2
12b8 : cd683e                   call    CLS_TW
                        	
                        ; ini cursor
12bb : af                       xor     a
12bc : 32b888                   ld      (oldcur),a
12bf : 32b988                   ld      (oldcur+1),a
                        ;       inc     a
12c2 : 32ba88                   ld      (oldcur+2),a
                        ; clear ct buffer
12c5 : 21008a                   ld      hl,#8A00
12c8 : 010e01                   ld      bc,270
12cb : af               QUE_4:   xor     a
12cc : 77                       ld      (hl),a
12cd : 23                       inc     hl
12ce : 0b                       dec     bc
12cf : 78                       ld      a,b
12d0 : b1                       or      c
12d1 : 20f8                     jr      nz,QUE_4
                        
12d3 : cd003c                   call    LOAD_S
12d6 : fb               	ei
                        ;       ini buffer for back loading
                        
12d7 : 211900                   ld      hl,#0019 ;v-25
                                bios    POSIT
12da : f7              >	rst	#30
12db : 00              >	db	0
12dc : c600            >	dw	POSIT
                        
12de : cd913e                   call    CLKB
12e1 : cd3d3f                   call    BFSegT          ; rebuild active segmr
12e4 : 3a7d2c           	ld	a,(S_C)
12e7 : cdc62b           	call	PUT_P2
12ea : b7               	or	a
12eb : c9               	ret
                        ;*****************************************************
AS80 Assembler for i8080 [1.31].                                     Page   49
---------------------------------- M14.ASM -----------------------------------

12ec :                  QUEC:
12ec :                  QUEw:
12ec : 3a7d2c                   ld      a,(S_C)
12ef : cdc62b                   call    PUT_P2
12f2 : cdb53f                   call    SSIA
                        
12f5 : dd21a088                 ld      ix,sWCB2
                        
12f9 : 2aa288                   ld      hl,(sWCB2+2)    ;*
12fc : 1600                     ld      d,0
12fe : dd5e06                   ld      e,(ix+6)
1301 : 19                       add     hl,de
1302 : cdd13d                   call    CURSOR
1305 : cd003c                   call    LOAD_S
                        
1308 :                  QUEC0:				; macros auto
1308 : ed4bcd46         	ld	bc,(tsb)
130c : 78               	ld	a,b
130d : b1               	or	c
130e : 2810             	jr	z,QUECB
1310 : 0b               	dec	bc
1311 : ed43cd46         	ld	(tsb),bc
1315 : 2acf46           	ld	hl,(tsb+2)
1318 : 7e               	ld	a,(hl)
1319 : 23               	inc	hl
131a : 22cf46           	ld	(tsb+2),hl
131d : c34413           	jp	QUECC
1320 :                  QUECB:
1320 : cd633b           	call	CLOCK
1323 : cd1818           	call	TCPSEP
1326 : 3a8f2d           	ld	a,(req)
1329 : fe01             	cp	1
132b : ca6f0c           	jp	z,CHANNEL_CREATE	;CHANNEL_CREATE
                        
132e : c3a115           	jp	SEL_RE
1331 :                  QUE_RE:
1331 : cdf43f           	call	L_SIA
                        ;	ld	a,"q"
                        ;	ld	(#8000+2),a
                        	
1334 : cd550c           	call	newsload
                        
                        ;	ld	a,(w0new)
                        ;	or	a
                        ;	call	nz,LOAD_S
                        ;	xor	a
                        ;	ld	(w0new),a
                        
                        			; keyboard input
1337 : 0e0b             	ld	c,_CONST
1339 : cd0500           	call	DOS
133c : b7               	or	a
133d : 28c9             	jr	z,QUEC0
133f : 0e07             	ld	c,_INNO
1341 : cd0500           	call	DOS
1344 :                  QUECC:
1344 : 47               	ld	b,a
1345 : 3a7d2c           	ld	a,(S_C)
1348 : cdc62b           	call	PUT_P2
134b : dd21a088         	ld	ix,sWCB2
134f : 21ebfb           	ld	hl,#FBEB
1352 : 78               	ld	a,b
AS80 Assembler for i8080 [1.31].                                     Page   50
---------------------------------- M14.ASM -----------------------------------

                        
1353 : cb7e             	bit	7,(hl)
                        ;	jp	z,QUE_F3
1355 : cb76             	bit	6,(hl)
                        ;	jp	z,QUE_F2
1357 : cb6e             	bit	5,(hl)
1359 : ca9e04           	jp	z,Ls_help
135c : fe0d             	cp	#0D
135e : cab714           	jp	z,QUE_se
1361 : fe1b             	cp	ESC_
1363 : ca8c15           	jp	z,QUE_EX
1366 : fe0b             	cp	11	; CLS/HOME cancel view buffer chancel
1368 : ca0615           	jp	z,QUE_home
136b : fe1e             	cp	UP_
136d : ca1615           	jp	z,QUE_UP
1370 : fe1f             	cp	DOWN_
1372 : ca2715           	jp	z,QUE_DW
1375 : fe11             	cp	17	;CTRL+Q
1377 : ca9515           	jp	z,QUE_Q
                        	
                        ;	cp	24	; SELECT
                        ;	jp	z,QUE_contr
                        
                        ; edit enter string
137a : fe08             	cp	8 ; "BS" <-
137c : ca7d14           	jp	z,QUE_bs
137f : fe12             	cp	18 ; INS
1381 : caea13           	jp	z,QUE_ins
1384 : fe7f             	cp	127 ; DEL
1386 : ca5214           	jp	z,QUE_del	
1389 : fe1d             	cp	LEFT_
138b : caf413           	jp	z,QUE_left
138e : fe1c             	cp	RIGHT_
1390 : ca1e14           	jp	z,QUE_right
                        
                        ; regular char	
1393 : 08               	ex	af,af'
1394 : 3ae744           	ld	a,(s_ins)
1397 : b7               	or	a
1398 : 281c             	jr	z,QUE_r4    ; no insret option
139a : 2ab088           	ld	hl,(sWCB2+16) ;*
139d : 5d               	ld	e,l
139e : 54               	ld	d,h
139f : 2b               	dec	hl
13a0 : ed4bb288         	ld	bc,(sWCB2+18)
13a4 : af               	xor	a
13a5 : ed42             	sbc	hl,bc
13a7 : 380d             	jr	c,QUE_r4    ; no right part string
13a9 : 23               	inc	hl
13aa : 4d               	ld	c,l
13ab : 44               	ld	b,h
13ac : 6b               	ld	l,e
13ad : 62               	ld	h,d
13ae : 13               	inc	de
13af : ed53b088         	ld	(sWCB2+16),de
13b3 : 03               	inc	bc
13b4 : edb8             	lddr                ; scroll 
13b6 : 08               QUE_r4:	ex	af,af'
                        ; save cahr to buff
13b7 : 2ab288           	ld	hl,(sWCB2+18)
13ba : 77               	ld	(hl),a
13bb : 23               	inc	hl
AS80 Assembler for i8080 [1.31].                                     Page   51
---------------------------------- M14.ASM -----------------------------------

13bc : 22b288           	ld	(sWCB2+18),hl
13bf : ed5bb088         	ld	de,(sWCB2+16)
13c3 : af               	xor	a
13c4 : ed52             	sbc	hl,de
13c6 : 3805             	jr	c,QUE_r3
13c8 : 13               	inc	de
13c9 : ed53b088         	ld	(sWCB2+16),de
13cd : dd7e06           QUE_r3:	ld	a,(ix+6)
13d0 : dd4604           	ld	b,(ix+4)
13d3 : 05               	dec	b
13d4 : b8               	cp	b           ; screen cursor end positoin ?
13d5 : 3006             	jr	nc,QUE_r1   ; y
13d7 : 3c               	inc	a           ; no, inc h-cur
13d8 : dd7706           	ld	(ix+6),a
13db : 1807             	jr	QUE_r2
13dd :                  QUE_r1:	
13dd : 2ab688           	ld	hl,(sWCB2+22)
13e0 : 23               	inc	hl
13e1 : 22b688           	ld	(sWCB2+22),hl
13e4 :                  QUE_r2:
                        
13e4 : cd253e           	call	OUTSTRW
13e7 : c3ec12           	jp	QUEw
13ea :                  QUE_ins
13ea : 3ae744           	ld	a,(s_ins)
13ed : 2f               	cpl	
13ee : 32e744           	ld	(s_ins),a
13f1 : c3ec12           	jp	QUEw
13f4 :                  QUE_left:
13f4 : cb4e             	bit	1,(hl)
13f6 : cab403           	jp	z,S_LEFT
13f9 : ed5bb288         	ld	de,(sWCB2+18)
13fd : 2aac88           	ld	hl,(sWCB2+12)
1400 : af               	xor	a	
1401 : ed52             	sbc	hl,de	; |<- X
1403 : d2ec12           	jp	nc,QUEw ; no LEFT
1406 : 1b               	dec	de
1407 : ed53b288         	ld	(sWCB2+18),de
                        ; LEFT
140b : dd3506                   dec	(ix+6)   ; c_cur --
140e : f21814           	jp	p,QUEL1  ; > 0 norm
1411 : dd3406           	inc	(ix+6)   ; c_cur ++     
1414 : ed53b688         	ld	(sWCB2+22),de
1418 :                  QUEL1:	
                        	
1418 : cd253e           	call	OUTSTRW
141b : c3ec12           	jp	QUEw
                        
141e :                  QUE_right:
141e : cb4e             	bit	1,(hl)
1420 : cad403           	jp	z,S_RIGHT
1423 : ed5bb288         	ld	de,(sWCB2+18)
1427 : 2ab088           	ld	hl,(sWCB2+16)
142a : 13               	inc	de
142b : af               	xor	a
142c : ed52             	sbc	hl,de
142e : daec12           	jp	c,QUEw    ; ->| X
1431 : ed53b288         	ld	(sWCB2+18),de
1435 : dd4604           	ld	b,(ix+4)   ; H-size
1438 : dd7e06           	ld	a,(ix+6)   ; h_cur
143b : 3c               	inc	a
143c : b8               	cp	b
AS80 Assembler for i8080 [1.31].                                     Page   52
---------------------------------- M14.ASM -----------------------------------

143d : d24514           	jp	nc,QUE_R1
1440 : dd7706           	ld	(ix+6),a
1443 : 1807             	jr	QUE_R2
1445 : 2ab688           QUE_R1:	ld	hl,(sWCB2+22)
1448 : 23               	inc	hl
1449 : 22b688           	ld	(sWCB2+22),hl
                        
144c : cd253e           QUE_R2:	call	OUTSTRW
144f : c3ec12           	jp	QUEw
1452 :                  QUE_del:
1452 : 2ab288           	ld	hl,(sWCB2+18)
1455 : ed5bb088         	ld	de,(sWCB2+16)
1459 : 1b               	dec	de
145a : af               	xor	a
145b : ed52             	sbc	hl,de
145d : 3803             	jr	c,QUE_del1   ; -1
145f : c2ec12           	jp	nz,QUEw      ; 1
1462 :                  QUE_del1:
1462 : ed53b088         	ld	(sWCB2+16),de
1466 : 280f             	jr	z,QUE_del2   ; 0
                        ; scroll right part string
1468 : 13               	inc 	de
1469 : af               	xor	a
146a : 19               	add	hl,de	
                        			; hl = b_cur  de = b_end-1 old
146b : eb               	ex	hl,de   ; hl = b_end new de = B_cur
146c : ed52             	sbc	hl,de   ; 
146e : 4d               	ld	c,l
146f : 44               	ld	b,h
1470 : 6b               	ld	l,e
1471 : 62               	ld	h,d
1472 : 2b               	dec	hl
1473 : 03               	inc	bc
1474 : eb               	ex	hl,de  ;
1475 : edb0             	ldir           
1477 :                  QUE_del2:
1477 : cd253e                   call	OUTSTRW
147a : c3ec12           	jp	QUEw
                        ; "back space" delete last symlol hposit --
147d :                  QUE_bs:
147d : 2aac88           	ld	hl,(sWCB2+12)
1480 : ed5bb288         	ld	de,(sWCB2+18)
1484 : af               	xor	a
1485 : ed52             	sbc	hl,de     ; |<- X
1487 : d2ec12           	jp	nc,QUEw   ; no BS
148a : 1b               	dec	de
148b : ed53b288         	ld	(sWCB2+18),de
                        
                        ; bs		
148f : dd3506                   dec	(ix+6)   ; c_cur --
1492 : f29c14           	jp	p,QUEbs1  ; > 0 norm
1495 : dd3406           	inc	(ix+6)   ; c_cur ++     
1498 : ed53b788         	ld	(sWCB2+23),de
149c :                  QUEbs1:	
                        ;scroll right part strint to left on 1 byte
149c : 2ab088           	ld	hl,(sWCB2+16)
149f : 2b               	dec	hl              ; endbuff--
14a0 : 22b088           	ld	(sWCB2+16),hl
14a3 : af               	xor	a
14a4 : ed52             	sbc	hl,de
14a6 : 7c               	ld	a,h
14a7 : b5               	or	l
AS80 Assembler for i8080 [1.31].                                     Page   53
---------------------------------- M14.ASM -----------------------------------

14a8 : 2807             	jr	z,QUEbs2
14aa : 4d               	ld	c,l
14ab : 44               	ld	b,h
14ac : 6b               	ld	l,e
14ad : 62               	ld	h,d
14ae : 23               	inc	hl
14af : edb0             	ldir
                        
14b1 :                  QUEbs2:	
14b1 : cd253e           	call	OUTSTRW
14b4 : c3ec12           	jp	QUEw
                        
14b7 :                  QUE_se:
                        ;
14b7 : cd683e           	call	CLS_TW     ; clear enter string of screen
14ba : af               	xor	a
14bb : dd7706           	ld	(ix+6),a
14be : dd7707           	ld	(ix+7),a
14c1 : 2ab088           	ld	hl,(sWCB2+16)
14c4 : 360d             	ld	(hl),#0D
14c6 : 23               	inc	hl
14c7 : 360a             	ld	(hl),#0A
14c9 : 23               	inc	hl	   ; curs
14ca : ed5bac88         	ld	de,(sWCB2+12)
14ce : ed53b288         	ld	(sWCB2+18),de
14d2 : ed53b688         	ld	(sWCB2+22),de
14d6 : ed53da44         	ld	(bbuf),de  ;
14da : af               	xor	a
14db : ed52             	sbc	hl,de
14dd : 22dc44           	ld	(lenb),hl  ;		
14e0 : ed53b088         	ld	(sWCB2+16),de
14e4 : cdda09           	call BuffOU
14e7 : c3ec12           	jp 	QUEw	
                        
14ea :                  QUE_contr:
14ea : dd217088         	ld	ix,sWCB0
14ee : cd683e           	call	CLS_TW
14f1 : 2a7c88           	ld	hl,(sWCB0+12)
14f4 :                  QUE_ctr1:
14f4 : e5               	push	hl
14f5 : 7e               	ld	a,(hl)
14f6 : cd5e3c           	call	OUTC_TW
14f9 : e1               	pop	hl
14fa : 23               	inc	hl
14fb : 7c               	ld	a,h
14fc : fec0             	cp	#C0
14fe : 20f4             	jr	nz,QUE_ctr1
1500 : cd003c           	call 	LOAD_S
                        	
1503 : c3ec12           	jp	QUEw
1506 :                  QUE_home:
1506 : dd217088         	ld	ix,sWCB0
150a : 2100c0           	ld	hl,#C000
150d : 228288           	ld	(sWCB0+18),hl
1510 : cd5640           	call	PPBC
1513 : c3ec12           	jp	QUEw
1516 :                  QUE_UP:
1516 : dd217088         	ld	ix,sWCB0
151a : cb46             	bit	0,(hl)  ; if 0 - SHIFT
151c : ca3815           	jp	z,QUEUPvPU ; View channel buffer UP 1 page
151f : cb4e             	bit	1,(hl)	; if 0 - CTRL
1521 : ca3d15           	jp	z,QUEUPvU ; View channel buffer UP 1 string
AS80 Assembler for i8080 [1.31].                                     Page   54
---------------------------------- M14.ASM -----------------------------------

                        ; 
1524 : c3ec12           	jp	QUEw
                        	
1527 :                  QUE_DW:
1527 : dd217088         	ld	ix,sWCB0
152b : cb46             	bit	0,(hl)  ; if 0 - SHIFT
152d : ca6415           	jp	z,QUEDWvPD ; View channel buffer UP 1 page
1530 : cb4e             	bit	1,(hl)	; if 0 - CTRL
1532 : ca6915           	jp	z,QUEDWvD ; View channel buffer UP 1 string
                        ;
1535 : c3ec12           	jp	QUEw
1538 :                  QUEUPvPU:
1538 : dd5605           	ld	d,(ix+5)
153b : 1802             	jr	QUEU2
153d :                  QUEUPvU:
                        ; View channel buff UP 1 string
153d : 1601             	ld	d,1
153f :                  QUEU2:
153f : 2a8288           	ld	hl,(sWCB0+18)
1542 : 2b               	dec	hl
1543 : 2b               	dec	hl
1544 : 3e0a             QUEU3:	ld	a,#0A
1546 : edb9             QUEU1:	cpdr
1548 : 20fc             	jr	nz,QUEU1	; 
154a : 15               	dec	d
154b : 20f7             	jr	nz,QUEU3
154d : 23               	inc	hl
154e : 23               	inc	hl              ;
154f : eb               	ex	hl,de
1550 : 2a7c88           	ld	hl,(sWCB0+12)
1553 : af               	xor	a
1554 : 2b               	dec	hl
1555 : ed52             	sbc	hl,de	;  hl-de=?
1557 : d2ec12           	jp	nc,QUEw
155a : ed538288         	ld	(sWCB0+18),de
155e : cd5640           	call	PPBC
1561 : c3ec12           	jp	QUEw
                        
1564 :                  QUEDWvPD
1564 : dd5605           	ld	d,(ix+5)
1567 : 1802             	jr	QUED0
1569 :                  QUEDWvD:
                        ; View channel buff Down 1 string
1569 : 1601             	ld	d,1
156b :                  QUED0:
156b : 2a8288           	ld	hl,(sWCB0+18)
156e : 3e0a             QUED2:	ld	a,#0A
1570 : edb1             QUED1:	cpir
1572 : c27015           	jp	nz,QUED1
1575 : 7c               	ld	a,h
1576 : fec0             	cp	#C0
1578 : 300c             	jr	nc,QUED3 ; out of buffer hl > #C000
157a : 15               	dec	d
157b : 20f1             	jr	nz,QUED2
157d :                  QUED4:
157d : 228288           	ld	(sWCB0+18),hl
1580 : cd5640           	call	PPBC
1583 : c3ec12           	jp	QUEw
1586 : 2100c0           QUED3:	ld	hl,#C000 ; set cur end of buffer
1589 : c37d15           	jp	QUED4
                        
158c :                  QUE_EX:
AS80 Assembler for i8080 [1.31].                                     Page   55
---------------------------------- M14.ASM -----------------------------------

158c : 3a812c           	ld	a,(segp)
158f : 32802c           	ld	(segsel),a
1592 : c34003           	jp	SYS_S
1595 :                  QUE_Q:	;close record
1595 : 3a812c           	ld	a,(segp)
1598 : cdbb15           	call	FRE_RECS
159b : cd3d3f           	call	BFSegT
                        ;	ld	a,(ix+16)
                        ;	or 	a
                        ;	jp	z,SYS_S
159e : c3b403           	jp	S_LEFT;
15a1 :                  SEL_RE:
15a1 : 3a0380           	ld	a,(#8000+3)
15a4 : fe51             	cp	"Q"
15a6 : ca3113           	JP	Z,QUE_RE
15a9 : fe43             	cp	"C"
15ab : ca910d           	jp	z,CHA_RE
15ae : fe53             	cp	"S"
15b0 : cade07           	jp	z,SRV_RE
15b3 : fe48             	cp	"H"
15b5 : cacc05           	jp	z,HLP_RE
15b8 : c34003           	jp	SYS_S
                        
                        
                        ;*****************************************************
15bb :                  FRE_RECS:
                        ; Freeing record & freeing segment 
                        ; a - num record
15bb : 4f               	ld	c,a
15bc : 3e4f             	ld	a,79
15be : b9               	cp	c
15bf : d8               	ret	c
15c0 : cb11             	rl	c
15c2 : 0600             	ld	b,0
15c4 : 21832c           	ld	hl,MAPTAB
15c7 : 09               	add	hl,bc
15c8 : af               	xor	a
15c9 : 77               	ld	(hl),a
15ca : 23               	inc	hl
15cb : 7e               	ld	a,(hl)
15cc : c3a52b           	jp	FRE_SEG
                        
                        
                        ; Allocaton recod segment
                        ; input	- none
                        ; output B - recod, HL - enter recod Table (HL) - stat
15cf :                  ALL_REC:
15cf : 21832c           	ld	hl,MAPTAB
15d2 : 0600             	ld	b,0
15d4 : 7e               ALL_r1:	ld	a,(hl)
15d5 : b7               	or	a
15d6 : c8               	ret	z
15d7 : 04               	inc	b
15d8 : 23               	inc	hl
15d9 : 23               	inc	hl
15da : 3e4f             	ld	a,79
15dc : b8               	cp	b	
15dd : d8               	ret	c
15de : 18f4             	jr	ALL_r1
                        
15e0 :                  NO_REC:
15e0 : 219342           	ld	hl,SM_NOREC
AS80 Assembler for i8080 [1.31].                                     Page   56
---------------------------------- M14.ASM -----------------------------------

15e3 : cd553b           	call	PRINT_TW
15e6 : c34003           	jp	SYS_S
15e9 :                  NO_SEG:
15e9 : 21b242           	ld	hl,SM_NOSEG
15ec : cd553b           	call	PRINT_TW
15ef : c34003           	jp	SYS_S
15f2 :                  NO_SERV:
15f2 : 213443           	ld	hl,SM_NOSERV
15f5 : cd553b           	call	PRINT_TW
15f8 : c34003           	jp	SYS_S
15fb :                  NO_REC_M:
15fb : 219342           	ld	hl,SM_NOREC
15fe : c3553b           	jp	PRINT_TW
                        
1601 :                  NO_SEG_M:
1601 : 21b242           	ld	hl,SM_NOSEG
1604 : c3553b           	jp	PRINT_TW
                        
                        ; Find segment
                        ; input   a  - descriptor ("H"/"S"/"C"/"Q")
                        ;	  de - string name "..."
                        ; output  a  - mapper segment
                        ;	  (hl) - mapper segment
                        ;	  CF - set if not found 
                        ;	  set P2 page to find segment
1607 : 4f               SrS:	ld	c,a
1608 : 21832c           	ld	hl,MAPTAB
160b : 0650             	ld	b,80
160d : 7e               SrS2:	ld	a,(hl)
160e : e67f             	and	%01111111	
1610 : b9               	cp	c
1611 : 2807             	jr	z,SrS1
1613 : 23               	inc	hl
1614 : 23               	inc	hl
1615 : 05               	dec	b
1616 : 20f5             	jr	nz,SrS2
1618 : 37               	scf
1619 : c9               	ret
161a :                  SrS1:	
                        ;	ld	c,a	
161a : cdc92b           	call	GET_P2
161d : 32822c           	ld	(tsegt),a
1620 : 23               	inc	hl
1621 : 7e               	ld	a,(hl)
1622 : cdc62b           	call	PUT_P2
1625 : e5               	push	hl
1626 : d5               	push	de
1627 : 210580           	ld	hl,#8005
162a : cd3d16           	call	STRCMPSP
162d : d1               	pop	de
162e : e1               	pop	hl
162f : 280a             	jr	z,SrS3
1631 : 3a822c           	ld	a,(tsegt)
1634 : cdc62b           	call	PUT_P2
1637 : 23               	inc	hl
1638 : 79               	ld	a,c
1639 : 18d2             	jr	SrS2
163b :                  SrS3:
                        ;	ld	a,(tsegt)
                        ;	call	PUT_P2
163b : 7e               	ld	a,(hl)
163c : c9               	ret
AS80 Assembler for i8080 [1.31].                                     Page   57
---------------------------------- M14.ASM -----------------------------------

                        
                        
                        
                        
                        
                        ;--- STRCMPSP: Compares two strings
                        ;    Input: HL, DE = Strings
                        ;    Output: Z if strings are equal
                        
163d :                  STRCMPSP:
163d : 1a               	ld	a,(de)
163e : be               	cp	(hl)
163f : c0               	ret	nz
1640 : b7               	or	a
1641 : c8               	ret	z
1642 : fe20             	cp	" "
1644 : c8               	ret	z
1645 : 23               	inc	hl
1646 : 13               	inc	de
1647 : 18f4             	jr	STRCMPSP
                        
                        
                        
                        
                        
                        
                        
1649 :                  EXIT:
                        	bios	INITXT
1649 : f7              >	rst	#30
164a : 00              >	db	0
164b : 6c00            >	dw	INITXT
                        
164d : 0e00             	ld	c,_TERM0
164f : c30500           	jp	DOS
                        
                        
1652 :                  TERMINFO:
                        	print	INFO_S
1652 : 11ef20          >	ld	de,INFO_S
1655 : 0e09            >	ld	c,_STROUT
1657 : cd0500          >	call	DOS
                        
165a : 0e00             	ld	c,_TERM0
165c : c30500           	jp	DOS
                        
165f : c9               	ret
                        
                        ; TCP/IP subroutine
                        ;******************************
                        ;* Main TCP/IP Routines
                        ;******************************
                        
1660 :                  CONNECT_S:
                        ; Attemp to connect server
                        
                        	;--- Obtains server name 
                        
                        ;---
                        ;	jr	EE5
1660 : 3e01             	ld	a,1
1662 : 118331           	ld	de,HOST_NAME
AS80 Assembler for i8080 [1.31].                                     Page   58
---------------------------------- M14.ASM -----------------------------------

1665 : cde21d           	call	EXTPAR
                        ;---
1668 : d27816           	jp      nc,EE6
166b : 215f2e           	ld	hl,PA_SERVER
166e : 118331           	ld	de,HOST_NAME
1671 : 7e               EE7:	ld	a,(hl)
1672 : 12               	ld	(de),a
1673 : 23               	inc	hl
1674 : 13               	inc	de
1675 : b7               	or	a
1676 : 20f9             	jr	nz,EE7	
1678 :                  EE6:
                        ;	ld	de,HOST_NAME
                        ;	call	CONOUTS
1678 : 218331           	ld	hl,HOST_NAME
167b : cda609           	call	PRINT_BF
                        
                        	;--- Obtains remote port 
                        
                        ;	ld	a,2
                        ;	ld	de,BUFFER
                        ;	call	EXTPAR
                        ;	jp	c,MISSPAR	;Error if the parameter is missing
                        ;       jr	nc,EE9
167e : 21642f           	ld	hl,PA_PORT
1681 : 118c33           	ld	de,BUFFER
1684 : 7e               EE8:	ld	a,(hl)
1685 : 12               	ld	(de),a
1686 : 23               	inc	hl
1687 : 13               	inc	de
1688 : b7               	or	a
1689 : 20f9             	jr	nz,EE8	
168b :                  EE9:
                        ;	ld	de,BUFFER
                        ;	call	CONOUTS
168b : 218c33           	ld	hl,BUFFER
168e : cda609           	call	PRINT_BF
                        
1691 :                  EE5:
                        ;	ld	hl,HOST_PORT ;BUFFER
1691 : 218c33           	ld	hl,BUFFER
1694 : cd8439           	call	EXTNUM16
1697 : da8c1e           	jp	c,INVPAR	;Error if not a valid number
                        
169a : ed433820         	ld	(PORT_REMOTE),bc
                        
                        	;--- Obtains other parameters, if any
                        	;    (local port and passive connection)
                        
                        ;	ld	a,3	;Param number to be extracted
                        ;LASTPARAMS:	ld	ixh,a
                        ;	ld	de,BUFFER
                        ;	call	EXTPAR
                        ;	jr	c,NOMOREPARS	;The parameter is present?
                        ;
                        ;	ld	a,(BUFFER)	;If the first character of the paramet
                        ;	or	%00100000	;is "P" or "p", set passive open...
                        ;	cp	"p"
                        ;	jr	nz,NO_PASSIVE
                        ;	ld	a,1
                        ;	ld	(PASSIVE_OPEN),a
                        ;	jr	LASTPAR_NEXT
AS80 Assembler for i8080 [1.31].                                     Page   59
---------------------------------- M14.ASM -----------------------------------

                        ;NO_PASSIVE:
                        ;
                        ;	ld	hl,BUFFER	;...otherwise, if it is a number, set
                        ;	call	EXTNUM16	;local port; otherwise, it is an
                        ;	jp	c,INVPAR	;invalid parameter.
                        ;	ld	(PORT_LOCAL),bc
                        ;
                        ;LASTPAR_NEXT	ld	a,ixh
                        ;	inc	a
                        ;	cp	5	;Extracts params 3 and 4 only
                        ;	jr	c,LASTPARAMS
169e :                  NOMOREPARS:	;
                        
                        	;--- If we are in DOS 2, set the abort exit routine
                        
                        ;	ld	a,(DOS2)
                        ;	or	a
                        ;	ld	de,CLOSE_END	;From now on, pressing CTRL-C
                        ;	ld	c,_DEFAB	;has te same effect of pressing CTRL-ESC
                        ;	call	nz,DOS		;(aborts the TCP connection and termina
                        
                        
                        	;----------------------------------------------------
                        	;---  Host name resolution and TCP connection initiat
                        	;----------------------------------------------------
                        
                        	;>>> Resolve host name
                        
                        ;	print	RESOLVING_S
169e : 21ed21           	ld	hl,RESOLVING_S
16a1 : cda609           	call	PRINT_BF
                        
                        ;	call	SET_UNAPI
16a4 : 218331           	ld	hl,HOST_NAME
16a7 : 0600             	ld	b,0
16a9 : 3e06             	ld	a,TCPIP_DNS_Q
16ab : cd8e1f           	call	CALL_U	;Query the resolver...
                        	
16ae : 47               	ld	b,a	;...and check for an error
16af : dd214225         	ld	ix,DNSQERRS_T
16b3 : b7               	or	a
16b4 : 203a             	jr	nz,DNSQR_ERR
                        
                        	;* Wait for the query to finish
                        
16b6 :                  DNSQ_WAIT:
16b6 : 3e1d             	ld	a,TCPIP_WAIT
16b8 : cd8e1f           	call	CALL_U
16bb : cdf81e           	call	CHECK_KEY	;To allow process abort with CTRL-C
                        ;	call	SET_UNAPI
16be : 0601             	ld	b,1
16c0 : 3e07             	ld	a,TCPIP_DNS_S
16c2 : cd8e1f           	call	CALL_U
                        
                        	;* Error?
                        
16c5 : b7               	or	a
16c6 : dd21e225         	ld	ix,DNSRERRS_T
16ca : 2024             	jr	nz,DNSQR_ERR
                        
                        	;* The request continues? Then go back to the waiting
                        
AS80 Assembler for i8080 [1.31].                                     Page   60
---------------------------------- M14.ASM -----------------------------------

16cc : 78               	ld	a,b
16cd : fe02             	cp	2
16cf : 20e5             	jr	nz,DNSQ_WAIT	;The request has not finished yet?
                        
                        	;* Request finished? Store and display result, and co
                        
16d1 : 223420           	ld	(IP_REMOTE),hl	;Stores the returned result (L.H.E.
16d4 : ed533620         	ld	(IP_REMOTE+2),de
                        
16d8 : dd212d25         	ld	ix,RESOLVIP_S	;Displays the result
16dc : 3e24             	ld	a,"$"
16de : cdd01e           	call	IP_STRING
                        ;	print	RESOLVOK_S
                        ;	print	TWO_NL_S
16e1 : 212925           	ld	hl,RESOLVOK_S
16e4 : cda609           	call	PRINT_BF
16e7 : 213d25           	ld	hl,TWO_NL_S
16ea : cda609           	call	PRINT_BF
                        
16ed : c31717           	jp	RESOLV_OK	;Continues
                        
                        	;- Error routine for DNS_Q and DNS_S
                        	;  Input: B=Error code, IX=Errors table
                        
16f0 : dde5             DNSQR_ERR:	push	ix
16f2 : c5               		push	bc
                        
                        	;* Prints "ERROR <code>: "
                        
16f3 : dd212325         	ld	ix,RESOLVERRC_S
16f7 : 78               	ld	a,b
16f8 : cdff1e           	call	BYTE2ASC
16fb : dd36003a         	ld	(ix),":"
16ff : dd360120         	ld	(ix+1)," "
1703 : dd360224         	ld	(ix+2),"$"
                        ;	print	RESOLVERR_S
1707 : 211b25           	ld	hl,RESOLVERR_S
170a : cda609           	call	PRINT_BF
                        
                        	;* Obtains the error code, display it and finish
                        
170d : c1               	pop	bc
170e : d1               	pop	de
170f : cd411f           	call	GET_STRING
                        ;	ld	c,_STROUT
                        ;	call	DOS
1712 : eb               	ex	hl,de
1713 : cda609           	call	PRINT_BF
                        
                        ;	jp	TERMINATE
1716 : c9               	ret	
                        
1717 :                  RESOLV_OK:	;
                        ;-----------------------------------------------------
                        	;>>> Close all transient TCP connections
                        
                        ;	call	SET_UNAPI
1717 : 3e0f             	ld	a,TCPIP_TCP_ABORT
1719 : 0600             	ld	b,0
171b : cd8e1f           	call	CALL_U
                        
                        	;>>> Open the TCP connection
AS80 Assembler for i8080 [1.31].                                     Page   61
---------------------------------- M14.ASM -----------------------------------

                        
171e : 213420           	ld	hl,TCP_PARAMS
1721 : 3e0d             	ld	a,TCPIP_TCP_OPEN
1723 : cd8e1f           	call	CALL_U
1726 : b7               	or	a
1727 : 2837             	jr	z,OPEN_OK
                        
                        	;* If error is "not implemented", show the appropriat
                        	;  depending on the type of connection requested
                        
1729 : fe01             	cp	ERR_NOT_IMP
172b : 2021             	jr	nz,NO_NOT_IMP
                        
172d : 3a3e20           	ld	a,(PASSIVE_OPEN)
1730 : b7               	or	a
1731 : 111f2a           	ld	de,NOTCPA_S	;Active TCP open
1734 : ca801e           	jp	z,PRINT_TERM
                        
1737 : 2a3420           	ld	hl,(IP_REMOTE)
173a : ed5b3620         	ld	de,(IP_REMOTE+2)
173e : 7c               	ld	a,h
173f : b5               	or	l
1740 : b2               	or	d
1741 : b3               	or	e
1742 : 11f72a           	ld	de,NOTCPPU_S	;Passive TCP open with socket unespec
1745 : ca801e           	jp	z,PRINT_TERM
                        
1748 : 117c2a           	ld	de,NOTCPPS_S	;Passive TCP open with socket specifi
174b : c3801e           	jp	PRINT_TERM
                        
174e :                  NO_NOT_IMP:
                        
                        	;* If error is other, get its message from the errors
                        
174e : f5               	push	af
                        ;	print	ERROR_S
174f : 219d21           	ld	hl,ERROR_S
1752 : cda609           	call	PRINT_BF
1755 : f1               	pop	af
1756 : 47               	ld	b,a	;Error: Show the cause and terminate
1757 : 11b127           	ld	de,TCPOPERRS_T
175a : cd411f           	call	GET_STRING
175d : c3801e           	jp	PRINT_TERM
                        
1760 :                  OPEN_OK:
1760 : 78               	ld	a,b
1761 : 323f20           	ld	(CON_NUM),a	;No error: saves connection handle
                        ;	print	OPENING_S
1764 : 21c021           	ld	hl,OPENING_S
1767 : cda609           	call	PRINT_BF
                        ;	call	SET_UNAPI
                        
                        	;--- Wait until the connection is established.
                        	;    If ESC is pressed meanwhile, the connection is c
                        	;    and the program finishes.
                        
176a :                  WAIT_OPEN:
176a : 3e1d             	ld	a,TCPIP_WAIT
176c : cd8e1f           	call	CALL_U
                        
                        ;	ld	a,(#FBEC)	;Bit 2 of #FBEC is 0
                        ;	bit	2,a	;when ESC is being pressed
AS80 Assembler for i8080 [1.31].                                     Page   62
---------------------------------- M14.ASM -----------------------------------

                        ;;	jp	z,CLOSE_END
                        ;	ret	z
                        	
176f : 3a3f20           	ld	a,(CON_NUM)
1772 : 47               	ld	b,a
1773 : 210000           	ld	hl,0
1776 : 3e10             	ld	a,TCPIP_TCP_STATE
1778 : cd8e1f           	call	CALL_U
177b : b7               	or	a
177c : 2814             	jr	z,WAIT_OPEN2
                        
177e : c5               	push	bc
                        ;	print	ONE_NL_S
177f : 213f25           	ld	hl,ONE_NL_S
1782 : cda609           	call	PRINT_BF
1785 : c1               	pop	bc
1786 : 116b28           	ld	de,TCPCLOSED_T	;If the connection has reverted to 
1789 : 41               	ld	b,c
178a : cbf8             	set	7,b
178c : cd411f           	call	GET_STRING	;show the reason and terminate
178f : c3801e           	jp	PRINT_TERM
                        
1792 :                  WAIT_OPEN2:
1792 : 78               	ld	a,b
1793 : fe04             	cp	4	;4 = code for ESTABLISHED state
1795 : 20d3             	jr	nz,WAIT_OPEN
                        
                        ;	print	OPENED_S
1797 : 210522           	ld	hl,OPENED_S
179a : cda609           	call	PRINT_BF
179d : 2100c1           	ld	hl,NB_BU
17a0 : 228332           	ld	(B_BU),hl
17a3 : 228532           	ld	(E_BU),hl
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;--- Auto NICK, USER
                        ;	call	SET_UNAPI
                        
                        ;--- 0.5 sec pause
                        ;	ld	b,30
                        ;	ei
                        ;AN_3_:	halt
                        ;	djnz	AN_3_
                        ;
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        
17a6 : 21ffff           	ld	hl,#FFFF
17a9 : 118e2f           	ld	de,AA_NICK-1
17ac : 23               AN_1:	inc	hl
17ad : 13               	inc	de
17ae : 1a               	ld	a,(de)
17af : b7               	or	a
17b0 : 20fa             	jr	nz,AN_1
                        ;			hl	- length string
17b2 : 3a3f20           	ld	a,(CON_NUM)
17b5 : 47               	ld	b,a
17b6 : 118f2f           	ld	de,AA_NICK
17b9 : 0e01             	ld	c,1		;"Push" is specified
17bb : 3e11             	ld	a,TCPIP_TCP_SEND
17bd : cd8e1f           	call	CALL_U
17c0 : b7               	or	a
17c1 : c2581d           	jp	nz,TCP_ERROR
AS80 Assembler for i8080 [1.31].                                     Page   63
---------------------------------- M14.ASM -----------------------------------

                        
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        
                        ;	call	SET_UNAPI
                        
17c4 : 210200           	ld	hl,2
17c7 : 11552e           	ld	de,AA_CRLF
17ca : 3a3f20           	ld	a,(CON_NUM)
17cd : 47               	ld	b,a
17ce : 0e01             	ld	c,1
17d0 : 3e11             	ld	a,TCPIP_TCP_SEND
17d2 : cd8e1f           	call	CALL_U
17d5 : b7               	or	a
17d6 : c2581d           	jp	nz,TCP_ERROR
                        ;--- 0.5 sec pause
                        ;	ld	b,30
                        ;AN_3:	halt
                        ;	djnz	AN_3
                        ;
                        ;	call	SET_UNAPI
                        
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        
17d9 : 21ffff           	ld	hl,#FFFF
17dc : 11dd2f           	ld	de,AA_USER-1
17df : 23               AN_2:	inc	hl
17e0 : 13               	inc	de
17e1 : 1a               	ld	a,(de)
17e2 : b7               	or	a
17e3 : 20fa             	jr	nz,AN_2
                        ;			hl	- length string
17e5 : 3a3f20           	ld	a,(CON_NUM)
17e8 : 47               	ld	b,a
17e9 : 11de2f           	ld	de,AA_USER
17ec : 0e01             	ld	c,1		;"Push" is specified
17ee : 3e11             	ld	a,TCPIP_TCP_SEND
17f0 : cd8e1f           	call	CALL_U
17f3 : b7               	or	a
17f4 : c2581d           	jp	nz,TCP_ERROR
                        
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        
                        ;	call	SET_UNAPI
17f7 : 210200           	ld	hl,2
17fa : 11552e           	ld	de,AA_CRLF
17fd : 3a3f20           	ld	a,(CON_NUM)
1800 : 47               	ld	b,a
1801 : 0e01             	ld	c,1
1803 : 3e11             	ld	a,TCPIP_TCP_SEND
1805 : cd8e1f           	call	CALL_U
1808 : b7               	or	a
1809 : c2581d           	jp	nz,TCP_ERROR
                        
180c : 3e01             	ld	a,1
180e : 32862d           	ld	(serv1c),a
1811 : 2a9efc           	ld	hl,(timer)
1814 : 22572c           	ld	(tcptim),hl
1817 : c9               	ret
                        ;=====================================================
AS80 Assembler for i8080 [1.31].                                     Page   64
---------------------------------- M14.ASM -----------------------------------

1818 :                  TCPSEP:
1818 : 3a862d           	ld	a,(serv1c)
181b : b7               	or	a
181c : c8               	ret	z
181d : af               	xor	a
181e : 2a9efc           	ld	hl,(timer)
1821 : ed5b572c         	ld	de,(tcptim)
1825 : ed52             	sbc	hl,de
1827 : c8               	ret	z
                        
                        ;	call	END_RCV
                        
                        ;
                        ;	ld	a,(serv1s+1)
                        ;	call	PUT_P2
                        ;	ld	ix,sWCB0
                        ;
1828 : 3a3f20           	ld	a,(CON_NUM)
182b : 47               	ld	b,a
                        ;	ld	de,BUFFER 
182c : ed5b8532         	ld	de,(E_BU)
1830 : 210004           	ld	hl,1024
1833 : 3e12             	ld	a,TCPIP_TCP_RCV
1835 : cd8e1f           	call	CALL_U
1838 : b7               	or	a
1839 : c2581d           	jp	nz,TCP_ERROR	;Error?
183c : 2a9efc           	ld	hl,(timer)
183f : 22572c           	ld	(tcptim),hl
1842 : 78               	ld	a,b
1843 : b1               	or	c
1844 : cab11b           	jp	z,END_RCV	;No data available?
1847 :                  TCP_RCVOK:
                        ;+++++++++++++++++++++++++++++++++++++++++++++++++++++
                        ;	ld	(LBUFF),bc
1847 : 2a8532           	ld	hl,(E_BU)
184a : 09               	add	hl,bc
184b : 228532           	ld	(E_BU),hl
                        
                        ;	call	END_RCV
                        ;"""""""""""""""""""""""""""""""""""""""""""""""""""""
                        ; 
                        ;	ld	de,(timtim)
                        ;	inc	de
                        ;	ld	(timtim),de
                        ;	ld	hl,BUFFER1
                        ;	ld	(bbuf),hl
                        ;	ld	b,4
                        ;	ld	c,"0"
                        ;	ld	a,%10000001
                        ;	call	NUMTOASC
                        ;	ld	bc,4
                        ;	ld	(lenb),bc
                        ;	call	BuffOU1
                        ;"""""""""""""""""""""""""""""""""""""""""""""""""""""
                        ; NB_BU ...........................................
                        ; #C100 |               |		
                        ; B_BU --               |
                        ; E_BU _________________
184e : 3a7d2c           	ld	a,(S_C)
1851 : 327f2c           	ld	(T_S_C),a
                        ;;	call	PUT_P2
                        ;;	ld	hl,BUFFER
AS80 Assembler for i8080 [1.31].                                     Page   65
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	hl,(E_BU)
                        ;	ld	de,NB_BU
                        ;	ld	(bbuf),de
                        ;	xor	a
                        ;	sbc	hl,de
                        ;;	ld	hl,(LBUFF)
                        ;	ld	(lenb),hl
                        ;	call	BuffOU1
                        ;	ld	hl,NB_BU
                        ;	ld	(E_BU),hl
                        ;	ret	
                        
                        
                        ;	
1854 :                  TCP_RCV1:
1854 : 2a8532           	ld	hl,(E_BU)
1857 : 0100c1           	ld	bc,NB_BU
185a : af               	xor	a		
185b : ed42             	sbc	hl,bc	
185d : c8               	ret	z		; buffer empty
185e : 44               	ld	b,h
185f : 4d               	ld	c,l		; length receive packet
1860 : 2100c1           	ld	hl,NB_BU
1863 : 3e0a             	ld	a,#0A		
1865 : edb1             	cpir			; find end string  [0D][0A]|[x]
1867 : c0               	ret	nz		; end of string not found ( wait for next TCP
1868 : 228332           	ld	(B_BU),hl 	; point the remaining part of the packe
186b : 1100c1           	ld	de,NB_BU
186e : ed53da44         	ld	(bbuf),de	; begin budder
                        ;	ex	hl,de
1872 : af               	xor	a
1873 : ed52             	sbc	hl,de
1875 : 22dc44           	ld	(lenb),hl	; lengt buffer
                        ;
1878 : cda118           	call	RECIV_SEP
                        ;
187b : ed5b8332         	ld	de,(B_BU)
187f : 2a8532           	ld	hl,(E_BU)
1882 : af               	xor	a		
1883 : ed52             	sbc	hl,de
1885 : 44               	ld	b,h
1886 : 4d               	ld	c,l	
1887 : ca9418           	jp	z,tcprc1		; no rough lines
                        ;	jp	c,0
                        	; delete processed string
                        	
188a : c5               	push	bc
188b : 2a8332           	ld	hl,(B_BU)
188e : 1100c1           	ld	de,NB_BU
1891 : edb0             	ldir
1893 : c1               	pop	bc
1894 :                  tcprc1:
1894 : 2100c1           	ld	hl,NB_BU
1897 : 228332           	ld	(B_BU),hl
189a : 09               	add	hl,bc
189b : 228532           	ld	(E_BU),hl
                        
189e : c35418           	jp	TCP_RCV1
                        
                        
                        ; receive string processing
18a1 :                  RECIV_SEP:
AS80 Assembler for i8080 [1.31].                                     Page   66
---------------------------------- M14.ASM -----------------------------------

                        ;	jp	BuffOU1		; off
                        
                        
                        
                        ;	ld	de,(timtim)
                        ;	inc	de
                        ;	ld	(timtim),de
                        ;	ld	hl,BUFFER1
                        ;	ld	(bbuf),hl
                        ;	ld	b,4
                        ;	ld	c,"0"
                        ;	ld	a,%10000001
                        ;	call	NUMTOASC
                        ;	ld	bc,4
                        ;	ld	(lenb),bc
                        ;	call	BuffOU1
                        
                        
                        
                        
                        
                        
                        ; --- PING ?
18a1 : 2100c1           	ld	hl,NB_BU
18a4 : 117731           	ld	de,AA_PING
18a7 : 0605             	ld	b,5
18a9 : cd1b20           	call	STR_CP
18ac : 2070             	jr	nz,DE1
                        ; --- PING detected
18ae : 7e               DE2:	ld	a,(hl)
18af : 23               	inc	hl
18b0 : fe20             	cp	" "
18b2 : 28fa             	jr	z,DE2
18b4 : fe3a             	cp	":"
18b6 : 28f6             	jr	z,DE2
18b8 : fe0d             	cp	#0D
18ba : 28f2             	jr	z,DE2
18bc : b7               	or	a
18bd : 28ef             	jr	z,DE2
18bf : 228732           	ld	(POINT),hl     ; server name
                        ; --- send PONG
                        ;	call	SET_UNAPI
18c2 : 117d31           	ld	de,AA_PONG
18c5 : 210500           	ld	hl,5
18c8 : 3a3f20           	ld	a,(CON_NUM)
18cb : 47               	ld	b,a
18cc : 0e01             	ld	c,1
18ce : 3e11             	ld	a,TCPIP_TCP_SEND
18d0 : cd8e1f           	call	CALL_U
18d3 : b7               	or	a
18d4 : c2581d           	jp	nz,TCP_ERROR
                        ; --- send server name
                        ;	call	SET_UNAPI
18d7 : ed5b8732         	ld	de,(POINT)
18db : 210000           	ld	hl,0
18de : d5               	push	de
18df : 1a               DE3:	ld	a,(de)
18e0 : 13               	inc	de
18e1 : 23               	inc	hl
18e2 : fe20             	cp	" "
18e4 : 28f9             	jr	z,DE3
18e6 : fe3a             	cp	":"
AS80 Assembler for i8080 [1.31].                                     Page   67
---------------------------------- M14.ASM -----------------------------------

18e8 : 28f5             	jr	z,DE3
18ea : fe00             	cp	0
18ec : 28f1             	jr	z,DE3
18ee : fe0d             	cp	#0D	
18f0 : 28ed             	jr	z,DE3
18f2 : fe0a             	cp	#0A
18f4 : 28e9             	jr	z,DE3	
18f6 : d1               	pop	de
18f7 : 3a3f20           	ld	a,(CON_NUM)
18fa : 47               	ld	b,a
18fb : 0e01             	ld	c,1
18fd : 3e11             	ld	a,TCPIP_TCP_SEND
18ff : cd8e1f           	call	CALL_U
1902 : b7               	or	a
1903 : c2581d           	jp	nz,TCP_ERROR
                        ; --- send CRLF
                        ;	call	SET_UNAPI
1906 : 11552e           	ld	de,AA_CRLF
1909 : 210200           	ld	hl,2
190c : 3a3f20           	ld	a,(CON_NUM)
190f : 47               	ld	b,a
1910 : 0e01             	ld	c,1
1912 : 3e11             	ld	a,TCPIP_TCP_SEND
1914 : cd8e1f           	call	CALL_U
1917 : b7               	or	a
1918 : c2581d           	jp	nz,TCP_ERROR
191b : c3e11b           	jp	END_KEY
191e :                  DE1:
                        ; --- detect join (:[nick]!xxxxxxx JOIN :[#channel])
191e : 21ffc0           	ld	hl,NB_BU-1
1921 : 23               DE4:	inc	hl
1922 : 7e               	ld	a,(hl)
1923 : fe3a             	cp	a,":"
1925 : 28fa             	jr	z,DE4
1927 : 11942f           	ld	de,PA_NICK
192a : 0620             	ld	b,32
192c : cd1b20           	call	STR_CP
192f : 2055             	jr	nz,DE_0	;invalid nick
                        ;	inc	hl
1931 : 7e               	ld	a,(hl)
1932 : fe21             	cp	"!"
1934 : 2050             	jr	nz,DE_0 ;different length nick
1936 : 23               DE5:	inc	hl
1937 : 7e               	ld	a,(hl)
1938 : b7               	or	a
1939 : 284b             	jr	z,DE_0
193b : fe0d             	cp	#0D
193d : 2847             	jr	z,DE_0
193f : fe20             	cp	" "
1941 : 20f3             	jr	nz,DE5
1943 : 23               	inc	hl
1944 : 11e630           	ld	de,AA_JOIN
1947 : 0605             	ld	b,5
1949 : cd1b20           	call	STR_CP
194c : 2038             	jr	nz,DE_0 ;not "JOIN MESSAGE"
194e : 2b               	dec	hl
194f : 23               DE6:	inc	hl
1950 : 7e               	ld	a,(hl)
1951 : fe3a             	cp	":"
1953 : 28fa             	jr	z,DE6
1955 : fe20             	cp	" "
1957 : 28f6             	jr	z,DE6
AS80 Assembler for i8080 [1.31].                                     Page   68
---------------------------------- M14.ASM -----------------------------------

                        ;--- copy channel name to parametr C_CHAN
1959 : 11212e           	ld	de,C_CHAN
195c : 0610             	ld	b,16
195e : 7e               DE7:	ld	a,(hl)
195f : fe20             	cp	" "
1961 : 2810             	jr	z,DE_8
1963 : fe2c             	cp	","
1965 : 280c             	jr	z,DE_8
1967 : fe0d             	cp	#0D
1969 : 2808             	jr	z,DE_8
196b : b7               	or	a
196c : 2805             	jr	z,DE_8
196e : 12               	ld	(de),a	
196f : 23               	inc	hl
1970 : 13               	inc	de
1971 : 10eb             	djnz	DE7
1973 : 3e20             DE_8:	ld	a," "
1975 : 12               	ld	(de),a
1976 : 13               	inc	de
1977 : 3e3a             	ld	a,":"
1979 : 12               	ld	(de),a
197a : 13               	inc	de
197b : af               	xor	a
197c : 12               	ld	(de),a
                        ; control
                        ;	ld	de,C_CHAN
                        ;	call	CONOUTS        
197d : 21212e           	ld	hl,C_CHAN
1980 : cda609           	call	PRINT_BF
                        ; set request create channel record	
                        ;	ld	a,1
                        ;	ld	(req),a
1983 : cd4a0c           	call	CHANNEL_C
                        ;	jp	DEDSC1
                        
                        ;*****************************************************
                        ;*****************************************************
1986 :                  DE_0:
                        
                        ;	jp	DEDSC		; TEST
                        ; string analise procedure
                        ;
                        ; 1 - save addres part
1986 : 2100c1           	ld	hl,NB_BU
1989 : 118b32           	ld	de,ADDRES
198c : 7e               DED1:	ld	a,(hl)
198d : fe3a             	cp	":"
198f : 2003             	jr	nz,DED2
1991 : 23               	inc	hl
1992 : 18f8             	jr	DED1		; 1st ":" not save
1994 :                  DED2:				; address part save
1994 : 7e               	ld	a,(hl)
1995 : 12               	ld	(de),a
1996 : 23               	inc	hl
1997 : 13               	inc	de
1998 : fe20             	cp	" "
199a : 20f8             	jr	nz,DED2
199c : af               	xor	a
199d : 12               	ld	(de),a
                        ; 2 - command part decoder
                        ;
                        ; text command decoder
AS80 Assembler for i8080 [1.31].                                     Page   69
---------------------------------- M14.ASM -----------------------------------

                        ;				; hl pointer word of command		
199e : cd322c           	call	DET_MSG		; 
                        
19a1 : ed4b8932         	ld	bc,(LBUFF)
19a5 : 382f             	jr	c,DED3		; not word
19a7 : fe01             	cp	1		; NICK
19a9 : ca7f1b           	jp	z,DE_NICK
19ac : fe02             	cp	2		; PRIVMSG
19ae : ca281a           	jp	z,DE_PRIV
19b1 : fe03             	cp	3		; NOTICE
19b3 : fe04             	cp	4		; JOIN
19b5 : caf919           	jp	z,DE_JOIN
19b8 : fe05             	cp	5		; PART
19ba : caf919           	jp	z,DE_PART
19bd : fe06             	cp	6		; mode
19bf : caf919           	jp	z,DE_MODE
19c2 : fe07             	cp	7		; kick
19c4 : caf919           	jp	z,DE_KICK
19c7 : fe08             	cp	8		; quit
19c9 : caf919           	jp	z,DE_QUIT
19cc : fe09             	cp	9		; 353 nicklist
19ce : caf71a           	jp	z,DE_NL
19d1 : fe0a             	cp	10		; 366 end nicklist
19d3 : ca511b           	jp	z,DE_ENL
19d6 :                  DED3:
                        ; numeric command
                         ;	call	EXTNUM		; bc - num
                        ;	jr	c,DED4		; 17 bits
                        ;	or	a
                        ;	jr	nz,DED4		; >5 digit
                        ;	xor	a
                        ;	cp	d
                        ;	jr	z,DED4		; 0 digit
                        ;	xor	a
                        ;	ld	hl,333
                        ;	sbc	hl,bc
                        ;	jr	z,...
                        
                        ;next arg
19d6 :                  DED4:
                        ;	call	NEXTarg
                        
                        ; all not detect message goto server console
19d6 :                  DEDSC:
                        ;	ld	hl,BUFFER
                        ;	ld	bc,(LBUFF)
                        ;	ld	(bbuf),hl
                        ;	ld	(lenb),bc
19d6 : 1100c1           	ld	de,NB_BU
19d9 : ed53da44         	ld	(bbuf),de
19dd : 2a8332           	ld	hl,(B_BU)
19e0 : af               	xor	a
19e1 : ed52             	sbc	hl,de
19e3 : 22dc44           	ld	(lenb),hl
                        
19e6 : 3a8a2d           	ld	a,(serv1s+1)
19e9 : 327f2c           	ld	(T_S_C),a
19ec : cdc62b           	call	PUT_P2
                        
19ef : cd0c0a           DEDSC1:	call	BuffOU1
19f2 : 3a7d2c           	ld	a,(S_C)
19f5 : cdc62b           	call	PUT_P2
AS80 Assembler for i8080 [1.31].                                     Page   70
---------------------------------- M14.ASM -----------------------------------

                        
19f8 : c9               	ret
                        ;	jp	STATUS_OK
19f9 :                  DE_PART:
19f9 :                  DE_MODE:
19f9 :                  DE_KICK:
19f9 :                  DE_QUIT:
19f9 :                  DE_JOIN:
19f9 :                  DE_JC:
                        
19f9 : cde71b           	call	NEXTarg
19fc : 3e3a             	ld	a,":"
19fe : be               DE_J2:	cp	(hl)
19ff : 2003             	jr	nz,DE_J1
1a01 : 23               	inc	hl
1a02 : 18fa             	jr	DE_J2
1a04 : 11212e           DE_J1:	ld	de,C_CHAN
1a07 : cdc31a           	call	COPYARG
1a0a : 3e43             	ld	a,"C"
1a0c : 11212e           	ld	de,C_CHAN
1a0f : cd0716           	call	SrS
1a12 : dad619           	jp	c,DEDSC
                        
1a15 : 1100c1           DEDSCE:	ld	de,NB_BU
1a18 : ed53da44         	ld	(bbuf),de
1a1c : 2a8332           	ld	hl,(B_BU)
1a1f : af               	xor	a
1a20 : ed52             	sbc	hl,de
1a22 : 22dc44           	ld	(lenb),hl
1a25 : c3ef19           	jp	DEDSC1
                        
                        	
1a28 :                  DE_PRIV:
1a28 : cde71b           	call	NEXTarg
                        ;	hl pointer on argument
                        
                        ;	test on own nick
1a2b : e5               	push	hl
1a2c : 11942f           	ld	de,PA_NICK
1a2f : 1a               DE_P1	ld	a,(de)
1a30 : be               	cp	(hl)
1a31 : 2004             	jr	nz,DE_P2
1a33 : 23               	inc	hl
1a34 : 13               	inc	de
1a35 : 18f8             	jr	DE_P1
1a37 : b7               DE_P2:	or	a
1a38 : 2003             	jr	nz,DE_P3
1a3a : 7e               	ld	a,(hl)	
1a3b : fe20             	cp	" "
1a3d : e1               DE_P3:	pop	hl
                        ; if Z then Nick own detect
1a3e : ca9e1a           	jp	z,DE_QUE
                        ; Not nick -> channelname
                        ; Find record 
1a41 : e5               	push	hl
1a42 : 3e43             	ld	a,"C" ; Channel record find
1a44 : eb               	ex	hl,de
1a45 : cd0716           	call	SrS
1a48 : e1               	pop	hl
1a49 : dad619           	jp	c,DEDSC	; non time Not find Create ?
                        ; Record finded, segment channel active
1a4c : 327f2c           DE_CC1:	ld	(T_S_C),a
AS80 Assembler for i8080 [1.31].                                     Page   71
---------------------------------- M14.ASM -----------------------------------

1a4f : cde71b           	call	NEXTarg
1a52 : 7e               DE_C2:	ld	a,(hl)
1a53 : fe3a             	cp	":"
1a55 : 2003             	jr	nz,DE_C1
1a57 : 23               	inc	hl
1a58 : 18f8             	jr	DE_C2
1a5a : 22de44           DE_C1:	ld	(bbuf1),hl
1a5d : 010000           	ld	bc,0
1a60 : 3e0d             	ld	a,13
1a62 : be               DE_C3:	cp	(hl)
1a63 : 23               	inc	hl
1a64 : 03               	inc	bc
1a65 : 20fb             	jr	nz,DE_C3
                        ;	ld	(hl),10
1a67 : 03               	inc	bc
1a68 : ed43e044         	ld	(lenb1),bc
                        ; out dest addres (nick)
1a6c : 218b32           	ld	hl,ADDRES
1a6f : 22da44           	ld	(bbuf),hl
1a72 : 010000           	ld	bc,0
1a75 : 23               DE_C5:	inc	hl
1a76 : 03               	inc	bc
1a77 : 7e               	ld	a,(hl)
1a78 : fe21             	cp	"!"
1a7a : 2809             	jr	z,DE_C4
1a7c : fe20             	cp	" "
1a7e : 2805             	jr	z,DE_C4
1a80 : b7               	or	a
1a81 : 2802             	jr	z,DE_C4
1a83 : 18f0             	jr	DE_C5
1a85 : 3620             DE_C4:	ld	(hl)," "
1a87 : 03               	inc	bc
1a88 : ed43dc44         	ld	(lenb),bc
1a8c : cd0c0a           	call	BuffOU1
1a8f : 2ae044           	ld	hl,(lenb1)
1a92 : 22dc44           	ld	(lenb),hl
1a95 : 2ade44           	ld	hl,(bbuf1)
1a98 : 22da44           	ld	(bbuf),hl
1a9b : c3ef19           	jp	DEDSC1	
1a9e :                  DE_QUE:
1a9e : e5               	push	 hl
1a9f : 218b32           	ld	hl,ADDRES
1aa2 : 115831           	ld	de,PA_QNICK
1aa5 : 7e               DE_Q2:	ld	a,(hl)
1aa6 : fe21             	cp	"!"
1aa8 : 280c             	jr	z,DE_Q1
1aaa : fe20             	cp	" "
1aac : 2808             	jr	z,DE_Q1
1aae : b7               	or	a
1aaf : 2805             	jr	z,DE_Q1
1ab1 : 12               	ld	(de),a
1ab2 : 23               	inc	hl
1ab3 : 13               	inc	de
1ab4 : 18ef             	jr	DE_Q2	
1ab6 :                  DE_Q1:
1ab6 : 3e20             	ld	a," "
1ab8 : 12               	ld	(de),a
1ab9 : 13               	inc	de
1aba : af               	xor	a
1abb : 12               	ld	(de),a
1abc : cd3312           	call	QUERY_C	
1abf : e1               	pop	hl
AS80 Assembler for i8080 [1.31].                                     Page   72
---------------------------------- M14.ASM -----------------------------------

                        ; Find query record ? itc query_C
1ac0 : c34c1a           	jp	DE_CC1
1ac3 :                  COPYARG:
1ac3 : 7e               COPA1:	ld	a,(hl)
1ac4 : fe20             	cp	" "
1ac6 : 2810             	jr	z,COPA2
1ac8 : fe2c             	cp	","
1aca : 280c             	jr	z,COPA2
1acc : fe0d             	cp	#0D
1ace : 2808             	jr	z,COPA2
1ad0 : b7               	or	a
1ad1 : 2805             	jr	z,COPA2
1ad3 : 12               	ld	(de),a	
1ad4 : 23               	inc	hl
1ad5 : 13               	inc	de
1ad6 : 18eb             	jr	COPA1
1ad8 : 3e20             COPA2:	ld	a," "
1ada : 12               	ld	(de),a
1adb : 13               	inc	de
1adc : af               	xor	a
1add : 12               	ld	(de),a
1ade : c9               	ret
1adf :                  COPYARG0:
1adf : 7e               COPA_1:	ld	a,(hl)
1ae0 : fe20             	cp	" "
1ae2 : 2810             	jr	z,COPA_2
1ae4 : fe2c             	cp	","
1ae6 : 280c             	jr	z,COPA_2
1ae8 : fe0d             	cp	#0D
1aea : 2808             	jr	z,COPA_2
1aec : b7               	or	a
1aed : 2805             	jr	z,COPA_2
1aef : 12               	ld	(de),a	
1af0 : 23               	inc	hl
1af1 : 13               	inc	de
1af2 : 18eb             	jr	COPA_1
1af4 : af               COPA_2:	xor	a
1af5 : 12               	ld	(de),a
1af6 : c9               	ret
                        
1af7 :                  DE_NL:
1af7 : cd5f1b           	call	DE_NLF
1afa : dad619           	jp	c,DEDSC
                        
1afd : 3e3a             	ld	a,":"
1aff : be               	cp	(hl)
1b00 : 2001             	jr	nz,DE_NL2
1b02 : 23               	inc	hl
1b03 : eb               DE_NL2:	ex	hl,de
                        ;	
1b04 : 3e01             	ld	a,1
1b06 : 320480           	ld	(w1new),a
1b09 : dd218888         	ld	ix,sWCB1	;nicklist windows
1b0d : 3abd88           	ld	a,(nlnew)
1b10 : b7               	or 	a
1b11 : 2811             	jr	z,DE_NL3
                        ;clear nicklist
1b13 : 2a9488           	ld	hl,(sWCB1+12)
1b16 : 229888           	ld	(sWCB1+16),hl
1b19 : af               	xor	a
1b1a : dd7717           	ld	(ix+23),a
1b1d : dd7718           	ld	(ix+24),a
AS80 Assembler for i8080 [1.31].                                     Page   73
---------------------------------- M14.ASM -----------------------------------

1b20 : 3c               	inc	a
1b21 : dd770a           	ld	(ix+10),a
                        ;
1b24 :                  DE_NL3:	
1b24 : 2a9888           	ld	hl,(sWCB1+16)
1b27 : 1a               DE_NL6:	ld	a,(de)
1b28 : fe0d             	cp	13
1b2a : 280f             	jr	z,DE_NL5
1b2c : b7               	or	a
1b2d : 280c             	jr	z,DE_NL5
1b2f : 77               	ld	(hl),a
1b30 : fe20             	cp	" "
1b32 : 2003             	jr	nz,DE_NL4
1b34 : dd3417           	inc	(ix+23)
1b37 : 23               DE_NL4:	inc	hl
1b38 : 13               	inc	de
1b39 : 18ec             	jr	DE_NL6
1b3b : 3e20             DE_NL5:	ld	a," "
1b3d : 77               	ld	(hl),a
1b3e : dd3417           	inc	(ix+23)
1b41 : 23               	inc	hl
1b42 : 229888           	ld	(sWCB1+16),hl
1b45 : af               	xor	a
1b46 : 77               	ld	(hl),a
1b47 : 32bd88           	ld	(nlnew),a
                        ;
1b4a : 3c               	inc	a
1b4b : 320480           	ld	(w1new),a
1b4e : c3151a           	jp	DEDSCE	
                        
1b51 :                  DE_ENL:
1b51 : cd5f1b           	call	DE_NLF
1b54 : dad619           	jp	c,DEDSC
1b57 : 3e01             	ld	a,1
1b59 : 32bd88           	ld	(nlnew),a
1b5c : c3151a           	jp	DEDSCE		; * ret
                        
1b5f :                  DE_NLF:
1b5f : cde71b           	call	NEXTarg
1b62 : cde71b           	call	NEXTarg
1b65 : 3e23             	ld	a,"#"
1b67 : be               	cp	(hl)
1b68 : 2803             	jr	z,DE_NL1
1b6a : cde71b           	call	NEXTarg
1b6d : 11212e           DE_NL1:	ld	de,C_CHAN
1b70 : cdc31a           	call	COPYARG
1b73 : 23               	inc	hl
1b74 : e5               	push	hl
1b75 : 3e43             	ld	a,"C"
1b77 : 11212e           	ld	de,C_CHAN
1b7a : cd0716           	call	SrS
1b7d : e1               	pop 	hl
1b7e : c9               	ret
1b7f :                  DE_NICK:
1b7f : 21ffc0           	ld	hl,NB_BU-1
1b82 : 23               DE_NI4:	inc	hl
1b83 : 7e               	ld	a,(hl)
1b84 : fe3a             	cp	a,":"
1b86 : 28fa             	jr	z,DE_NI4
1b88 : 11942f           	ld	de,PA_NICK
1b8b : 0620             	ld	b,32
1b8d : cd1b20           	call	STR_CP
AS80 Assembler for i8080 [1.31].                                     Page   74
---------------------------------- M14.ASM -----------------------------------

1b90 : c2d619           	jp	nz,DEDSC ;invalid nick
                        ;	inc	hl
1b93 : 7e               	ld	a,(hl)
1b94 : fe21             	cp	"!"
1b96 : c2d619           	jp	nz,DEDSC ;different length nick
1b99 : 2100c1           	ld	hl,NB_BU
1b9c : cde71b           	call	NEXTarg
1b9f : cde71b           	call	NEXTarg
1ba2 : 3e3a             	ld	a,":"
1ba4 : be               	cp	(hl)
1ba5 : 2001             	jr	nz,DE_NI5
1ba7 : 23               	inc	hl
1ba8 : 11942f           DE_NI5:	ld	de,PA_NICK
1bab : cddf1a           	call	COPYARG0
                        
1bae : c3d619           	jp	DEDSC
                        
                        
1bb1 :                  PRNTLOOP:
                        
                        
                        
                        ;;	ld	a,(#FBEC)	;If ESC is pressed, terminate
                        ;;	bit	2,a
                        ;;
                        ;;	jp	z,CLOSE_END
                        ;; blocked
                        ;
                        ;
                        ;;	(hl) - start str
                        ;;	bc - legh
                        ;
                        ;	push	bc	;Print out data character by character.
                        ;	ld	a,(hl)	;We can't use _STROUT function call,
                        ;	inc	hl	;since we don't know if any "$" character
                        ;	push	hl	;is contained in the string.
                        ;;	ld	e,a
                        ;;	ld	c,_CONOUT
                        ;;	call	DOS
                        ;	call	OUTC_TW;
                        ;	pop	hl
                        ;	pop	bc
                        ;	dec	bc
                        ;	ld	a,b
                        ;	or	c
                        ;	jr	nz,PRNTLOOP
                        ;	jr	STATUS_OK
1bb1 :                  END_RCV:	;
                        
                        	;--- Check if the connection has lost the ESTABLISHED
                        	;    state. If so, close the connection and terminate
                        
                        ;	call	SET_UNAPI
1bb1 : 3a3f20           	ld	a,(CON_NUM)
1bb4 : 47               	ld	b,a
1bb5 : 210000           	ld	hl,0
1bb8 : 3e10             	ld	a,TCPIP_TCP_STATE
1bba : cd8e1f           	call	CALL_U
1bbd : b7               	or	a
1bbe : c2581d           	jp	nz,TCP_ERROR
1bc1 : 78               	ld	a,b
1bc2 : fe04             	cp	4	;ESTABLISHED state
AS80 Assembler for i8080 [1.31].                                     Page   75
---------------------------------- M14.ASM -----------------------------------

1bc4 : 281b             	jr	z,STATUS_OK
                        
1bc6 : 3a3f20           	ld	a,(CON_NUM)	;Otherwise, close and print
1bc9 : 47               	ld	b,a		;"Closed by remote peer" before terminating
1bca : 3e0e             	ld	a,TCPIP_TCP_CLOSE
1bcc : cd8e1f           	call	CALL_U
                        ;	print	TWO_NL_S
1bcf : 213d25           	ld	hl,TWO_NL_S
1bd2 : cda609           	call	PRINT_BF
                        ;	print	PEERCLOSE_S+1
1bd5 : 219e28           	ld	hl,PEERCLOSE_S+1
1bd8 : cda609           	call	PRINT_BF
                        
1bdb : 3e00             	ld	a,0
1bdd : 32862d           	ld	(serv1c),a
1be0 : c9               	ret
                        
                        ;	jp	TERMINATE
                        
1be1 :                  STATUS_OK:
                        
                        
1be1 :                  END_KEY:	;
                        
                        	;--- End of the main loop step:
                        	;    Give the INL code an opportunity to excute,
                        	;    then repeat the loop.
                        
                        ;	call	SET_UNAPI
1be1 : 3e1d             	ld	a,TCPIP_WAIT
1be3 : cd8e1f           	call	CALL_U
                        ;	jp	MAIN_LOOP
1be6 : c9               	ret
1be7 :                  NEXTarg:
1be7 : 23               	inc	hl
1be8 : 7e               	ld	a,(hl)
1be9 : fe20             	cp	" "
1beb : 20fa             	jr	nz,NEXTarg
1bed : 23               	inc	hl
1bee : c9               	ret
                        ;=====================================================
1bef :                  TCPSEND:
1bef : 3a862d           	ld	a,(serv1c)
1bf2 : b7               	or	a
1bf3 : c8               	ret	z
                        
                        ;--- insert module irc adapting string
1bf4 : af               	xor	a
1bf5 : 32082e           	ld	(ME_STATUS),a
                        ;	ld	a,(BUFFER+1)
                        ;	or	a
1bf8 : fd2ada44         	ld	iy,(bbuf)
1bfc : ed4bdc44         	ld	bc,(lenb)
1c00 : 78               	ld	a,b
1c01 : b1               	or	c
                        ;	jp 	z,GI_E1 	; empty string
1c02 : c8               	ret	z
                        ;	ld	a,(BUFFER+2)	
1c03 : fd7e00           	ld	a,(iy)
1c06 : fe2f             	cp	"/"
1c08 : 2078             	jr	nz,GI_C1 	; regular msg string
1c0a : 3aebfb           	ld	a,(#FBEB)
AS80 Assembler for i8080 [1.31].                                     Page   76
---------------------------------- M14.ASM -----------------------------------

1c0d : e610             	and	#00000010	;ctrl
1c0f : 2871             	jr	z,GI_C1
                        
                        ; new command detector
1c11 : 11ca2d           	ld	de,D_COMM
1c14 : 2ada44           	ld	hl,(bbuf)
1c17 : 23               	inc	hl
1c18 : cd352c           	call	DET		; 1-nick, 2-join, 3-query, 4-part
1c1b : 380a             	jr	c,GII_OLD
1c1d : fe05             	cp	5
1c1f : ca971d           	jp	z,G_query
1c22 : fe06             	cp	6
1c24 : ca971d           	jp	z,G_query
                        
1c27 :                  GII_OLD:
                        ;--- command line (/command parametrs)
                        ;	ld	a,(BUFFER+3)    ;
1c27 : fd7e01           	ld	a,(iy+1)
1c2a : e6df             	and	%11011111
1c2c : fe4d                     cp	"M"             ; detect /me
1c2e : 2041                     jr	nz,GI_C4
                        ;	ld	a,(BUFFER+4)
1c30 : fd7e02           	ld	a,(iy+2)
1c33 : e6df             	and	%11011111
1c35 : fe45             	cp	"E"
1c37 : 2038             	jr	nz,GI_C4
                        ;	ld	a,(BUFFER+5)
1c39 : fd7e03           	ld	a,(iy+3)
1c3c : fe20             	cp	" "
1c3e : 2031             	jr	nz,GI_C4
                        ;--- /ME detected 
                        
1c40 : ed4bdc44         	ld	bc,(lenb)
1c44 : 0b               	dec	bc		; [/ME_] X
                        ;	dec	bc
1c45 : 0b               	dec	bc
1c46 : 0b               	dec	bc
1c47 : ed43dc44         	ld	(lenb),bc
1c4b : fd23             	inc	iy
1c4d : fd23             	inc	iy
1c4f : fd23             	inc	iy
1c51 : fd23             	inc	iy
1c53 : fd22da44         	ld	(bbuf),iy
                        
                        
                        
                        ;
                        ;	ld	a,(BUFFER+1)	;Adds a #01 Before CR
                        ;	ld	c,a
                        ;	ld	b,0
                        ;	dec	bc
                        ;	ld	hl,BUFFER+2
1c57 : ed4bdc44         	ld	bc,(lenb)
1c5b : 0b               	dec	bc
1c5c : 0b               	dec	bc
1c5d : 0b               	dec	bc
1c5e : 2ada44           	ld	hl,(bbuf)
1c61 : 09               	add	hl,bc
1c62 : 3601             	ld	(hl),#01
1c64 : 23               	inc	hl
1c65 : 360d             	ld	(hl),#0D
1c67 : 23               	inc	hl
AS80 Assembler for i8080 [1.31].                                     Page   77
---------------------------------- M14.ASM -----------------------------------

1c68 : 360a             	ld	(hl),#0A
                        
1c6a : 3e01             	ld	a,1
1c6c : 32082e           	ld	(ME_STATUS),a
                        ;---    goto send   message string
1c6f : 1811             	jr	GI_C1
                        
1c71 :                  GI_C4:				; command name	
                        ;	ld	a,(BUFFER+1)
                        ;	dec	a
                        ;	ld	(BUFFER+1),a
                        ;	inc 	a
                        ;	ld	c,a
                        ;	ld	b,0
                        ;	ld	hl,BUFFER+3
                        ;	ld	de,BUFFER+2
                        ;	ldir
1c71 : ed4bdc44         	ld	bc,(lenb)
1c75 : 0b               	dec	bc
1c76 : ed43dc44         	ld	(lenb),bc
1c7a : fd23             	inc	iy
1c7c : fd22da44         	ld	(bbuf),iy
1c80 : 1870             	jr	GI_E1
1c82 :                  GI_C1:
                        ;--- regular string message for current channel
                        ; 
                        ; check channel status
                        ;	ld	a,(C_CHAN)
                        ;	or	a
                        ;	jr	nz,GI_C2	;status ok
                        ;	ld	de,CHNOT_S
                        ;	ld	c,_STROUT
                        ;	call	DOS
                        ;	jp	END_KEY
                        
                        
1c82 :                  GI_C2:
                        ;
                        ;test server consol
1c82 : 3a8a2d           	ld	a,(serv1s+1)
1c85 : 47               	ld	b,a
1c86 : 3a7d2c           	ld	a,(S_C)
1c89 : b8               	cp	b
1c8a : ca0b1d           	jp	z,GI_NO_Chann	; Not channel - send msg stop
                        
                        
                        ;    1p - send "PRIVMSG "
                        ;	call	SET_UNAPI
1c8d : 11182e           	ld	de,AA_PRIVMSG
1c90 : 210800           	ld	hl,8
1c93 : 0e01             	ld	c,1
1c95 : 3a3f20           	ld	a,(CON_NUM)
1c98 : 47               	ld	b,a
1c99 : 3e11             	ld	a,TCPIP_TCP_SEND
1c9b : cd8e1f           	call	CALL_U
1c9e : b7               	or	a
1c9f : c2581d           	jp	nz,TCP_ERROR
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        ;    1p - send name current channel and ":"
                        ;	call	SET_UNAPI
                        ;	ld	hl,#FFFF
AS80 Assembler for i8080 [1.31].                                     Page   78
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	de,C_CHAN-1
                        ;GI_C3:	inc	hl
                        ;	inc	de
                        ;	ld	a,(de)
                        ;	cp	":"
                        ;	jr	nz,GI_C3
                        ;	inc	hl
                        ;	get channel name lenght
1ca2 : 110000           	ld	de,0
1ca5 : 210580           	ld	hl,#8000+5
1ca8 : 3e20             	ld	a," "
1caa : be               GI_C3:	cp	(hl)
1cab : 23               	inc	hl
1cac : 13               	inc	de
1cad : 20fb             	jr	nz,GI_C3
1caf : eb               	ex	hl,de	
                        ;			hl	- lenght string
1cb0 : 3a3f20           	ld	a,(CON_NUM)
1cb3 : 47               	ld	b,a
1cb4 : 110580           	ld	de,#8000+5
1cb7 : 0e01             	ld	c,1		;"Push" is specified
1cb9 : 3e11             	ld	a,TCPIP_TCP_SEND
1cbb : cd8e1f           	call	CALL_U
1cbe : b7               	or	a
1cbf : c2581d           	jp	nz,TCP_ERROR
                        ;	ld	a,TCPIP_WAIT
                        ;	call	CALL_U
                        ; send ":"
                        ;	call	SET_UNAPI	
1cc2 : 11542e           	ld	de,PA_DP
1cc5 : 210100           	ld	hl,1
1cc8 : 0e01             	ld	c,1
1cca : 3a3f20           	ld	a,(CON_NUM)
1ccd : 47               	ld	b,a
1cce : 3e11             	ld	a,TCPIP_TCP_SEND
1cd0 : cd8e1f           	call	CALL_U
1cd3 : b7               	or	a
1cd4 : c2581d           	jp	nz,TCP_ERROR
                        
                        ;---
1cd7 : 3a082e           	ld	a,(ME_STATUS)
1cda : b7               	or	a
1cdb : 2815             	jr	z,GI_E1
                        
                        ;--- send prefix #01,"ACTION "
                        ;	call	SET_UNAPI
1cdd : 110f2e           	ld	de,PA_ME
1ce0 : 210800           	ld	hl,8
1ce3 : 0e01             	ld	c,1
1ce5 : 3a3f20           	ld	a,(CON_NUM)
1ce8 : 47               	ld	b,a
1ce9 : 3e11             	ld	a,TCPIP_TCP_SEND
1ceb : cd8e1f           	call	CALL_U
1cee : b7               	or	a
1cef : c2581d           	jp	nz,TCP_ERROR
                        
1cf2 :                  GI_E1:
                        
                        ;
                        ;	ld	a,(BUFFER+1)	;Adds a LF at the end of the line
                        ;	ld	c,a
                        ;	ld	b,0
AS80 Assembler for i8080 [1.31].                                     Page   79
---------------------------------- M14.ASM -----------------------------------

                        ;	inc	bc
                        ;	ld	hl,BUFFER+2
                        ;	add	hl,bc
                        ;	ld	(hl),10
                        ;	inc	bc
                        ;	push	bc
                        ;	call	SET_UNAPI
                        ;	pop	hl
                        
1cf2 : 2adc44           	ld	hl,(lenb)
                        
1cf5 : 3a3f20           	ld	a,(CON_NUM)	;Sends the line to the connection
1cf8 : 47               	ld	b,a
                        ;	ld	de,BUFFER+2
1cf9 : ed5bda44         	ld	de,(bbuf)
1cfd : 0e01             	ld	c,1		;"Push" is specified
1cff : 3e11             	ld	a,TCPIP_TCP_SEND
1d01 : cd8e1f           	call	CALL_U
1d04 : b7               	or	a
1d05 : c2581d           	jp	nz,TCP_ERROR
                        ; 
                        ;	ld	a,(ME_STATUS)
                        ;	or	a
                        ;	jr	z,END_KEY
                        ;
                        ;--- send sufix #01
                        ;	call	SET_UNAPI
                        ;	ld	de,PA_ME
                        ;	ld	hl,1
                        ;	ld	c,1
                        ;	ld	a,(CON_NUM)
                        ;	ld	b,a
                        ;	ld	a,TCPIP_TCP_SEND
                        ;	call	CALL_U
                        ;	or	a
                        ;	jp	nz,TCP_ERROR
                        
                        
1d08 : c3141d           	jp	END_KEY1
                        ;
1d0b :                  GI_NO_Chann:	
1d0b : 21752b           	ld	hl,YANCH_S
1d0e : cda609           	call	PRINT_BF
1d11 : c3141d           	jp	END_KEY1
                        
                        
                        	;* Character mode: gets the character with or without
                        	;  and sends it to the connection
                        
                        ;GET_INPUT_C:	ld	a,(GETCHAR_FUN)
                        ;	ld	c,a
                        ;	push	bc
                        ;	call	DOS
                        ;	ld	(BUFFER),a
                        ;
                        ;	pop	hl	;If character is CR, sends also
                        ;	cp	13	;a LF
                        ;	ld	hl,1
                        ;	jr	nz,GET_INPUT_C2
                        ;
                        ;	ld	a,10
                        ;	ld	(BUFFER+1),a
AS80 Assembler for i8080 [1.31].                                     Page   80
---------------------------------- M14.ASM -----------------------------------

                        ;	ld	a,l	;If local echo is ON, the LF
                        ;	cp	_CONIN	;must be explicitly printed
                        ;	call	z,LF
                        ;	ld	hl,2
                        ;
                        ;GET_INPUT_C2:
                        ;	push	hl
                        ;	call	SET_UNAPI
                        ;	pop	hl
                        ;	ld	a,(CON_NUM)	;Sends the character(s)
                        ;	ld	b,a
                        ;	ld	de,BUFFER
                        ;	ld	c,1	;"PUSH" is specified
                        ;	ld	a,TCPIP_TCP_SEND
                        ;	call	CALL_UNAPI
                        ;	or	a
                        ;	jp	nz,TCP_ERROR
                        
1d14 :                  END_KEY1:	;
                        
                        	;--- End of the main loop step:
                        	;    Give the INL code an opportunity to excute,
                        	;    then repeat the loop.
                        
                        ;	call	SET_UNAPI
1d14 : 2a9efc           	ld	hl,(timer)
1d17 : 22572c           	ld	(tcptim),hl
1d1a : 3e1d             	ld	a,TCPIP_WAIT
1d1c : cd8e1f           	call	CALL_U
                        
                        
1d1f : c9               	ret
                        ;
1d20 :                  TCP_PARTC:
                        ; part channel
1d20 : 3a862d           	ld	a,(serv1c)
1d23 : b7               	or	a
1d24 : c8               	ret	z	
                        
1d25 : 21092e           	ld	hl,AA_PART
1d28 : 118c33           	ld	DE,BUFFER
1d2b : 010500           	ld	bc,5
1d2e : edb0             	ldir
1d30 : 119133           	ld	de,BUFFER+5
1d33 : 210580           	ld	hl,#8000+5
1d36 : cddf1a           	call	COPYARG0
1d39 : 3e0d             	ld	a,13
1d3b : 12               	ld	(de),a
1d3c : 13               	inc	de
1d3d : 3e0a             	ld	a,10
1d3f : 12               	ld	(de),a
1d40 : 13               	inc	de
1d41 : 218c33           	ld	hl,BUFFER
1d44 : eb               	ex	hl,de
1d45 : af               	xor	a
1d46 : ed52             	sbc	hl,de
1d48 : 3a3f20           	ld	a,(CON_NUM)
1d4b : 47               	ld	b,a
1d4c : 0e01             	ld	c,1
1d4e : 3e11             	ld	a,TCPIP_TCP_SEND
1d50 : cd8e1f           	call	CALL_U
1d53 : b7               	or	a
AS80 Assembler for i8080 [1.31].                                     Page   81
---------------------------------- M14.ASM -----------------------------------

1d54 : c2581d           	jp	nz,TCP_ERROR
1d57 : c9               	ret
                        
                        ;=====================================================
                        
                        	;--- Jump here in case a call to TCP_SEND or TCP_RCV 
                        	;    Input: A=Error code
                        
                        	;* If the error is "Output buffer overflow",
                        	;  print the error, close the connection and finish
                        
1d58 :                  TCP_ERROR:
1d58 : fe0b             	cp	ERR_NO_CONN
1d5a : 2819             	jr	z,TCP_ERROR2
                        
                        	;* The error is not "Connection is closed"
                        
1d5c : 118929           	ld	de,TCPERROR_T
1d5f : 47               	ld	b,a
1d60 : cd411f           	call	GET_STRING
                        ;	ld	c,_STROUT
                        ;	call	5
1d63 : eb               	ex	hl,de
1d64 : cda609           	call	PRINT_BF
                        
                        ;	call	SET_UNAPI
1d67 : 3a3f20           	ld	a,(CON_NUM)
1d6a : 47               	ld	b,a
1d6b : 3e0e             	ld	a,TCPIP_TCP_CLOSE
1d6d : cd8e1f           	call	CALL_U
1d70 : af               	xor	a
1d71 : 32862d           	ld	(serv1c),a
                        ;	jp	TERMINATE
1d74 : c9               	ret
                        
1d75 :                  TCP_ERROR2:
                        
                        	;* The error is "Connection is closed"
                        	;  (cannot be ERR_CONN_STATE, since the
                        	;  connection is either CLOSED, ESTABLISHED or CLOSE-
                        	;  and we assume that it is not ERR_INV_PARAM nor ERR
                        	;  Print the cause and finish
                        
                        ;	print	TWO_NL_S
1d75 : 213d25           	ld	hl,TWO_NL_S
1d78 : cda609           	call	PRINT_BF
                        ;	call	SET_UNAPI
1d7b : af               	xor	a
1d7c : 32862d           	ld	(serv1c),a
1d7f : 3a3f20           	ld	a,(CON_NUM)
1d82 : 47               	ld	b,a
1d83 : 210000           	ld	hl,0
1d86 : 3e10             	ld	a,TCPIP_TCP_STATE
1d88 : cd8e1f           	call	CALL_U
1d8b : 41               	ld	b,c
1d8c : cbf8             	set	7,b
1d8e : 116b28           	ld	de,TCPCLOSED_T
1d91 : cd411f           	call	GET_STRING
1d94 : c3801e           	jp	PRINT_TERM
                        
1d97 :                  G_query:
1d97 : cde71b           	call	NEXTarg
AS80 Assembler for i8080 [1.31].                                     Page   82
---------------------------------- M14.ASM -----------------------------------

1d9a : 7e               G_Q0:	ld	a,(hl)
1d9b : fe20             	cp	" "
1d9d : 2003             	jr	nz,G_Q1
1d9f : 23               	inc	hl
1da0 : 18f8             	jr	G_Q0 
1da2 : 115831           G_Q1:	ld	de,PA_QNICK
1da5 : 0600             	ld	b,0 ;if 0 insufficient parameters
1da7 : 7e               G_Q3:	ld	a,(hl)		
1da8 : b7               	or	a
1da9 : 280e             	jr	z,G_Q2
1dab : fe20             	cp	" "
1dad : 280a             	jr	z,G_Q2
1daf : fe0d             	cp	13
1db1 : 2806             	jr	z,G_Q2
1db3 : 12               	ld	(de),a
1db4 : 23               	inc	hl
1db5 : 13               	inc	de
1db6 : 04               	inc	b
1db7 : 18ee             	jr	G_Q3
1db9 : 3e20             G_Q2:	ld	a," "
1dbb : 12               	ld	(de),a
1dbc : 13               	inc	de	
1dbd : af               	xor	a
1dbe : 12               	ld	(de),a
1dbf : 78               	ld	a,b
1dc0 : b7               	or	a
1dc1 : 2804             	jr	z,G_Q_NA
1dc3 : cd3312           	call	QUERY_C
1dc6 : c9               	ret
1dc7 :                  G_Q_NA:
1dc7 : 21f043           	ld	hl,SM_QNA
1dca : cd553b           	call	PRINT_TW
1dcd : c9               	ret
                        
                        
                        ;******************************
                        ;***                        ***
                        ;***   AUXILIARY ROUTINES   ***
                        ;***                        ***
                        ;******************************
                        
                        ;--- STRCMP: Compares two strings
                        ;    Input: HL, DE = Strings
                        ;    Output: Z if strings are equal
                        
1dce :                  STRCMP:
1dce : 1a               	ld	a,(de)
1dcf : be               	cp	(hl)
1dd0 : c0               	ret	nz
1dd1 : b7               	or	a
1dd2 : c8               	ret	z
1dd3 : 23               	inc	hl
1dd4 : 13               	inc	de
1dd5 : 18f7             	jr	STRCMP
                        
                        
                        ;--- NAME: COMP
                        ;      Compares HL and DE (16 bits unsigned)
                        ;    INPUT:    HL, DE = numbers to compare
                        ;    OUTPUT:    C, NZ if HL > DE
                        ;               C,  Z if HL = DE
                        ;              NC, NZ if HL < DE
AS80 Assembler for i8080 [1.31].                                     Page   83
---------------------------------- M14.ASM -----------------------------------

                        
1dd7 : cddc1d           COMP:	call	_COMP
1dda : 3f               	ccf
1ddb : c9               	ret
                        
1ddc : 7c               _COMP:	ld	a,h
1ddd : 92               	sub	d
1dde : c0               	ret	nz
1ddf : 7d               	ld	a,l
1de0 : 93               	sub	e
1de1 : c9               	ret
                        
                        
                        ;--- NAME: EXTPAR
                        ;      Extracts a parameter from the command line
                        ;    INPUT:   A  = Parameter to extract (the first one
                        ;             DE = Buffer to put the extracted paramet
                        ;    OUTPUT:  A  = Total number of parameters in the c
                        ;             CY = 1 -> The specified parameter does n
                        ;                       B undefined, buffer unmodified
                        ;             CY = 0 -> B = Parameter length, not incl
                        ;                       Parameter extracted to DE, fin
                        ;                       DE preserved
                        
1de2 : b7               EXTPAR:	or	a	;Terminates with error if A = 0
1de3 : 37               	scf
1de4 : c8               	ret	z
                        
1de5 : 47               	ld	b,a
1de6 : 3a8000           	ld	a,(#80)	;Terminates with error if
1de9 : b7               	or	a	;there are no parameters
1dea : 37               	scf
1deb : c8               	ret	z
1dec : 78               	ld	a,b
                        
1ded : f5e5             	push	af,hl
1def : 3a8000           	ld	a,(#80)
1df2 : 4f               	ld	c,a	;Adds 0 at the end
1df3 : 0600             	ld	b,0	;(required under DOS 1)
1df5 : 218100           	ld	hl,#81
1df8 : 09               	add	hl,bc
1df9 : 3600             	ld	(hl),0
1dfb : e1               	pop	hl
1dfc : f1               	pop	af
                        
1dfd : e5d5dde5         	push	hl,de,ix
1e01 : dd210000         	ld	ix,0	;IXl: Number of parameter
1e05 : dd67             	ld	ixh,a	;IXh: Parameter to be extracted
1e07 : 218100           	ld	hl,#81
                        
                        	;* Scans the command line and counts parameters
                        
1e0a : 7e               PASASPC:	ld	a,(hl)	;Skips spaces until a parameter
1e0b : b7               	or	a	;is found
1e0c : 2812             	jr	z,ENDPNUM
1e0e : fe20             	cp	" "
1e10 : 23               	inc	hl
1e11 : 28f7             	jr	z,PASASPC
                        
1e13 : dd23             	inc	ix	;Increases number of parameters
1e15 : 7e               PASAPAR:	ld	a,(hl)	;Walks through the parameter
1e16 : b7               	or	a
AS80 Assembler for i8080 [1.31].                                     Page   84
---------------------------------- M14.ASM -----------------------------------

1e17 : 2807             	jr	z,ENDPNUM
1e19 : fe20             	cp	" "
1e1b : 23               	inc	hl
1e1c : 28ec             	jr	z,PASASPC
1e1e : 18f5             	jr	PASAPAR
                        
                        	;* Here we know already how many parameters are avail
                        
1e20 : dd7d             ENDPNUM:	ld	a,ixl	;Error if the parameter to extract
1e22 : ddbc             	cp	ixh	;is greater than the total number of
1e24 : 3832             	jr	c,EXTPERR	;parameters available
                        
1e26 : 218100           	ld	hl,#81
1e29 : 0601             	ld	b,1	;B = current parameter
1e2b : 7e               PASAP2:	ld	a,(hl)	;Skips spaces until the next
1e2c : fe20             	cp	" "	;parameter is found
1e2e : 23               	inc	hl
1e2f : 28fa             	jr	z,PASAP2
                        
1e31 : dd7c             	ld	a,ixh	;If it is the parameter we are
1e33 : b8               	cp	b	;searching for, we extract it,
1e34 : 2809             	jr	z,PUTINDE0	;else...
                        
1e36 : 04               	inc	B
1e37 : 7e               PASAP3:	ld	a,(hl)	;...we skip it and return to PASAP2
1e38 : fe20             	cp	" "
1e3a : 23               	inc	hl
1e3b : 20fa             	jr	nz,PASAP3
1e3d : 18ec             	jr	PASAP2
                        
                        	;* Parameter is located, now copy it to the user buff
                        
1e3f : 0600             PUTINDE0:	ld	b,0
1e41 : 2b               	dec	hl
1e42 : 04               PUTINDE:	inc	b
1e43 : 7e               	ld	a,(hl)
1e44 : fe20             	cp	" "
1e46 : 2808             	jr	z,ENDPUT
1e48 : b7               	or	a
1e49 : 2805             	jr	z,ENDPUT
1e4b : 12               	ld	(de),a	;Paramete is copied to (DE)
1e4c : 13               	inc	de
1e4d : 23               	inc	hl
1e4e : 18f2             	jr	PUTINDE
                        
1e50 : af               ENDPUT:	xor	a
1e51 : 12               	ld	(de),a
1e52 : 05               	dec	b
                        
1e53 : dd7d             	ld	a,ixl
1e55 : b7               	or	a
1e56 : 1801             	jr	FINEXTP
1e58 : 37               EXTPERR:	scf
1e59 : dde1             FINEXTP:	pop	ix
1e5b : d1               		pop     de
1e5c : e1               		pop	hl
1e5d : c9               	ret
                        
                        
                        ;--- Termination due to ESC or CTRL-C pressing
                        ;    Connection is closed, or aborted if CTRL is press
                        ;    and program finishes
AS80 Assembler for i8080 [1.31].                                     Page   85
---------------------------------- M14.ASM -----------------------------------

                        
1e5e : 3a3f20           CLOSE_END:	ld	a,(CON_NUM)
1e61 : feff             	cp	#FF
1e63 : 2843             	jr	z,TERMINATE
1e65 : f5               	push	af
                        ;	call	SET_UNAPI
1e66 : c1               	pop	bc
                        
1e67 : 3aebfb           	ld	a,(#FBEB)	;Checks CTRL key status
1e6a : cb4f             	bit	1,a	;in order to decide whether
1e6c : 3e0e             	ld	a,TCPIP_TCP_CLOSE	;CLOSE or ABORT must be executed
1e6e : 11b924           	ld	de,USERCLOS_S	;(always ABORT in case of CTRL-C)
1e71 : 2005             	jr	nz,CLOSE_END2	;and which message to show
1e73 : 3e0f             	ld	a,TCPIP_TCP_ABORT	;("user closed" or "user aborted
1e75 : 11db24           	ld	de,USERAB_S
1e78 : d5               CLOSE_END2:	push	de
                        
1e79 : cd8e1f           	call	CALL_U
                        
1e7c : d1               CLOSE_END3:	pop	de
1e7d : c3801e           	jp	PRINT_TERM
                        
                        
                        ;--- Program terminations
                        
                        	;* Print string at DE and terminate
                        
1e80 :                  PRINT_TERM:
1e80 : eb               	ex	hl,de
1e81 : cda609           	call	PRINT_BF
1e84 : c9               	ret
1e85 :                  PRINT_TERML:
1e85 : 0e09             	ld	c,_STROUT
1e87 : cd0500           	call	DOS
1e8a : 181c             	jr	TERMINATE
                        
                        	;* Invalid parameter
                        
                        ;INVPAR:	print	INVPAR_S
                        
1e8c : 115021           INVPAR:	ld	de,INVPAR_S
1e8f : 0e09             	ld	c,_STROUT
1e91 : cd0500           	call	DOS
                        
                        
1e94 : 1812             	jr	TERMINATE
                        
                        	;* Missing parameter
                        
                        ;MISSPAR:	print	MISSPAR_S
1e96 : 116b21           MISSPAR:	ld	de,MISSPAR_S
1e99 : 0e09             	ld	c,_STROUT
1e9b : cd0500           	call	DOS
                        
1e9e : 1808             	jr	TERMINATE
                        
1ea0 : 118621           MISSHNM:        ld	de,MISSHNM_S
1ea3 : 0e09             	ld	c,_STROUT
1ea5 : cd0500           	call	DOS
                        
                        	;* Generic termination routine
                        
AS80 Assembler for i8080 [1.31].                                     Page   86
---------------------------------- M14.ASM -----------------------------------

1ea8 :                  TERMINATE:
1ea8 : 3a42f3           	ld	a,(TPASLOT1)
1eab : 2640             	ld	h,#40
1ead : cd2400           	call	ENASLT
                        
1eb0 : c9               	ret	;****************	
                        
1eb1 : 3acf1e           	ld	a,(TPASEG1)	;Restores TPA on page 1
1eb4 : cdc02b           	call	PUT_P1
                        
1eb7 : 3a4220           	ld	a,(DOS2)	;Under DOS 2, the CTRL-C
1eba : b7               	or	a	;control routine has to be cancelled first
1ebb : 110000           	ld	de,0
1ebe : 0e63             	ld	c,_DEFAB
1ec0 : c40500           	call	nz,DOS
                        
1ec3 : 0e00             	ld	c,_TERM0
1ec5 : c30500           	jp	DOS
                        
                        
                        ;--- Prints LF
                        
1ec8 : 1e0a             LF:	ld	e,10
1eca : 0e02             	ld	c,_CONOUT
1ecc : c30500           	jp	DOS
                        
                        
                        ;--- Segment switching routines for page 1,
                        ;    these are overwritten with calls to
                        ;    mapper support routines on DOS 2
                        ;
                        ;PUT_P1:	out	(#FD),a
                        ;	ret
                        ;GET_P1:	in	a,(#FD);
                        ;	ret
                        ;
1ecf : 02               TPASEG1:	db	2	;TPA segment on page 1
                        
                        
                        ;--- IP_STRING: Converts an IP address to a string
                        ;    Input: L.H.E.D = IP address
                        ;           A = Termination character
                        ;           IX = Address for the string
                        
1ed0 :                  IP_STRING:
1ed0 : f5               	push	af
1ed1 : 7d               	ld	a,l
1ed2 : cdff1e           	call	BYTE2ASC
1ed5 : dd36002e         	ld	(ix),"."
1ed9 : dd23             	inc	ix
1edb : 7c               	ld	a,h
1edc : cdff1e           	call	BYTE2ASC
1edf : dd36002e         	ld	(ix),"."
1ee3 : dd23             	inc	ix
1ee5 : 7b               	ld	a,e
1ee6 : cdff1e           	call	BYTE2ASC
1ee9 : dd36002e         	ld	(ix),"."
1eed : dd23             	inc	ix
1eef : 7a               	ld	a,d
1ef0 : cdff1e           	call	BYTE2ASC
                        
1ef3 : f1               	pop	af
AS80 Assembler for i8080 [1.31].                                     Page   87
---------------------------------- M14.ASM -----------------------------------

1ef4 : dd7700           	ld	(ix),a	;Termination character
1ef7 : c9               	ret
                        
                        
                        
                        
                        
                        ;--- CHECK_KEY: Calls a DOS routine so the CTRL-C pres
                        ;    can be detected by DOS and the program can be abo
                        ;    Also, returns A<>0 if a key has been pressed.
                        
1ef8 : 1eff             CHECK_KEY:	ld	e,#FF
1efa : 0e06             	ld	c,_DIRIO
1efc : c30500           	jp	DOS
                        
                        
                        ;--- BYTE2ASC: Converts the number A into a string wit
                        ;    Puts the string in (IX), and modifies IX so it po
                        ;    Modifies: C
                        
1eff : fe0a             BYTE2ASC:	cp	10
1f01 : 380a             	jr	c,B2A_1D
1f03 : fe64             	cp	100
1f05 : 380e             	jr	c,B2A_2D
1f07 : fec8             	cp	200
1f09 : 381a             	jr	c,B2A_1XX
1f0b : 182c             	jr	B2A_2XX
                        
                        	;--- One digit
                        
1f0d : c630             B2A_1D:	add	"0"
1f0f : dd7700           	ld	(ix),a
1f12 : dd23             	inc	ix
1f14 : c9               	ret
                        
                        	;--- Two digits
                        
1f15 : 0e30             B2A_2D:	ld	c,"0"
1f17 : 0c               B2A_2D2:	inc	c
1f18 : d60a             	sub	10
1f1a : fe0a             	cp	10
1f1c : 30f9             	jr	nc,B2A_2D2
                        
1f1e : dd7100           	ld	(ix),c
1f21 : dd23             	inc	ix
1f23 : 18e8             	jr	B2A_1D
                        
                        	;--- Between 100 and 199
                        
1f25 : dd360031         B2A_1XX:	ld	(ix),"1"
1f29 : d664             	sub	100
1f2b : dd23             B2A_XXX:	inc	ix
1f2d : fe0a             	cp	10
1f2f : 30e4             	jr	nc,B2A_2D	;If ti is 1XY with X>0
1f31 : dd360030         	ld	(ix),"0"	;If it is 10Y
1f35 : dd23             	inc	ix
1f37 : 18d4             	jr	B2A_1D
                        
                        	;--- Between 200 and 255
                        
1f39 : dd360032         B2A_2XX:	ld	(ix),"2"
1f3d : d6c8             	sub	200
AS80 Assembler for i8080 [1.31].                                     Page   88
---------------------------------- M14.ASM -----------------------------------

1f3f : 18ea             	jr	B2A_XXX
                        
                        
                        ;--- GET_STRING: Returns the string associated to a nu
                        ;    Input:  DE = Pointer to a table of numbers and st
                        ;                 db num,"String$"
                        ;                 db num2,"String2$"
                        ;                 ...
                        ;                 db 0
                        ;            B = Associated number
                        ;    Output: DE = Pointer to the string
                        
1f41 : 1a               GET_STRING:	ld	a,(de)
1f42 : 13               	inc	de
1f43 : b7               	or	a	;String not found: return "Unknown"
1f44 : 2014             	jr	nz,LOOP_GETS2
                        
1f46 : dd21771f         	ld	ix,UNKCODE_S
1f4a : 78               	ld	a,b
1f4b : cdff1e           	call	BYTE2ASC
1f4e : dd360029         	ld	(ix),")"
1f52 : dd360124         	ld	(ix+1),"$"
                        
1f56 : 11641f           	ld	de,STRUNK_S
1f59 : c9               	ret
                        
1f5a : b8               LOOP_GETS2:	cp	b	;The number matches?
1f5b : c8               	ret	z
                        
1f5c : 1a               LOOP_GETS3:	ld	a,(de)	;No: pass to the next one
1f5d : 13               	inc	de
1f5e : fe24             	cp	"$"
1f60 : 20fa             	jr	nz,LOOP_GETS3
1f62 : 18dd             	jr	GET_STRING
                        
1f64 : 2a2a2a20556e6b.. STRUNK_S:	db	"*** Unknown error ("
1f77 : 3030302924       UNKCODE_S:	db	"000)$"
                        
                        ;--- Code to switch TCP/IP implementation on page 1, i
                        
                        ;SET_UNAPI:
                        ;UNAPI_SLOT:	ld	a,0
                        ;	ld	h,#40
                        ;	call	ENASLT
                        ;	ei
                        ;UNAPI_SEG:	ld	a,0
                        ;	jp	PUT_P1
                        ;
                        ;CALL_U_:
                        ;	push	af
                        ;	push	hl
                        ;	push	de
                        ;	push	bc
                        ;	call	SET_UNAPI
                        ;	pop	bc
                        ;	pop	de
                        ;	pop	hl
                        ;	pop	af
                        ;
                        ;CALL_UNAPI:	call	0
                        ;	nop
                        ;RES_UNAPI:
AS80 Assembler for i8080 [1.31].                                     Page   89
---------------------------------- M14.ASM -----------------------------------

                        ;	push	af
                        ;
                        ;		ld	a,(S_U)
                        ;		call	PUT_P1
                        ;	pop	af
                        ;		ret
                        ;	nop
                        ;
1f7c :                  CALL_um:		;[18] +2, +8, +12
1f7c : f5               	push	af
1f7d : 3e00             	ld	a,0
1f7f : cdc02b           	call	PUT_P1
1f82 : f1               	pop	af
1f83 : cd0000           	call	0
1f86 : f5               	push	af
1f87 : 3e00             	ld	a,0
1f89 : cdc02b           	call	PUT_P1
1f8c : f1               	pop	af	
1f8d : c9               	ret
                        
1f8e :                  CALL_U:			; +5, +17, +24
1f8e : f5               	push	af
1f8f : e5               	push	hl
1f90 : d5               	push	de
1f91 : c5               	push	bc
1f92 : 3e00             	ld	a,0
1f94 : 2628             	ld	h,40
1f96 : cd2400           	call	ENASLT
1f99 : fb               	ei
1f9a : c1               	pop	bc
1f9b : d1               	pop	de
1f9c : e1               	pop	hl
1f9d : f1               	pop	af
1f9e : cd0000           	call	0
1fa1 : f5               	push	af
1fa2 : e5               	push	hl
1fa3 : d5               	push	de
1fa4 : c5               	push	bc
1fa5 : 3e00             	ld	a,0
1fa7 : 2628             	ld	h,40
1fa9 : cd2400           	call	ENASLT
1fac : fb               	ei
1fad : c1               	pop	bc
1fae : d1               	pop	de
1faf : e1               	pop	hl
1fb0 : f1               	pop	af	
1fb1 : c9               	ret
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        ;--- Extract parametr's on buffer
                        ;	HL - buffer
                        ;	IY N# Word
1fb2 :                  G_PA:
AS80 Assembler for i8080 [1.31].                                     Page   90
---------------------------------- M14.ASM -----------------------------------

1fb2 : af               	XOR	A
1fb3 : 32072e           	ld	(PA_ST),a	
1fb6 : 2b               	dec	hl
1fb7 :                  G_PA1:	
1fb7 : 23               	inc	hl
1fb8 : 7e               	ld	a,(hl)
1fb9 : fe00             	cp	0	; end of file
1fbb : c8               	ret	z
1fbc : fe1a             	cp	#1A
1fbe : c8               	ret	z       ; end of file
1fbf : fe0d             	cp	#0D
1fc1 : 28f4             	jr	z,G_PA1 ; end of string
1fc3 : fe0a             	cp	#0A
1fc5 : 28f0             	jr	z,G_PA1	;
                        	
1fc7 : fde5             	push	iy
1fc9 : cdd01f           	call	G_PA_N
1fcc : fde1             	pop	iy
1fce : 18e7                     jr	G_PA1
                        
                        ;--- Extract parametr on string
                        ; IY - N# Word
                        ; HL - buffer
1fd0 :                  G_PA_N:
1fd0 : fd7e00           	ld	a,(iy)    ; index on name parametr
1fd3 : b7               	or	a         ; if = 0 to finish
1fd4 : c8               	ret	z
1fd5 : 5f               	ld	e,a
1fd6 : fd23             	inc	iy
1fd8 : fd5600           	ld	d,(iy)
1fdb : fd23             	inc 	iy
1fdd : 1a               	ld	a,(de)    ; len
1fde : 13               	inc	de        ; de - (name parametr)
1fdf : 47               	ld	b,a
1fe0 : e5               	push	hl
1fe1 : cd1b20           	call	STR_CP
1fe4 : 2807             	jr	z,G_PA_1	; Ok, go to extract
1fe6 : e1               	pop	hl
1fe7 : fd23             	inc	iy
1fe9 : fd23             	inc	iy
1feb : 18e3             	jr	G_PA_N       	; next search word of parametr
1fed :                  G_PA_1:				; Extract parametr to (parametr)
                        				; (hl) -> (de) util 0, #0D, #0A, #1A (EOF), ";"
1fed : 1a               	ld	a,(de)		; bit mask parametr
1fee : 47               	ld	b,a
1fef : 3a072e           	ld	a,(PA_ST)
1ff2 : b0               	or	b
1ff3 : 32072e           	ld	(PA_ST),a
1ff6 : fd5e00           	ld	e,(iy)
1ff9 : fd23             	inc	iy
1ffb : fd5600           	ld	d,(iy)
1ffe : fd23             	inc	iy
2000 : 7e               G_PA_3	ld	a,(hl)
2001 : fe00             	cp	0
2003 : 2811             	jr	z,G_PA_2	
2005 : fe0d             	cp	#0D
2007 : 280d             	jr	z,G_PA_2
2009 : fe1a             	cp	#1A
200b : 2809             	jr	z,G_PA_2
200d : fe3b             	cp	";"
200f : 2805             	jr	z,G_PA_2
2011 : 12               	ld	(de),a
AS80 Assembler for i8080 [1.31].                                     Page   91
---------------------------------- M14.ASM -----------------------------------

2012 : 23               	inc	hl
2013 : 13               	inc	de
2014 : 18ea             	jr	G_PA_3
                        
2016 : af               G_PA_2:	xor	a
2017 : 12               	ld	(de),a		; 0 -> end of parametr
2018 : 37               	scf
2019 : c1               	pop	bc		; correction stack
201a : c9               	ret
                        
                        ;--- String compare
                        ; HL - 1st string
                        ; DE - 2nd string
                        ; B  - length
                        ; output NZ - false, Z - true
201b :                  STR_CP:
201b : 1a               	ld	a,(de)
201c : b7               	or	a
201d : c8               	ret	z
201e : be               	cp	(hl)
201f : c0               	ret	nz
2020 : 23               	inc	hl
2021 : 13               	inc	de
2022 : 10f7             	djnz	STR_CP
2024 : c9               	ret
                        ;--- Console string out until 0 char
2025 :                  CONOUTS:
2025 : 1a               	ld	a,(de)
2026 : fe00             	cp	0
2028 : c8               	ret	z
2029 : d5               	push	de
202a : 5f               	ld	e,a
202b : 0e02             	ld	c,_CONOUT
202d : cd0500           	call 	DOS
2030 : d1               	pop	de
2031 : 13               	inc	de
2032 : 18f1             	jr	CONOUTS
                        
                        
                        
                        
                        
                        ; Templates and Variable Set 1 (< #4000) (for TCP/IP r
                        
                        
                        ;--- TCP parameters block for the connection, it is fi
                        
2034 :                  TCP_PARAMS:
2034 : 00000000         IP_REMOTE:	db	0,0,0,0
2038 : 0000             PORT_REMOTE:	dw	0
203a : ffff             PORT_LOCAL:	dw	#FFFF	;Random port if none is specified
203c : 0000             USER_TOUT:	dw	0
203e : 00               PASSIVE_OPEN:	db	0
                        
                        ;--- Variables
                        
203f : ff               CON_NUM:	db	#FF	;Connection handle
2040 : 00               INPUT_MODE:	db	0	;0 for line mode, #FF for character m
2041 : 01               GETCHAR_FUN:	db	_CONIN	;_CONIN for echo ON, _INNOE for
2042 : 00               DOS2:		db	0	;0 for DOS 1, #FF for DOS 2
                        
                        ;--- Text strings
AS80 Assembler for i8080 [1.31].                                     Page   92
---------------------------------- M14.ASM -----------------------------------

2043 :                  USEDOS2_S:
2043 : 2a205553452044.. 	db	"* USE DOS2 ",13,10,"$"
                        
                        
2051 :                  PRESENT_S:
2051 : 49524320636c69.. 	db	"IRC client for MSX. TCP/IP Engine base on:",13,10
207d : 54435020436f6e.. 	db	"TCP Console for the TCP/IP UNAPI 1.0 By Konamiman
20b8 : 5573657220696e.. 	db	"User interface from Pasha Zakharov 2:5001/3 HiHi 
                        
20ef : 55736167653a20.. INFO_S:	db	"Usage: MSXIRC [inifile.ini]",13,10,10,"$"
210e : 2a2a2a20457272.. NOINIF_S:	db	"*** Error load INI File",13,10,"$"
2128 : 2a2a2a20496e74.. NOINS_S:	db	"*** InterNestor Lite is not installed",13
2150 : 2a2a2a20496e76.. INVPAR_S:	db	"*** Invalid parameter(s)",13,10,"$"
216b : 2a2a2a204d6973.. MISSPAR_S:	db	"*** Missing parameter(s)",13,10,"$"
2186 : 2a2a2a204d6973.. MISSHNM_S:	db	"*** Missing hostname",13,10,"$"
219d : 2a2a2a20455252.. ERROR_S:	db	"*** ERROR: $"
21a9 : 2a2a2a20436861.. CHNOT_S:	db	"*** Channel not open",13,10,"$"
21c0 : 4f70656e696e67.. OPENING_S:	db	"Opening connection (press ESC to cancel
21ed : 5265736f6c7669.. RESOLVING_S:	db	"Resolving host name... $"
2205 : 4f4b210d0a0a     OPENED_S:	db	"OK!",13,10,10
220b : 2a2a2a20507265.. 	db	"*** Press F1 for help",13,10,10,"$"
2224 : 0d0a2a2a2a2046.. HELP_S:	db	13,10,"*** F1: Show this help",13,10
223e : 2a2a2a2046323a.. 	db	"*** F2: Toggle line/character mode",13,10
2262 : 20202020202020.. 	db	"        Current mode is: "
227b : 6c696e65202020.. LINCHAR_S:	db	"line     ",13,10
2286 : 2a2a2a2046333a.. 	db	"*** F3: Toggle local echo ON/OFF (only on charact
22c1 : 20202020202020.. 	db	"        Currently local echo is: "
22e2 : 4f4e200d0a       ECHONOFF_S:	db	"ON ",13,10
22e7 : 2a2a2a20455343.. 	db	"*** ESC: Close connection and exit",13,10
230b : 2a2a2a20435452.. 	db	"*** CTRL+ESC: Abort connection and exit",13,10
2334 : 2a2a2a20547970.. 	db	"*** Type the text to be sent to the other side.",
2365 : 20202020496e20.. 	db	"    In line mode, the line text will be sent when
23a8 : 20202020496e20.. 	db	"    In character mode, each typed character will 
23ef : 20202020496e63.. 	db	"    Incoming data will be printed out to the scre
2427 : 0d0a2a2a2a2049.. INPTOG0_S:	db	13,10,"*** Input mode toggled to line mo
244f : 0d0a2a2a2a2049.. INPTOG1_S:	db	13,10,"*** Input mode toggled to charact
247c : 0d0a2a2a2a204c.. ECHOTOG0_S:	db	13,10,"*** Local echo toggled ON",13,10
249a : 0d0a2a2a2a204c.. ECHOTOG1_S:	db	13,10,"*** Local echo toggled OFF",13,1
24b9 : 0d0a2a2a2a2043.. USERCLOS_S:	db	13,10,"*** Connection closed by user",1
24db : 0d0a2a2a2a2043.. USERAB_S:	db	13,10,"*** Connection aborted by user",13
24fe : 6c696e65202020.. LINE_S:	db	"line     "
2507 : 63686172616374.. CHAR_S:	db	"character"
2510 : 4f4e20           ON_S:	db	"ON "
2513 : 4f4646           OFF_S:	db	"OFF"
2516 : 2a2a2a2024       ASTERISK_S:	db	"*** $"
                        
                        	;* Host name resolution
                        
251b : 0d0a4552524f5220 RESOLVERR_S:	db	13,10,"ERROR "
2523 : 000000000000     RESOLVERRC_S:	ds	6	;Leave space for "<code>: $"
2529 : 4f4b3a20         RESOLVOK_S:	db	"OK: "
252d : 00000000000000.. RESOLVIP_S:	ds	16	;Space for "xxx.xxx.xxx.xxx$"
253d : 0d0a             TWO_NL_S:	db	13,10
253f : 0d0a24           ONE_NL_S:	db	13,10,"$"
                        
                        	;* DNS_Q errors
                        
2542 : 024e6f206e6574.. DNSQERRS_T:	db	ERR_NO_NETWORK,"No network connection$"
2559 : 074e6f20444e53.. 	db	ERR_NO_DNS,"No DNS servers available$"
2573 : 01546869732054.. 	db	ERR_NOT_IMP,"This TCP/IP UNAPI implementation does
25b8 : 416e2049502061.. 	db	"An IP address must be specified instead.$"
25e1 : 00               	db	0
AS80 Assembler for i8080 [1.31].                                     Page   93
---------------------------------- M14.ASM -----------------------------------

                        
                        	;* DNS_S errors
                        
25e2 : 01517565727920.. DNSRERRS_T:	db	1,"Query format error$"
25f6 : 02536572766572.. 	db	2,"Server failure$"
2606 : 034e616d652065.. 	db	3,"Name error (this host name does not exist)$"
2632 : 04517565727920.. 	db	4,"Query type not implemented by the server$"
265c : 05517565727920.. 	db	5,"Query refused by the server$"
2679 : 06444e53206572.. 	db	6,"DNS error 6$"
2686 : 07444e53206572.. 	db	7,"DNS error 7$"
2693 : 08444e53206572.. 	db	8,"DNS error 8$"
26a0 : 09444e53206572.. 	db	9,"DNS error 9$"
26ad : 0a444e53206572.. 	db	10,"DNS error 10$"
26bb : 0b444e53206572.. 	db	11,"DNS error 11$"
26c9 : 0c444e53206572.. 	db	12,"DNS error 12$"
26d7 : 0d444e53206572.. 	db	13,"DNS error 13$"
26e5 : 0e444e53206572.. 	db	14,"DNS error 14$"
26f3 : 0f444e53206572.. 	db	15,"DNS error 15$"
2701 : 10536572766572.. 	db	16,"Server(s) not responding to queries$"
2726 : 11546f74616c20.. 	db	17,"Total operation timeout expired$"
2747 : 13496e7465726e.. 	db	19,"Internet connection lost$"
2761 : 14446561642d65.. 	db	20,"Dead-end reply (not containing answers nor red
279b : 15416e73776572.. 	db	21,"Answer is truncated$"
27b0 : 00               	db	0
                        
                        	;* TCP_OPEN errors
                        
27b1 : 09546f6f206d61.. TCPOPERRS_T:	db	ERR_NO_FREE_CONN,"Too many TCP connect
27d2 : 024e6f206e6574.. 		db	ERR_NO_NETWORK,"No network connection found$"
27ef : 0a436f6e6e6563.. 		db	ERR_CONN_EXISTS,"Connection already exists, try a
2829 : 04556e65737065.. 		db	ERR_INV_PARAM,"Unespecified remote socket is not 
286a : 00               		db	0
                        
                        	;* TCP close reasons
                        
286b :                  TCPCLOSED_T:
286b : 802a2a2a20436f.. 	db	128+0,"*** Connection closed$"
2882 : 812a2a2a20436f.. 	db	128+1,"*** Connection never used$"
289d :                  PEERCLOSE_S:
289d : 822a2a2a20436f.. 	db	128+2,"*** Connection closed by peer$"	;Actually l
28bc : 832a2a2a20436f.. 	db	128+3,"*** Connection locally aborted$"
28dc : 842a2a2a20436f.. 	db	128+4,"*** Connection refused (RST received)$"
2903 : 852a2a2a204461.. 	db	128+5,"*** Data sending timeout expired$"
2925 : 862a2a2a20436f.. 	db	128+6,"*** Connection timeout expired$"
2945 : 872a2a2a20496e.. 	db	128+7,"*** Internet connection lost$"
2963 : 882a2a2a204465.. 	db	128+8,"*** Destination host is unreachable$"
2988 : 00               	db	0
                        
                        	;* TCP RCV/SEND errors
                        
2989 :                  TCPERROR_T:
2989 : 0c2a2a2a205468.. 	db	ERR_CONN_STATE,"*** The connection state does not 
29bf : 0d2a2a2a204f75.. 	db	ERR_BUFFER,"*** Output buffer overflow$"
29db : 042a2a2a20496e.. 	db	ERR_INV_PARAM,"*** Invalid parameter$"
29f2 : 00               	db	0
                        
                        	;* Other errors
                        
29f3 : 2a2a2a204e6f20.. NOTCPIP_S:	db	"*** No TCP/IP UNAPI implementation foun
2a1f : 2a2a2a20546869.. NOTCPA_S:	db	"*** This TCP/IP UNAPI implementation doe
2a56 : 202020206f7065.. 		db	"    opening active TCP connections.",13,10,"$"
2a7c : 2a2a2a20546869.. NOTCPPS_S:	db	"*** This TCP/IP UNAPI implementation do
AS80 Assembler for i8080 [1.31].                                     Page   94
---------------------------------- M14.ASM -----------------------------------

2ab3 : 202020206f7065.. 		db	"    opening passive TCP connections with remote 
2af7 : 2a2a2a20546869.. NOTCPPU_S:	db	"*** This TCP/IP UNAPI implementation do
2b2e : 202020206f7065.. 	db	"    opening passive TCP connections with remote s
2b75 : 2a20596f752061.. YANCH_S:	db	"* You are not on a channel",13,10,"$"
                        
                        ;HST_PORT:	db	"6667",0
                        ;--- UNAPI related
                        
2b92 : 5443502f495000.. TCPIP_S:	db	"TCP/IP",0,0,0,0,0,0,0,0,0,0
                        
                        
                        ;--- Segment switching routines for page 1,2
                        ;    these are overwritten with calls to
                        ;    mapper support routines on DOS 2
                        
2ba2 : c3d22b           ALL_SEG	jp	D1ALLS
2ba5 : c3fe2b           FRE_SEG jp	D1FRES
2ba8 : c9               RD_SEG	ret
2ba9 : 0000             	ds	2	
2bab : c9               WR_SEG	ret
2bac : 0000             	ds	2	
2bae : c9               CALL_SEG: ret
2baf : 0000             	ds	2
2bb1 : c9               CALLS:	ret
2bb2 : 0000                     ds	2
2bb4 : c9               PUT_PH  ret
2bb5 : 0000             	ds	2
2bb7 : c9               GET_PH  ret
2bb8 : 0000             	ds	2
2bba : d3fc             PUT_P0  out	(#FC),a
2bbc : c9               	ret
2bbd : dbfc             GET_P0  in	a,(#FC)
2bbf : c9               	ret
2bc0 : d3fd             PUT_P1:	out	(#FD),a
2bc2 : c9               	ret
2bc3 : dbfd             GET_P1:	in	a,(#FD)
2bc5 : c9               	ret
2bc6 : d3fe             PUT_P2:	out	(#FE),a
2bc8 : c9               	ret
2bc9 : dbfe             GET_P2:	in	a,(#FE)
2bcb : c9               	ret
2bcc : d3ff             PUT_P3:	out	(#FF),a
2bce : c9               	ret
2bcf : dbff             GET_P3:	in	a,(#FF)
2bd1 : c9               	ret
                        
2bd2 :                  D1ALLS:
2bd2 : 215a2c           	ld	hl,EMAPTAB
2bd5 : af               	xor	a
2bd6 : 5f               	ld	e,a
2bd7 : 1620             	ld	d,32
2bd9 : 3d               	dec	a
2bda : be               D2als2:	cp	(hl)
2bdb : 2007             	jr	nz,D2als1	
2bdd : 23               	inc	hl
2bde : 1c               	inc	e
2bdf : 15               	dec	d
2be0 : 20f8             	jr	nz,D2als2
2be2 : 37               	scf
2be3 : c9               	ret
2be4 : af               D2als1: xor	a
2be5 : cb13             	rl	e
AS80 Assembler for i8080 [1.31].                                     Page   95
---------------------------------- M14.ASM -----------------------------------

2be7 : cb13             	rl	e
2be9 : cb13             	rl	e
2beb : 57               	ld	d,a
2bec : 0601             	ld	b,1
2bee : 78               D2als4:	ld	a,b
2bef : a6               	and	(hl)
2bf0 : 2806             	jr	z,D2als3
2bf2 : af               	xor	a
2bf3 : cb10             	rl	b
2bf5 : 14               	inc	d
2bf6 : 18f6             	jr	D2als4
2bf8 : 78               D2als3:	ld	a,b
2bf9 : b6               	or	(hl)
2bfa : 77               	ld	(hl),a
2bfb : 7a               	ld	a,d
2bfc : 83               	add	a,e
2bfd : c9               	ret
2bfe :                  D1FRES:	
2bfe : 5f               	ld	e,a
2bff : e607             	and	%00000111
2c01 : 47               	ld	b,a
2c02 : af               	xor	a
2c03 : 57               	ld	d,a
2c04 : 7b               	ld	a,e
2c05 : 1f               	rra	
2c06 : 1f               	rra	
2c07 : 1f               	rra	
2c08 : e61f             	and	%00011111
2c0a : 5f               	ld	e,a
2c0b : 215a2c           	ld	hl,EMAPTAB
2c0e : 19               	add	hl,de	
2c0f : 3eff             	ld	a,#FF
2c11 : 04               	inc	b
2c12 : 17               D1frs1	rla
2c13 : 10fd             	djnz	D1frs1
2c15 : a6               	and	(hl)
2c16 : 77               	ld	(hl),a
                        
                        ;	scf
2c17 : c9               	ret
                        
2c18 :                  INIMAPDOS1:
                        	; Get Free mapper segmet between 1st 4seg and last se
2c18 : dbfc             	in	a,(#FC)
2c1a : 3c               Imds1	inc	a
2c1b : f5               	push	af
2c1c : cdfe2b           	call	D1FRES
2c1f : f1               	pop	af
2c20 : fefe             	cp	#FE
2c22 : 20f6             	jr	nz,Imds1
2c24 : dbff             	in	a,(#FF)
2c26 : 47               	ld	b,a
2c27 : af               	xor	a
2c28 : 90               	sub	b
2c29 : 327a2c           	ld	(totmaps),a
2c2c : d605             	sub	5	
2c2e : 327b2c           	ld	(freemaps),a
2c31 : c9               	ret
                        
2c32 :                  DET_MSG:
                        ;	scf
                        ;	ret
AS80 Assembler for i8080 [1.31].                                     Page   96
---------------------------------- M14.ASM -----------------------------------

                        ;  input  hl - "word ....." 
                        ;  output a - N find template word, CF- not find 
2c32 : 11902d           	ld	de,D_MSG
2c35 : 0600             DET:	ld	b,0
2c37 : 0e00             DEMS0:	ld	c,0
2c39 : e5               	push	hl
2c3a : 1a               DEMS1:	ld	a,(de)
2c3b : be               	cp	(hl)
                        ;	and	%11011111
2c3c : 2802             	jr	z,DEMS2
2c3e : 0e01             	ld	c,1
2c40 : fe20             DEMS2:	cp	" "
2c42 : 2807             	jr	z,DEMS3
2c44 : b7               	or	a
2c45 : 280d             	jr	z,DEMS5
2c47 : 23               	inc	hl
2c48 : 13               	inc	de
2c49 : 18ef             	jr	DEMS1	
2c4b : e1               DEMS3:	pop	hl
2c4c : 04               	inc	b
2c4d : 79               	ld	a,c
2c4e : b7               	or	a
2c4f : 78               	ld	a,b
2c50 : c8               	ret	z
2c51 : 13               	inc	de
2c52 : 18e3             	jr	DEMS0		
2c54 : e1               DEMS5:	pop	hl
2c55 : 37               	scf
2c56 : c9               	ret
2c57 : 0000             tcptim:	dw	0
2c59 : 00               notcpip: db	0
2c5a : ffffffffffffffff EMAPTAB:db	#FF,#FF,#FF,#FF, #FF,#FF,#FF,#FF
2c62 : ffffffffffffffff 	db	#FF,#FF,#FF,#FF, #FF,#FF,#FF,#FF
2c6a : ffffffffffffffff 	db	#FF,#FF,#FF,#FF, #FF,#FF,#FF,#FF
2c72 : ffffffffffffffff 	db	#FF,#FF,#FF,#FF, #FF,#FF,#FF,#FF
2c7a : 00               totmaps:	db	0
2c7b : 00               freemaps:	db	0	
2c7c : 00               P2_sys	db	0
2c7d : 00               S_C	db	0
2c7e : 00               S_S	db	0
2c7f : 00               T_S_C	db	0
2c80 : 00               segsel	db	0
2c81 : 00               segp	db	0
2c82 : 00               tsegt	db	0
                        ;MAPTAB	status0,page0,status1,page1.... status79,page7
                        ; status 0-free "S"-server page, "C"-channell page, "H
2c83 : 00000000000000.. MAPTAB	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0,
2c97 : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2cab : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2cbf : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2cd3 : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2ce7 : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2cfb : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2d0f : 00000000000000.. 	db	0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0
2d23 : 00000000000000.. SSIAT:	ds	80
2d73 : 00000000000000.. 	ds	10
                        
                        
                        
2d7d : 0000             year:	dw	0
2d7f : 00               day:	db	0
2d80 : 00               month:	db	0
AS80 Assembler for i8080 [1.31].                                     Page   97
---------------------------------- M14.ASM -----------------------------------

2d81 : 00               minute:	db	0
2d82 : 00               hour	db	0
2d83 : 00               second:	db	0
                        
2d84 : 0000             timtim	dw	0
                        
2d86 : 00               serv1c:	db	0
2d87 : 00               serv2c:	db	0
2d88 : 00               serv3c:	db	0
2d89 : 0000             serv1s:	ds	2
2d8b : 0000             serv2s:	ds	2
2d8d : 0000             serv3s:	ds	2
                        
2d8f : 00               req:	db	0
                        
                        ;
2d90 :                  D_MSG:
2d90 : 4e49434b20       	db	"NICK "		; Nickname
2d95 : 505249564d534720 	db	"PRIVMSG "	;
2d9d : 4e4f5449434520   	db	"NOTICE "
2da4 : 4a4f494e20       	db	"JOIN "
2da9 : 5041525420       	db	"PART "
2dae : 4d4f444520       	db	"MODE "
2db3 : 4b49434b20       	db	"KICK "	
2db8 : 5155495420       	db	"QUIT "		;
2dbd : 33353320         	db	"353 "		; nicklist
2dc1 : 33363620         	db	"366 "		; end nicklist
2dc5 : 33323420         	db	"324 "          ; mode replay
                        
2dc9 : 00               	db	0
2dca :                  D_COMM:
2dca : 6e69636b20       	db	"nick "
2dcf : 4e49434b20       	db	"NICK "
2dd4 : 6a6f696e20       	db	"join "
2dd9 : 4a4f494e20       	db	"JOIN "
2dde : 717565727920     	db	"query "
2de4 : 515545525920     	db	"QUERY "
2dea : 7061727420       	db	"part "
2def : 5041525420       	db	"PART "
2df4 : 00               	db	0
                        
                        
                        ;Table timestump template
2df5 :                  TABTS:
2df5 : 4701             	db	71,1	; 0 none
2df7 : 4805             	db	72,5	; 1 HH:MM
2df9 : 4808             	db	72,8	; 2 HH:MM:SS
2dfb : 420b             	db	66,11	; 3 MM-DD HH:MM
2dfd : 420e             	db	66,14	; 4 MM-DD HH:MM:SS
2dff : 3f0e             	db	63,14	; 5 YY-MM-DD HH:MM
2e01 : 3f11             	db	63,17	; 6 YY-MM-DD HH:MM:SS
2e03 : 3d10             	db	61,16	; 7 YYYY-MM-DD HH:MM
2e05 : 3d13             	db	61,19	; 8 YYYY-MM-DD HH:MM:SS
                        
2e07 : 00               PA_ST:	db	0	; bit mask status parametr's
                        			; 0 - server		1 - port
                        			; 2 - server password   3 - nick
                        			; 4 - user str
                        
2e08 : 00               ME_STATUS:	db	0
2e09 : 504152542000     AA_PART		db	"PART ",0
2e0f : 01414354494f4e.. PA_ME:     	db	1,"ACTION ",0
AS80 Assembler for i8080 [1.31].                                     Page   98
---------------------------------- M14.ASM -----------------------------------

2e18 : 505249564d5347.. AA_PRIVMSG:	db	"PRIVMSG ",0
2e21 : 00               C_CHAN:		db	0
2e22 : 00000000000000.. 		ds	50
2e54 : 3a               PA_DP:		db	":"
2e55 : 0d0a00           AA_CRLF:	db	#0D,#0A,0
2e58 : 53455256455220   AA_SERVER:	db	"SERVER "
2e5f : 00000000000000.. PA_SERVER:	ds	256
2f5f : 504f525420       AA_PORT		db	"PORT "
2f64 : 3636363700       PA_PORT:	db	"6667",0
2f69 : 5041535320       AA_SPAS		db	"PASS "
2f6e : 53455256455220.. AA_SRVPASS:	db	"SERVER PASSWORD "
2f7e : 00               PA_SRVPASS:	db	0
2f7f : 00000000000000.. 		ds	16
2f8f : 4e49434b20       AA_NICK:	db	"NICK "
2f94 : 00               PA_NICK:	db	0
2f95 : 00000000000000.. 		ds	32
2fb5 : 414c544e49434b20 AA_ANICK:	db	"ALTNICK "
2fbd : 00               PA_ANICK:	db	0
2fbe : 00000000000000.. 		ds	32
2fde : 5553455220       AA_USER:	db	"USER "
2fe3 : 7573657220686f.. PA_USER:	db	"user host server :Real Name",0
2fff : 00000000000000.. 		ds	256-25
30e6 : 4a4f494e2000     AA_JOIN:	db	"JOIN ",0
30ec : 236368616e6e65.. PA_CHANNEL:	db	"#channel password",0
30fe : 00000000000000.. 		ds	52
3132 : 00000000000000.. PA_FONT:	db	0,0,0,0, 0,0,0,0, 0,0,0, 0, "$"
313f : 3100             PA_IC:		db	"1",0
3141 : 000000           		ds	3
3144 : 313500           PA_PC:		db	"15",0
3147 : 0000             		ds	2
3149 : 3100             PA_AIC:		db	"1",0
314b : 000000           		ds	3
314e : 313300           PA_APC:		db	"13",0
3151 : 0000             		ds	2
3153 : 3000             PA_TIMEST:	db	"0",0
3155 : 000000           		ds	3
3158 : 00               PA_QNICK:	db	0
3159 : 00000000000000.. 		ds	30
                        
3177 : 50494e472000     AA_PING:	db	"PING ",0
317d : 504f4e472000     AA_PONG:	db	"PONG ",0
                        
                        ;--- Buffer for the remote host name
                        
3183 : 00000000000000.. HOST_NAME:	ds 256;
                        
                        ;--- Generic temporary buffer for data send/receive
                        ;    and for parameter parsing
3283 : 00c1             B_BU:		dw	NB_BU
3285 : 00c1             E_BU:		dw	NB_BU
                        
3287 : 0000             POINT:		ds	2
3289 : 0000             LBUFF:		ds      2
328b : 00               ADDRES:		db	0
328c : 00000000000000.. 		ds	256
                        
c100 =                  NB_BU		equ	#C100
338c :                  BUFFER:				;	equ	#C100
338c : 00000000000000.. 		ds	512
358c : 00000000000000.. BUFFER1:	ds	512
                        
                        ;--- NAME: NUMTOASC
AS80 Assembler for i8080 [1.31].                                     Page   99
---------------------------------- M14.ASM -----------------------------------

                        ;      Converts a 16 bit number into an ASCII string
                        ;    INPUT:      DE = Number to convert
                        ;                HL = Buffer to put the generated ASCI
                        ;                B  = Total number of characters of th
                        ;                     not including any termination ch
                        ;                C  = Padding character
                        ;                     The generated string is right ju
                        ;                     and the remaining space at the l
                        ;                     with the character indicated in 
                        ;                     If the generated string length i
                        ;                     the value specified in B, this v
                        ;                     and the string length is the one
                        ;                     all the digits of the number.
                        ;                     To compute length, termination c
                        ;                     is not counted.
                        ;                 A = &B ZPRFFTTT
                        ;                     TTT = Format of the generated st
                        ;                            0: decimal
                        ;                            1: hexadecimal
                        ;                            2: hexadecimal, starting 
                        ;                            3: hexadecimal, starting 
                        ;                            4: hexadecimal, finished 
                        ;                            5: binary
                        ;                            6: binary, starting with 
                        ;                            7: binary, finishing with
                        ;                     R   = Range of the input number:
                        ;                            0: 0..65535 (unsigned int
                        ;                            1: -32768..32767 (twos co
                        ;                               If the output format i
                        ;                               the number is assumed 
                        ;                               in the range 0.255 (un
                        ;                               That is, bit R and reg
                        ;                     FF  = How the string must finish
                        ;                            0: No special finish
                        ;                            1: Add a "$" character at
                        ;                            2: Add a 00 character at 
                        ;                            3: Set to 1 the bit 7 of 
                        ;                     P   = "+" sign:
                        ;                            0: Do not add a "+" sign 
                        ;                            1: Add a "+" sign to posi
                        ;                     Z   = Left zeros:
                        ;                            0: Remove left zeros
                        ;                            1: Do not remove left zer
                        ;    OUTPUT:    String generated in (HL)
                        ;               B = Length of the string, not includin
                        ;               C = Length of the string, including th
                        ;                   Tailing "$" or 00 are not counted 
                        ;               All other registers are preserved
                        
378c : f5dde5d5e5       NUMTOASC:	push	af,ix,de,hl
3791 : dd216a39         	ld	ix,WorkNTOA
3795 : f5f5             	push	af,af
3797 : e607             	and	%00000111
3799 : dd7700           	ld	(ix+0),a	;Type
379c : f1               	pop	af
379d : e618             	and	%00011000
379f : 0f               	rrca
37a0 : 0f               	rrca
37a1 : 0f               	rrca
37a2 : dd7701           	ld	(ix+1),a	;Finishing
37a5 : f1               	pop	af
37a6 : e6e0             	and	%11100000
AS80 Assembler for i8080 [1.31].                                     Page  100
---------------------------------- M14.ASM -----------------------------------

37a8 : 07               	rlca
37a9 : 07               	rlca
37aa : 07               	rlca
37ab : dd7706           	ld	(ix+6),a	;Flags: Z(zero), P(+ sign), R(range)
37ae : dd7002           	ld	(ix+2),b	;Number of final characters
37b1 : dd7103           	ld	(ix+3),c	;Padding character
37b4 : af               	xor	a
37b5 : dd7704           	ld	(ix+4),a	;Total length
37b8 : dd7705           	ld	(ix+5),a	;Number length
37bb : 3e0a             	ld	a,10
37bd : dd7707           	ld	(ix+7),a	;Divisor = 10
37c0 : dd750d           	ld	(ix+13),l	;User buffer
37c3 : dd740e           	ld	(ix+14),h
37c6 : 217a39           	ld	hl,BufNTOA
37c9 : dd750a           	ld	(ix+10),l	;Internal buffer
37cc : dd740b           	ld	(ix+11),h
                        
37cf : dd7e00           ChkTipo:	ld	a,(ix+0)	;Set divisor to 2 or 16,
37d2 : b7               	or	a	;or leave it to 10
37d3 : 2814             	jr	z,ChkBoH
37d5 : fe05             	cp	5
37d7 : d2de37           	jp	nc,EsBin
37da : 3e10             EsHexa:	ld	a,16
37dc : 1808             	jr	GTipo
37de : 3e02             EsBin:	ld	a,2
37e0 : 1600             	ld	d,0
37e2 : ddcb0686         	res	0,(ix+6)	;If binary, range is 0-255
37e6 : dd7707           GTipo:	ld	(ix+7),a
                        
37e9 : dd7e00           ChkBoH:	ld	a,(ix+0)	;Checks if a final "H" or "B"
37ec : fe07             	cp	7	;is desired
37ee : caf937           	jp	z,PonB
37f1 : fe04             	cp	4
37f3 : 200e             	jr	nz,ChkTip2
37f5 : 3e48             PonH:	ld	a,"H"
37f7 : 1802             	jr	PonHoB
37f9 : 3e42             PonB:	ld	a,"B"
37fb : 77               PonHoB:	ld	(hl),a
37fc : 23               	inc	hl
37fd : dd3404           	inc	(ix+4)
3800 : dd3405           	inc	(ix+5)
                        
3803 : 7a               ChkTip2:	ld	a,d	;If the number is 0, never add sign
3804 : b3               	or	e
3805 : 2821             	jr	z,NoSgn
3807 : ddcb0646         	bit	0,(ix+6)	;Checks range
380b : 2811             	jr	z,SgnPos
380d : cb7a             ChkSgn:	bit	7,d
380f : 280d             	jr	z,SgnPos
3811 : e5               SgnNeg:	push	hl	;Negates number
3812 : 210000           	ld	hl,0	;Sign=0:no sign; 1:+; 2:-
3815 : af               	xor	a
3816 : ed52             	sbc	hl,de
3818 : eb               	ex	de,hl
3819 : e1               	pop	hl
381a : 3e02             	ld	a,2
381c : 180b             	jr	FinSgn
381e : ddcb064e         SgnPos:	bit	1,(ix+6)
3822 : 2804             	jr	z,NoSgn
3824 : 3e01             	ld	a,1
3826 : 1801             	jr	FinSgn
3828 : af               NoSgn:	xor	a
AS80 Assembler for i8080 [1.31].                                     Page  101
---------------------------------- M14.ASM -----------------------------------

3829 : dd770c           FinSgn:	ld	(ix+12),a
                        
382c : 0604             ChkDoH:	ld	b,4
382e : af               	xor	a
382f : ddbe00           	cp	(ix+0)
3832 : ca4138           	jp	z,EsDec
3835 : 3e04             	ld	a,4
3837 : ddbe00           	cp	(ix+0)
383a : d24338           	jp	nc,EsHexa2
383d : 0608             EsBin2:	ld	b,8
383f : 1802             	jr	EsHexa2
3841 : 0605             EsDec:	ld	b,5
                        
3843 : d5               EsHexa2:	push	de
3844 : c5e5             Divide:	push	bc,hl	;DE/(IX+7)=DE, remaining A
3846 : 7a               	ld	a,d
3847 : 4b               	ld	c,e
3848 : 1600             	ld	d,0
384a : dd5e07           	ld	e,(ix+7)
384d : 210000           	ld	hl,0
3850 : 0610             	ld	b,16
3852 : cb11             BucDiv:	rl	c
3854 : 17               	rla
3855 : ed6a             	adc	hl,hl
3857 : ed52             	sbc	hl,de
3859 : 3001             	jr	nc,$+3
385b : 19               	add	hl,de
385c : 3f               	ccf
385d : 10f3             	djnz	BucDiv
385f : cb11             	rl	c
3861 : 17               	rla
3862 : 57               	ld	d,a
3863 : 59               	ld	e,c
3864 : 7d               	ld	a,l
3865 : e1               	pop	hl
3866 : c1               	pop	bc
                        
3867 : fe0a             ChkRest9:	cp	10	;Converts the remaining
3869 : d27038           	jp	nc,EsMay9	;to a character
386c : c630             EsMen9:	add	a,"0"
386e : 1804             	jr	PonEnBuf
3870 : d60a             EsMay9:	sub	10
3872 : c641             	add	a,"A"
                        
3874 : 77               PonEnBuf:	ld	(hl),a	;Puts character in the buffer
3875 : 23               	inc	hl
3876 : dd3404           	inc	(ix+4)
3879 : dd3405           	inc	(ix+5)
387c : 10c6             	djnz	Divide
387e : d1               	pop	de
                        
387f : ddcb0656         ChkECros:	bit	2,(ix+6)	;Cchecks if zeros must be remov
3883 : 2014             	jr	nz,ChkAmp
3885 : 2b               	dec	hl
3886 : dd4605           	ld	b,(ix+5)
3889 : 05               	dec	b	;B=num. of digits to check
388a : 7e               Chk1Cro:	ld	a,(hl)
388b : fe30             	cp	"0"
388d : 2009             	jr	nz,FinECeros
388f : 2b               	dec	hl
3890 : dd3504           	dec	(ix+4)
3893 : dd3505           	dec	(ix+5)
AS80 Assembler for i8080 [1.31].                                     Page  102
---------------------------------- M14.ASM -----------------------------------

3896 : 10f2             	djnz	Chk1Cro
3898 : 23               FinECeros:	inc	hl
                        
3899 : dd7e00           ChkAmp:	ld	a,(ix+0)	;Puts "#", "&H" or "&B" if necessa
389c : fe02             	cp	2
389e : 2818             	jr	z,PonAmpH
38a0 : fe03             	cp	3
38a2 : 2808             	jr	z,PonAlm
38a4 : fe06             	cp	6
38a6 : 2024             	jr	nz,PonSgn
38a8 : 3e42             PonAmpB:	ld	a,"B"
38aa : 180e             	jr	PonAmpHB
38ac : 3e23             PonAlm:	ld	a,"#"
38ae : 77               	ld	(hl),a
38af : 23               	inc	hl
38b0 : dd3404           	inc	(ix+4)
38b3 : dd3405           	inc	(ix+5)
38b6 : 1814             	jr	PonSgn
38b8 : 3e48             PonAmpH:	ld	a,"H"
38ba : 77               PonAmpHB:	ld	(hl),a
38bb : 23               	inc	hl
38bc : 3e26             	ld	a,"&"
38be : 77               	ld	(hl),a
38bf : 23               	inc	hl
38c0 : dd3404           	inc	(ix+4)
38c3 : dd3404           	inc	(ix+4)
38c6 : dd3405           	inc	(ix+5)
38c9 : dd3405           	inc	(ix+5)
                        
38cc : dd7e0c           PonSgn:	ld	a,(ix+12)	;Puts sign
38cf : b7               	or	a
38d0 : 2814             	jr	z,ChkLon
38d2 : fe01             SgnTipo:	cp	1
38d4 : 2006             	jr	nz,PonNeg
38d6 : 3e2b             PonPos:	ld	a,"+"
38d8 : 1804             	jr	PonPoN
38da : 180a             	jr	ChkLon
38dc : 3e2d             PonNeg:	ld	a,"-"
38de : 77               PonPoN	ld	(hl),a
38df : 23               	inc	hl
38e0 : dd3404           	inc	(ix+4)
38e3 : dd3405           	inc	(ix+5)
                        
38e6 : dd7e02           ChkLon:	ld	a,(ix+2)	;Puts padding if necessary
38e9 : ddbe04           	cp	(ix+4)
38ec : daff38           	jp	c,Invert
38ef : 280e             	jr	z,Invert
38f1 : dd9604           PonCars:	sub	(ix+4)
38f4 : 47               	ld	b,a
38f5 : dd7e03           	ld	a,(ix+3)
38f8 : 77               Pon1Car:	ld	(hl),a
38f9 : 23               	inc	hl
38fa : dd3404           	inc	(ix+4)
38fd : 10f9             	djnz	Pon1Car
                        
38ff : dd6e0a           Invert:	ld	l,(ix+10)
3902 : dd660b           	ld	h,(ix+11)
3905 : af               	xor	a	;Inverts the string
3906 : e5               	push	hl
3907 : dd7708           	ld	(ix+8),a
390a : dd7e04           	ld	a,(ix+4)
390d : 3d               	dec	a
AS80 Assembler for i8080 [1.31].                                     Page  103
---------------------------------- M14.ASM -----------------------------------

390e : 5f               	ld	e,a
390f : 1600             	ld	d,0
3911 : 19               	add	hl,de
3912 : eb               	ex	de,hl
3913 : e1               	pop	hl	;HL=initial buffer, DE=final buffer
3914 : dd7e04           	ld	a,(ix+4)
3917 : cb3f             	srl	a
3919 : 47               	ld	b,a
391a : c5               BucInv:	push	bc
391b : 1a               	ld	a,(de)
391c : 46               	ld	b,(hl)
391d : eb               	ex	de,hl
391e : 12               	ld	(de),a
391f : 70               	ld	(hl),b
3920 : eb               	ex	de,hl
3921 : 23               	inc	hl
3922 : 1b               	dec	de
3923 : c1               	pop	bc
3924 : 78               	ld	a,b	;*** This part was missing on the
3925 : b7               	or	a	;*** original routine
3926 : 2802             	jr	z,ToBufUs	;***
3928 : 10f0             	djnz	BucInv
392a : dd6e0a           ToBufUs:	ld	l,(ix+10)
392d : dd660b           	ld	h,(ix+11)
3930 : dd5e0d           	ld	e,(ix+13)
3933 : dd560e           	ld	d,(ix+14)
3936 : dd4e04           	ld	c,(ix+4)
3939 : 0600             	ld	b,0
393b : edb0             	ldir
393d : eb               	ex	de,hl
                        
393e : dd7e01           ChkFin1:	ld	a,(ix+1)	;Checks if "$" or 00 finishing is
3941 : e607             	and	%00000111
3943 : b7               	or	a
3944 : 2818             	jr	z,Fin
3946 : fe01             	cp	1
3948 : 280e             	jr	z,PonDolar
394a : fe02             	cp	2
394c : 2807             	jr	z,PonChr0
                        
394e : 2b               PonBit7:	dec	hl
394f : 7e               	ld	a,(hl)
3950 : f680             	or	%10000000
3952 : 77               	ld	(hl),a
3953 : 1809             	jr	Fin
                        
3955 : af               PonChr0:	xor	a
3956 : 1802             	jr	PonDo0
3958 : 3e24             PonDolar:	ld	a,"$"
395a : 77               PonDo0:	ld	(hl),a
395b : dd3404           	inc	(ix+4)
                        
395e : dd4605           Fin:	ld	b,(ix+5)
3961 : dd4e04           	ld	c,(ix+4)
3964 : e1               	pop	hl
3965 : d1               	pop     de
3966 : dde1             	pop	ix
3968 : f1               	pop	af
3969 : c9               	ret
                        
396a : 00000000000000.. WorkNTOA:	defs	16
397a : 00000000000000.. BufNTOA:	ds	10
AS80 Assembler for i8080 [1.31].                                     Page  104
---------------------------------- M14.ASM -----------------------------------

                        
                        
                        ;--- EXTNUM16
                        ;      Extracts a 16-bit number from a zero-finished A
                        ;    Input:  HL = ASCII string address
                        ;    Output: BC = Extracted number
                        ;            Cy = 1 if error (invalid string)
                        
3984 : cd9039           EXTNUM16:	call	EXTNUM
3987 : d8               	ret	c
3988 : da8c1e           	jp	c,INVPAR	;Error if >65535
                        
398b : 7b               	ld	a,e
398c : b7               	or	a	;Error if the last char is not 0
398d : c8               	ret	z
398e : 37               	scf
398f : c9               	ret
                        
                        
                        ;--- NAME: EXTNUM
                        ;      Extracts a 5 digits number from an ASCII string
                        ;    INPUT:      HL = ASCII string address
                        ;    OUTPUT:     CY-BC = 17 bits extracted number
                        ;                D  = number of digits of the number
                        ;                     The number is considered to be c
                        ;                     when a non-numeric character is 
                        ;                     or when already five characters 
                        ;                E  = first non-numeric character foun
                        ;                A  = error:
                        ;                     0 => No error
                        ;                     1 => The number has more than fi
                        ;                          CY-BC contains then the num
                        ;                          only the first five digits.
                        ;    All other registers are preserved.
                        
3990 : e5dde5           EXTNUM:	push	hl,ix
3993 : dd21d139         	ld	ix,ACA
3997 : ddcb0086         	res	0,(ix)
399b : ddcb00ce         	set	1,(ix)
399f : 010000           	ld	bc,0
39a2 : 110000           	ld	de,0
39a5 : 7e               BUSNUM:	ld	a,(hl)	;Jumps to FINEXT if no numeric chara
39a6 : 5f               	ld	e,a	;IXh = last read character
39a7 : fe30             	cp	"0"
39a9 : 3827             	jr	c,FINEXT
39ab : fe3a             	cp	"9"+1
39ad : 3023             	jr	nc,FINEXT
39af : 7a               	ld	a,d
39b0 : fe05             	cp	5
39b2 : 281e             	jr	z,FINEXT
39b4 : cdeb39           	call	POR10
                        
39b7 : e5               SUMA:	push	hl	;BC = BC + A 
39b8 : c5               	push	bc
39b9 : e1               	pop	hl
39ba : 010000           	ld	bc,0
39bd : 7b               	ld	a,e
39be : d630             	sub	"0"
39c0 : 4f               	ld	c,a
39c1 : 09               	add	hl,bc
39c2 : dccc39           	call	c,BIT17
39c5 : e5               	push	hl
AS80 Assembler for i8080 [1.31].                                     Page  105
---------------------------------- M14.ASM -----------------------------------

39c6 : c1               	pop	bc
39c7 : e1               	pop	hl
                        
39c8 : 14               	inc	d
39c9 : 23               	inc	hl
39ca : 18d9             	jr	BUSNUM
                        
39cc : ddcb00c6         BIT17:	set	0,(ix)
39d0 : c9               	ret
39d1 : 00               ACA:	db	0	;b0: num>65535. b1: more than 5 digits
                        
39d2 : 7b               FINEXT:	ld	a,e
39d3 : fe30             	cp	"0"
39d5 : dce639           	call	c,NODESB
39d8 : fe3a             	cp	"9"+1
39da : d4e639           	call	nc,NODESB
39dd : dd7e00           	ld	a,(ix)
39e0 : dde1             	pop	ix
39e2 : e1               	pop	hl
39e3 : cb3f             	srl	a
39e5 : c9               	ret
                        
39e6 : ddcb008e         NODESB:	res	1,(ix)
39ea : c9               	ret
                        
39eb : d5e5             POR10:	push	de,hl	;BC = BC * 10 
39ed : c5               	push	bc
39ee : c5               	push	bc
39ef : e1               	pop	hl
39f0 : d1               	pop	de
39f1 : 0603             	ld	b,3
39f3 : cb25             ROTA:	sla	l
39f5 : cb14             	rl	h
39f7 : 10fa             	djnz	ROTA
39f9 : dccc39           	call	c,BIT17
39fc : 19               	add	hl,de
39fd : dccc39           	call	c,BIT17
3a00 : 19               	add	hl,de
3a01 : dccc39           	call	c,BIT17
3a04 : e5               	push	hl
3a05 : c1               	pop	bc
3a06 : e1               	pop	hl
3a07 : d1               	pop	de
3a08 : c9               	ret
                        
                        
                        ; ====================================================
                        ; User interface subroutine
                        ; ====================================================
                        
                        ; Iit SCREEN 0 MODE 80 / 26.5
                        ; 
3a09 :                  INISCREEN:
3a09 : f3               	DI
3a0a : 3e02             	ld	a,2
3a0c : d399             	out	(#99),a
3a0e : 3e0f             	ld	a,15
3a10 : d399             	out	(#99),a
3a12 : db99             lla1:	in	a,(#99)
3a14 : e680             	and	#80
3a16 : 28fa             	jr	z,lla1
                        
AS80 Assembler for i8080 [1.31].                                     Page  106
---------------------------------- M14.ASM -----------------------------------

                        	
                        ;	ld	bc,SETI
3a18 : 21b244           	ld	hl,SETI
3a1b : cd4e3c           	call	LRVD
                        
3a1e : 3aee44           	ld 	a,(fntsour)
3a21 : fe01             	cp	1
3a23 : 2823             	jr	z,lla_nsf
                        	
                        ; ROM PGT => VRAM PGT (symbol tab)
                        ; [HL] - ROM PGT
                        ; [DE] - VRAM PGT
                        ; [BC] - lenght blok PGT
3a25 : 21bf1b           	ld	hl,#1BBF
3a28 : 110010           	ld	DE,#1000
3a2b : 010008           	ld	BC,2048
3a2e : 7b               	ld	a,e	; LB VRAM
3a2f : d399             	out	(#99),a
3a31 : 7a               	ld	a,d	; HB VRAM
3a32 : f640             	or	#40     ; set 6 bit
3a34 : d399             	out	(#99),a
3a36 :                  LDirmv:
                        
3a36 : d5               	push	de
3a37 : c5               	push	bc
3a38 : 3e00             	ld	a,#00 ; slot bios 0
                        	bios	RDSLT
3a3a : f7              >	rst	#30
3a3b : 00              >	db	0
3a3c : 0c00            >	dw	RDSLT
                        
3a3e : c1               	pop	bc
3a3f : d1               	pop	de
                        ;
3a40 : d398             	out	(#98),a
3a42 : 23               	inc	hl
3a43 : 0b               	dec	bc
3a44 : 78               	ld	a,b
3a45 : b1               	or	c
3a46 : 20ee             	jr	nz,LDirmv
3a48 :                  lla_nsf:
                        ; Clear VRAM CT (0)
                        ; [DE] - VRAM
                        ; [BC] - lengt
3a48 : 11000a           	ld	de,#A00
3a4b : 017002           	ld	bc,#270
3a4e : 7b               	ld	a,e
3a4f : d399             	out	(#99),a
3a51 : 7a               	ld	a,d
3a52 : f640             	or	#40
3a54 : d399             	out	(#99),a
3a56 : af               LDirCT:	xor	a
3a57 : d398             	out	(#98),a
3a59 : 0b               	dec	bc
3a5a : 78               	ld	a,b
3a5b : b1               	or	c
3a5c : 20f8             	jr	nz,LDirCT
                        
                        ; --- "space" (" ") #20 => VRAM PNT
                        ; [DE] = VRAM
                        ; [BC] = lenght
3a5e : 110000           	ld	de,0
AS80 Assembler for i8080 [1.31].                                     Page  107
---------------------------------- M14.ASM -----------------------------------

3a61 : 018007           	ld	bc,1920
3a64 : 7b               	ld	a,e
3a65 : d399             	out	(#99),a
3a67 : 7a               	ld	a,d
3a68 : f640             	or	#40
3a6a : d399             	out	(#99),a
3a6c : 3e20             LDiPNT:	ld	a,#20
3a6e : d398             	out	(#98),a
3a70 : 0b               	dec	bc
3a71 : 78               	ld	a,b
3a72 : b1               	or	c
3a73 : 20f7             	jr	nz,LDiPNT
                        
                        
                        ; set BIOS width 80
3a75 : 3e50             	ld	a,80
3a77 : 32b0f3           	ld	(#F3B0),a
                        
3a7a : fb               	ei
3a7b : c9               	ret
                        
                        
                        ; - Load text RAM => VRAM
                        ; [HL] RAM
                        ; [DE] VRAM
                        ; [A] - 3 bit 16k bank vram
                        ; [B] lenght block
                        ; [C] port #98
                         ;	ld	hl,tit
                         ;	ld	de,116
                         ;	ld	bc,#0898
3a7c :                  LDVR:
3a7c : d399             	out	(#99),a
3a7e : 3e8e             	ld	a,#80 + 14
3a80 : d399             	out	(#99),a
3a82 : 0e98             	ld	c,#98	
3a84 : 7b               	ld	a,e
3a85 : d399             	out	(#99),a
3a87 : 7a               	ld	a,d
3a88 : f640             	or	#40
3a8a : d399             	out	(#99),a
3a8c : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3a8e : c9               	ret
                        ;
                        ; input HL = File.ini output DE = "FILE    INI" (8+3)
3a8f :                  CFILENAME:
3a8f : 0e0b             	ld	c,8+3
3a91 : e5               	push	hl
3a92 : 6b               	ld	l,e
3a93 : 62               	ld	h,d
3a94 : 41               	ld	b,c
3a95 : 3620             Cfn1:	ld	(hl)," "
3a97 : 23               	inc	hl
3a98 : 10fb             	djnz	Cfn1
3a9a : 210800           	ld	hl,8
3a9d : 19               	add	hl,de
3a9e : 22f044           	ld	(point),hl
3aa1 : e1               	pop	hl
3aa2 : 7e               Cfn2:	ld	a,(hl)
3aa3 : b7               	or	a
3aa4 : c8               	ret	z
3aa5 : fe2e             	cp	"."
AS80 Assembler for i8080 [1.31].                                     Page  108
---------------------------------- M14.ASM -----------------------------------

3aa7 : 2009             	jr	nz,Cfn3
3aa9 : 23               	inc	hl
3aaa : ed5bf044         	ld	de,(point)
3aae : 0e03             	ld	c,3
3ab0 : 18f0             	jr	Cfn2
3ab2 : e6df             Cfn3	and	%11011111
3ab4 : eb               	ex	hl,de
3ab5 : 77               	ld	(hl),a
3ab6 : 23               	inc	hl
3ab7 : eb               	ex	hl,de	
3ab8 : 0d               	dec	c
3ab9 : 23               	inc	hl
3aba : 18e6             	jr	Cfn2
3abc : c9               	ret
3abd :                  LOADFONT:
                        ;
3abd : 210046           	ld	hl,FCB+1+8+3
3ac0 : 061c             	ld	b,28
3ac2 : af               	xor	a
3ac3 : 77               LFontt:	ld	(hl),a
3ac4 : 23               	inc	hl
3ac5 : 10fc             	djnz	LFontt
                        ;
3ac7 : 213231           	ld	hl,PA_FONT
3aca : 11f545           	ld	de,FCB+1
3acd : cd8f3a           	call	CFILENAME
3ad0 : 11f445           	ld	de,FCB
3ad3 : 0e0f             	ld	c,_FOPEN
3ad5 : cd0500           	call	DOS
3ad8 : b7               	or	a
3ad9 : 2807             	jr	z,LFont1
3adb : 3e02             	ld	a,2
3add : 32ef44           	ld	(fferr),a
3ae0 : 182c             	jr	LFont2
3ae2 : 110090           LFont1:	ld	de,#9000	; prebuffer PGT
3ae5 : 0e1a             	ld	c,_SDMA
3ae7 : cd0500           	call	DOS
3aea : 210100           	ld	hl,1	; set recod = 1 byte
3aed : 220246           	ld	(FCB+14),hl
3af0 : 11f445           	ld	de,FCB
3af3 : 210008           	ld	hl,2048	; size font tab  
3af6 : 0e27             	ld	c,_RBREAD
3af8 : cd0500           	call	DOS
3afb : 22f244           	ld	(ttvar),hl
3afe : 32ef44           	ld	(fferr),a
3b01 : 110008           	ld	de,2048
3b04 : af               	xor	a
3b05 : ed52             	sbc	hl,de
3b07 : 2805             	jr	z,LFont2
3b09 : 3e03             	ld	a,3
3b0b : 32ef44           	ld	(fferr),a
3b0e : 11f445           LFont2:	ld	de,FCB
3b11 : 0e10             	ld	c,_FCLOSE
3b13 : cd0500           	call	DOS		
3b16 : 3aef44           	ld	a,(fferr)
3b19 : b7               	or	a
3b1a : c0               	ret	nz
                        ; 	
3b1b : 210090           	ld	hl,#9000
3b1e : 010008           	ld	bc,2048
3b21 : f3               	di
3b22 : af               	xor	a
AS80 Assembler for i8080 [1.31].                                     Page  109
---------------------------------- M14.ASM -----------------------------------

3b23 : d399             	out	(#99),a
3b25 : 3e50             	ld	a,#10+#40
3b27 : d399             	out	(#99),a
3b29 : 7e               LFont3:	ld	a,(hl)
3b2a : d398             	out	(#98),a
3b2c : 23               	inc	hl
3b2d : 0b               	dec	bc
3b2e : 78               	ld	a,b
3b2f : b1               	or	c
3b30 : 20f7             	jr	nz,LFont3
3b32 : 3e01             	ld	a,1
3b34 : 32ee44           	ld	(fntsour),a	
3b37 : c9               	ret
                        ; Clear screeen buffer (global)
3b38 :                  CLS_G:
                        ;clear PNT
3b38 : 0e20             	ld	c," "
3b3a : 210080           	ld	hl,#8000
3b3d : 11c008           	ld	de,80*28
3b40 : 71               CLSg1	ld	(hl),c
3b41 : 23               	inc	hl
3b42 : 1b               	dec	de
3b43 : 7b               	ld	a,e
3b44 : b2               	or	d
3b45 : 20f9             	jr	nz,CLSg1
                        ;clear	CT
3b47 : 21008a           	ld	hl,#8A00
3b4a : 111801           	ld	de,10*28
3b4d : 71               CLSg2	ld	(hl),c
3b4e : 23               	inc	hl
3b4f : 1b               	dec	de
3b50 : 7b               	ld	a,e
3b51 : b2               	or	d
3b52 : 20f9             	jr	nz,CLSg2
3b54 : c9               	ret
                        ; Print text string for TW (text windows)
                        ; input	IX - WCB 
                        ; 	HL - start text string
                        ;
3b55 :                  PRINT_TW:
3b55 : 7e               	ld	a,(hl)
3b56 : b7               	or	a
3b57 : c8               	ret	z
3b58 : fe24             	cp	"$"
3b5a : c8               	ret	z
3b5b : e5               	push	hl
3b5c : cd5e3c           	call	OUTC_TW
3b5f : e1               	pop	hl
3b60 : 23               	inc	hl
3b61 : 18f2             	jr	PRINT_TW
                        
3b63 :                  CLOCK:
                        ; get data
3b63 : 0e2a             	ld	c,_GETDATE
3b65 : cd0500           	call	DOS
3b68 : 227d2d           	ld	(year),hl
3b6b : ed537f2d         	ld	(day),de
3b6f : 0e2c             	ld	c,_GETTIME
3b71 : cd0500           	call	DOS
3b74 : 22812d           	ld	(minute),hl
3b77 : 7a               	ld	a,d
3b78 : 32832d           	ld	(second),a
AS80 Assembler for i8080 [1.31].                                     Page  110
---------------------------------- M14.ASM -----------------------------------

                        ; convert -> ascii
                        ;    -------------- 2013.07.01 20:38| <- right top con
3b7b : fd217d2d         	ld	iy,year
3b7f : 213c80           	ld	hl,#8000+80-20
3b82 : 3620             	ld	(hl)," "
3b84 : 23               	inc	hl
3b85 : ed5b7d2d         	ld	de,(year)
3b89 : 013004           	ld	bc,#0400 + "0"
                        ;	ld	c,"0"
                        ;	ld	a,%10000000
3b8c : af               	xor	a
3b8d : cd8c37           	call	NUMTOASC
3b90 : 214180           	ld	hl,#8000+80-15
3b93 : 362e             	ld	(hl),"."
3b95 : 23               	inc	hl
3b96 : 013002           	ld	bc,#0200 + "0"
3b99 : 1600             	ld	d,0
3b9b : fd5e03           	ld	e,(iy+3)
3b9e : cd8c37           	call	NUMTOASC
3ba1 : 23               	inc	hl
3ba2 : 23               	inc	hl
3ba3 : 362e             	ld	(hl),"."
3ba5 : 23               	inc	hl
3ba6 : 013002           	ld	bc,#0200 + "0"
3ba9 : fd5e02           	ld	e,(iy+2)
3bac : cd8c37           	call	NUMTOASC
3baf : 23               	inc	hl
3bb0 : 23               	inc	hl
3bb1 : 3620             	ld	(hl)," "
3bb3 : 23               	inc	hl
3bb4 : 013002           	ld	bc,#0200 + "0"
3bb7 : fd5e05           	ld	e,(iy+5)
3bba : cd8c37           	call	NUMTOASC
3bbd : 23               	inc	hl
3bbe : 23               	inc	hl
3bbf : 363a             	ld	(hl),":"
3bc1 : 23               	inc	hl
3bc2 : 013002           	ld	bc,#0200 + "0"
3bc5 : fd5e04           	ld	e,(iy+4)
3bc8 : cd8c37           	call	NUMTOASC
3bcb : 23               	inc	hl
3bcc : 23               	inc	hl
3bcd : 363a             	ld	(hl),":"
3bcf : 23               	inc	hl
3bd0 : 013002           	ld	bc,#0200 + "0"
3bd3 : fd5e06           	ld	e,(iy+6)
3bd6 : cd8c37           	call	NUMTOASC
                        ; load to VRAM
3bd9 : 213c80           	ld	hl,#8000+80-20
3bdc : 0650             	ld	b,80
3bde : 0e98             	ld	c,#98
3be0 : f3               	di
3be1 : 3e3c             	ld	a,80-20
3be3 : d399             	out	(#99),a
3be5 : 3e40             	ld	a,#40
3be7 : d399             	out	(#99),a
3be9 : edb3             	otir
3beb : fb               	ei
3bec : c9               	ret
                        ; Load CT buffer to VDP RAM;
3bed :                  LOAD_SA:
3bed : 06f0             	ld	b,240 ;#F0
AS80 Assembler for i8080 [1.31].                                     Page  111
---------------------------------- M14.ASM -----------------------------------

3bef : 210a8a           	ld	hl,#8A0A
3bf2 : f3               	di
3bf3 : 3e0a             	ld	a,#0A
3bf5 : d399             	out	(#99),a
3bf7 : 3e4a             	ld	a,#0A+#40
3bf9 : d399             	out	(#99),a
3bfb : 0e98             	ld	c,#98
3bfd : edb3             	otir
3bff : c9               	ret
                        
                        ; Load PNT buffer to VDP RAM
                        ;
3c00 :                  LOAD_S:
                        ; 80*27 = 2080  #0826
3c00 : f3               	di
3c01 : 3e02             	ld	a,2
3c03 : d399             	out	(#99),a
3c05 : 3e0f             	ld	a,15
3c07 : d399             	out	(#99),a
                        
3c09 : 210080           	ld	hl,fulls
3c0c : 110000           	ld	de,0
3c0f : af               	xor	a
3c10 : 0600             	ld	b,0
3c12 : d399             	out	(#99),a
3c14 : 3e8e             	ld	a,#80 + 14
3c16 : d399             	out	(#99),a
3c18 : 0e98             	ld	c,#98	
3c1a : 7b               	ld	a,e
3c1b : d399             	out	(#99),a
3c1d : 7a               	ld	a,d
3c1e : f640             	or	#40
3c20 : d399             	out	(#99),a
3c22 : db99             lds1:	in	a,(#99)
3c24 : e680             	and	#80
3c26 : 28fa             	jr	z,lds1
3c28 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
                        ;256  #100
3c2a : db99             lds2:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds2
3c2c : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
                        ;512  #200
3c2e : db99             lds3:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds3
3c30 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3c32 : db99             lds4:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds4
3c34 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
                        ;1024 #400
3c36 : db99             lds5:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds5
3c38 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3c3a : db99             lds6:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds6
3c3c : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3c3e : db99             lds7:	in	a,(#99)
                        ;	and	#80
AS80 Assembler for i8080 [1.31].                                     Page  112
---------------------------------- M14.ASM -----------------------------------

                        ;	jr	z,lds7
3c40 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3c42 : db99             lds8:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds8
                        
3c44 : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
                        ;2048 #800
3c46 : db99             lds9:	in	a,(#99)
                        ;	and	#80
                        ;	jr	z,lds9
                         
                        ;#800 
3c48 : 0670             	ld	b,#70
3c4a : edb3             	otir 	; out[BC] <- [HL], inc hl, dec b until b=0
3c4c : fb                	ei
3c4d : c9               	ret
3c4e :                  LRVD:	
3c4e : 46               	ld	b,(hl)
3c4f : 23               	inc	hl
3c50 : 7e               lrvd1	ld	a,(hl)
3c51 : 23               	inc	hl
3c52 : d399             	out	(#99),a
3c54 : 10fa             	djnz	lrvd1
                        	
3c56 : c9               	ret
                        
                        ;
                        ; locate cursor x,y [0..maxH, 0..maxY]
                        ;	e - horisontal d - vertical 
                        ;	ix - WCB
3c57 : dd7306           POS_TW:	ld	[ix+6],e
3c5a : dd7207           	ld	[ix+7],d
3c5d : c9               	ret
                        ;
                        ; Out char to position cursor win
                        ; 	ix - WCB
                        ;
                        ;
3c5e :                  OUTC_TW:
                        ; special simbol
3c5e : fe0d             	cp	#0D
3c60 : ca243d           	jp	z,otc0D
3c63 : fe0a             	cp	#0A
3c65 : ca413d           	jp	z,otc0A
3c68 : fe08             	cp	#08
3c6a : ca643d           	jp	z,otc08
3c6d : fe09             	cp	#09
3c6f : ca563d           	jp	z,otc09
                        ; regular symbol
                        ;
                        ; test corret position cursor
3c72 : 08               	ex	af,af'
                        ;	ld	b,a
3c73 : dd5604           	ld	d,(ix+4)  ;h size
3c76 : dd7e06           	ld	a,(ix+6)  ;h pos
3c79 : ba               	cp	d
3c7a : fa893c           	jp	m,otcw_5  ;x posit <= max x
3c7d : dd7e08           	ld	a,(ix+8)
3c80 : b7               	or	a
3c81 : c8               	ret	z	; drop out string
                        ; next string
AS80 Assembler for i8080 [1.31].                                     Page  113
---------------------------------- M14.ASM -----------------------------------

3c82 : af               	xor	a 
3c83 : dd7706           	ld	(ix+6),a
3c86 : dd3407           	inc	(ix+7)  ; y++
3c89 :                  otcw_5
                        ; test correct position vertical
3c89 : dd7e07           	ld	a,(ix+7)  ; v pos
3c8c : dd4e05           	ld	c,(ix+5)  ; v max
3c8f : b9               	cp	c
3c90 : f2963c           	jp	p,otcw_4 ; y posit > max y
3c93 : c3a03c           	jp	otcw_1	
3c96 :                  otcw_4
3c96 : dd7e09           	ld	a,(ix+9)
3c99 : b7               	or	a
3c9a : 2001             	jr	nz,otcw_0
                        ;	dec	(ix+9)
3c9c : c9               	ret		; drop out win
                            
3c9d : cde93c           otcw_0:	call	SCRLU_TW
                        
                        
                        ;
3ca0 :                  otcw_1:			; output symbol
                        ;	ld	l,(IX+2)        ;
                        ;	ld	h,(IX+3)        ; begin w
                        ;	ld	c,(ix+7)	; y posit
                        ;	ld	de,80
                        ;	inc	c
                        ;otcw_3:	dec	c
                        ;	jp	z,otcw_2
                        ;	add	hl,de
                        ;	jr	otcw_3	
                        
                        ;otcw_2:	ld	d,0
                        ;	ld	e,(ix+6)	; x posit
                        ;
3ca0 : 21f844           	ld	hl,TMUV         ; tabl mult of 80
3ca3 : 0600             	ld	b,0
3ca5 : dd4e07           	ld	c,(ix+7)	; y posit
3ca8 : cb01             	rlc	c		; *2
3caa : 09               	add	hl,bc
3cab : 5e               	ld	e,(hl)
3cac : 23               	inc	hl
3cad : 56               	ld	d,(hl)          ; de=  y * 80
3cae : dd6e02           	ld	l,(ix+2)        ; begin w
3cb1 : dd6603           	ld	h,(ix+3)        ;
3cb4 : 19               	add	hl,de
3cb5 : dd4e06           	ld	c,(ix+6)	; x posit
3cb8 : 09               	add	hl,bc
3cb9 : cbfc             	set	7,h
3cbb : 08               	ex	af,af'
3cbc : 77                       ld	(hl),a
3cbd : 47               	ld	b,a
                        ;	increment posit cursor
3cbe : dd3406           	inc	(ix+6)
3cc1 : dd7e0b                   ld	a,(ix+11)
3cc4 : b7               	or	a
3cc5 : c8               	ret	z
3cc6 : f3               	di
3cc7 : dd7e00           	ld	a,(IX)
3cca : d399             	out	(#99),a
3ccc : 3ead             	ld	a,#80 + 45
3cce : d399             	out	(#99),a
AS80 Assembler for i8080 [1.31].                                     Page  114
---------------------------------- M14.ASM -----------------------------------

3cd0 : dd7e01           	ld	a,(IX+1)
3cd3 : d399             	out	(#99),a
3cd5 : 3e8e             	ld	a,#80 + 14
3cd7 : d399             	out	(#99),a
3cd9 : 7d               	ld	a,l
3cda : d399             	out	(#99),a
3cdc : 7c               	ld	a,h
3cdd : e67f             	and	#7F
3cdf : f640             	or	#40
3ce1 : d399             	out	(#99),a
                        ;	ex	af,af'
3ce3 : 78               	ld	a,b
3ce4 : d398             	out	(#98),a
3ce6 : 77               	ld	(hl),a 
3ce7 : fb               	ei
3ce8 : c9               	ret
                        ; scroll up text windows
                        ; clear end string
                        ; ix - WCB
                        
3ce9 :                  SCRLU_TW:
3ce9 : dd6603                   ld	h,(ix+3)
3cec : dd6e02           	ld	l,(ix+2)
3cef : 0600             	ld	b,0
                        ;	ld	c,(ix+4)
3cf1 : 0e50             	ld	c,80
3cf3 : dd7e05           	ld	a,(ix+5)
3cf6 : fe02             scrlu1:	cp	2
3cf8 : fa0e3d           	jp	m,srldu_1		; end scroll
3cfb : 54               	ld	d,h
3cfc : 5d               	ld	e,l
3cfd : 0e50             	ld	c,80
3cff : 09               	add	hl,bc
3d00 : dd4e04           	ld	c,(ix+4)
3d03 : e5               	push	hl
3d04 : cbfc             	set	7,h
3d06 : cbfa             	set	7,d
3d08 : edb0             	ldir
3d0a : e1               	pop	hl
3d0b : 3d               	dec	a
3d0c : 18e8             	jr	scrlu1
                        
3d0e :                  srldu_1:	; clear ending string
                        
3d0e : dd4604           	ld	b,(IX+4)
3d11 : 3e20             	ld	a," "	;spase
3d13 : cbfc             	set	7,h	
3d15 :                  srldu_2:
3d15 : 77               	ld	(hl),a
3d16 : 23               	inc	hl
3d17 : 10fc             	djnz	srldu_2
                        
3d19 : dd7e0b           	ld	a,(ix+11)
3d1c : b7               	or	a
3d1d : c4003c           	call	nz,LOAD_S
                        
3d20 : dd3507           	dec	(ix+7)
                        
3d23 : c9               	ret	
                        
3d24 : dd7e14           otc0D:  ld	a,[ix+20]
3d27 : b7               	or	a
AS80 Assembler for i8080 [1.31].                                     Page  115
---------------------------------- M14.ASM -----------------------------------

3d28 : 2012             	jr	nz,otc0D1
3d2a : dd7e06           otc0D0:	ld	a,[ix+6]
3d2d : dd4e04           	ld	c,[ix+4]
3d30 : b9               	cp	c
3d31 : f23c3d           	jp	p,otc0D1
3d34 : 3e20             	ld	a," "
3d36 : 08               	ex	af,af'
3d37 : cda03c           	call	otcw_1
3d3a : 18ee             	jr	otc0D0
3d3c : af               otc0D1:	xor	a
3d3d : dd7706           	ld	[ix+6],a	; x = 0
3d40 : c9               	ret
                        
3d41 : dd7e07           otc0A:  ld	a,[ix+7]	; y_cur
3d44 : dd4605           	ld	b,[ix+5]	; y_size
3d47 : dd3407           	inc	[ix+7]               ; y = y+1
3d4a : b8               	cp	b
3d4b : d8               	ret	c
3d4c : dd7e09           	ld	a,(ix+9)
3d4f : b7               	or	a
3d50 : 2097             	jr	nz,SCRLU_TW
3d52 : dd3507           	dec	[ix+7]
3d55 : c9               	ret
                        
3d56 : 3e20             otc09:  ld	a," "
3d58 : 08               	ex	af,af'
3d59 : cda03c           	call	otcw_1
3d5c : dd7e06           	ld	a,(ix+6)
3d5f : e607             	and	7
3d61 : 20f3             	jr	nz,otc09
3d63 : c9               	ret
3d64 : dd7e06           otc08:	ld	a,[ix+6]
3d67 : 3d               	dec	a		; x = x-1
3d68 : fa6f3d           	jp	m,otc08_1       ; < 0
3d6b : dd7706           	ld	[ix+6],a
3d6e : c9               	ret
3d6f : dd7e08           otc08_1: ld	a,[ix+8]
3d72 : b7               	or	a
3d73 : c8               	ret	z
3d74 : dd7e04           	ld	a,[ix+4]
3d77 : 3d               	dec	a     	
3d78 : dd7706           	ld	[ix+6],a	; max h position
3d7b : dd7e07           	ld	a,[ix+7]
3d7e : 3d               	dec	a      		; y = y-1
3d7f : fa863d           	jp	m,otc08_2	; < 0
3d82 : dd7707           	ld	[ix+7],a
3d85 : c9               	ret
3d86 : dd7e09           otc08_2: ld	a,[ix+9]
3d89 : b7               	or	a
3d8a : c8               	ret	z 
                        ;	Scroll down text windows
                        ;	clear 1st string
                        ;	ix - WCB
3d8b :                  SCRLD_TW:
3d8b : dd7e05           	ld	a,[ix+5]      ; v max
3d8e : fe02             	cp	2
3d90 : fac03d           	jp	m,srldw_1     ; v max < 2 - end scroll
                        ;
3d93 : 3d               	dec	a
3d94 : 015000           	ld	bc,80
3d97 : dd6603           	ld	h,(ix+3)
3d9a : dd6e02           	ld	l,(ix+2)
AS80 Assembler for i8080 [1.31].                                     Page  116
---------------------------------- M14.ASM -----------------------------------

3d9d :                  srldw1:
3d9d : 3d               	dec	a
3d9e : 2803             	jr	z,srldw0	
3da0 : 09               	add	hl,bc
3da1 : 18fa             	jr	srldw1
3da3 :                  srldw0:
                        ; hl - last-1 string
3da3 : dd7e05           	ld	a,[ix+5]
3da6 : 3d               	dec	a
3da7 : 54               	ld	d,h
3da8 : 5d               	ld	e,l
3da9 : 09               	add	hl,bc
3daa : eb               	ex	de,hl
3dab : dd4e04           srldw2:	ld	c,(ix+4)
3dae : e5               	push	hl
3daf : cbfc             	set	7,h
3db1 : cbfa             	set	7,d
3db3 : edb0             	ldir	      ; 1 str transfer
3db5 : e1               	pop	hl
3db6 : 54               	ld	d,h
3db7 : 5d               	ld	e,l
3db8 : 0e50             	ld	c,80
3dba : b7               	or	a
3dbb : ed42             	sbc	hl,bc
3dbd : 3d               	dec	a
3dbe : 20eb             	jr	nz,srldw2
                        ;
3dc0 :                  srldw_1:	; clear 1st string
3dc0 : dd6603           	ld	h,(ix+3)
3dc3 : dd6e02           	ld	l,(ix+2)
3dc6 : dd4604           	ld	b,(IX+4)
3dc9 : 3e20             	ld	a," "	;spase
3dcb : cbfc             	set	7,h	
3dcd : 77               srlw_2:	ld	(hl),a
3dce : 23               	inc	hl
3dcf : 10fc             	djnz	srlw_2
                        ;	jr	LOAD_S
                        ;	ret
3dd1 :                  CURSOR:
                        ; in hl - absolute byte of screen
3dd1 : eb               	ex	hl,de
3dd2 : cd0d3e           	call	CURSOFF
3dd5 : eb               	ex	hl,de
3dd6 : af               	xor	a
3dd7 : cb1c             	rr	h
3dd9 : cb1d             	rr	l
3ddb : 1f               	rra
3ddc : cb1c             	rr	h
3dde : cb1d             	rr	l
3de0 : 1f               	rra
3de1 : cb1c             	rr	h
3de3 : cb1d             	rr	l
3de5 : 1f               	rra
                        
3de6 : 1f               	rra
3de7 : 1f               	rra
3de8 : 1f               	rra
3de9 : 1f               	rra
3dea : 1f               	rra
                        	
3deb : 11000a           	ld	de,#0A00
3dee : 19               	add	hl,de
AS80 Assembler for i8080 [1.31].                                     Page  117
---------------------------------- M14.ASM -----------------------------------

3def : 22b888           	ld	(oldcur),hl
3df2 : 47               	ld	b,a
3df3 : f3               	di
3df4 : 7d               	ld	a,l
3df5 : d399             	out	(#99),a
3df7 : 7c               	ld	a,h
3df8 : e67f             	and	#7F
3dfa : f640             	or	#40
3dfc : d399             	out	(#99),a
3dfe : cbfc             	set	7,h
3e00 : 04               	inc	b
3e01 : af               	xor	a
3e02 : 37               	scf
3e03 : 1f               cur1:	rra
3e04 : 10fd             	djnz	cur1
3e06 : 32ba88           	ld	(oldcur+2),a		
3e09 : b6               	or	(hl)
3e0a : d398             	out	(#98),a
3e0c : c9               	ret
                        	
3e0d :                  CURSOFF:
                        ; cursor off 
3e0d : 2ab888           	ld	hl,(oldcur)	; absolute coordinate CT
                        ;	ld	a,(oldcur+2)	; bit mask
3e10 : f3               	di
3e11 : 7d               	ld	a,l
3e12 : d399             	out	(#99),a
3e14 : 7c               	ld	a,h
3e15 : e67f             	and	#7F
3e17 : f640             	or	#40
3e19 : d399             	out	(#99),a
3e1b : cbfc             	set	7,h
3e1d : 3aba88           	ld	a,(oldcur+2)
3e20 : 2f               	cpl
3e21 : a6               	and	(hl)
3e22 : d398             	out	(#98),a
3e24 : c9               	ret
                        ; 
                        ;
3e25 :                  OUTSTRW:
                        ; out string of screen windows WCB - ix
                        ; ix+22 - start out
3e25 : dd6e16           	ld	l,(ix+22) ; start out from buffer
3e28 : dd6617           	ld	h,(ix+23)
3e2b : dd5e10           	ld	e,(ix+16) ; end buffer
3e2e : dd5611           	ld	d,(ix+17)
                        ;
3e31 : d9               	exx
3e32 : dd6e02           	ld	l,(ix+2)  ; start screen
3e35 : dd6603           	ld	h,(ix+3)  ; 
3e38 : cbfc             	set	7,h
3e3a : dd4604           	ld	b,(ix+4)  ; H size
3e3d : d9               	exx
                        ;
3e3e : af               ostrw3:	xor	a
3e3f : 7e               	ld	a,(hl)
3e40 : ed52             	sbc	hl,de       ; st - end
3e42 : 3802             	jr	c,ostrw1
3e44 : 3e20             	ld	a," "     ; out buff - out " "
3e46 : 19               ostrw1:	add	hl,de
3e47 : 23               	inc	hl
                        ;
AS80 Assembler for i8080 [1.31].                                     Page  118
---------------------------------- M14.ASM -----------------------------------

3e48 : d9               	exx
3e49 : 77               	ld	(hl),a
3e4a : 23               	inc	hl
3e4b : 05               	dec	b
3e4c : d9               	exx
                        ;
3e4d : 20ef             	jr	nz,ostrw3
                        	
3e4f : dd6e02           	ld	l,(ix+2)
3e52 : dd6603           	ld	h,(ix+3)
3e55 : dd4604           	ld	b,(ix+4)
3e58 : f3               	di
3e59 : 7d               	ld	a,l
3e5a : d399             	out	(#99),a
3e5c : 7c               	ld	a,h
3e5d : f640             	or	#40
3e5f : d399             	out	(#99),a
3e61 : cbfc             	set	7,h
3e63 : 0e98             	ld	c,#98
3e65 : edb3             	otir
                        
3e67 : c9               	ret	
                        ;	Init Text Windows
                        ;	CLS windows  
                        ;	IX = WCB
                        
3e68 :                  CLS_TW:
3e68 : dd6603           	ld	h,(ix+3)
3e6b : dd6e02           	ld	l,(ix+2)
3e6e : 110080           	ld	de,fulls
3e71 : 19               	add	hl,de
3e72 : dd5605           	ld	d,(ix+5)
3e75 : 3e20             	ld	a," "	;spase
                        
3e77 :                  CLSTW2:
                                	
3e77 : dd4604           	ld	b,(IX+4)
3e7a : e5               	push 	hl
                        	
3e7b : 77               CLSTW1:	ld	(hl),a
3e7c : 23               	inc	hl
3e7d : 10fc             	djnz	CLSTW1
3e7f : e1               	pop	hl
3e80 : 15               	dec	d
3e81 : ca893e           	jp	z,CLSTW3
3e84 : 0e50             	ld	c,80
3e86 : 09               	add	hl,bc
3e87 : 18ee             	jr	CLSTW2
3e89 : dd7e0b           CLSTW3:	ld	a,(ix+11)
3e8c : b7               	or	a
3e8d : c8               	ret	z
3e8e : c3003c           	jp	LOAD_S	
                        
                        ; Clear Keyboard buffer 
3e91 :                  CLKB:
3e91 : 0e0b             	ld      c,_CONST
3e93 : cd0500                   call    DOS
3e96 : b7                       or      a
3e97 : c8                       ret	z
3e98 : 0e07                     ld      c,_INNO
3e9a : cd0500                   call    DOS
3e9d : c3913e           	jp	CLKB
AS80 Assembler for i8080 [1.31].                                     Page  119
---------------------------------- M14.ASM -----------------------------------

                        
                        ; Draw segment record table
3ea0 :                  DrSegT:
3ea0 : 3a7c2c           	ld	a,(P2_sys)
3ea3 : cdc62b           	call	PUT_P2
3ea6 : dd218888         	ld	ix,sWCB1
3eaa : cd683e           	call	CLS_TW
3ead : af               	xor	a
3eae : 47               	ld	b,a
3eaf : dd7706           	ld	(ix+6),a ; cursor 0,0
3eb2 : dd7707           	ld	(ix+7),a 
3eb5 : dd7e16           	ld	a,(ix+22) ;shift
                        ;	ld	(ix+23),a ;rs
3eb8 : 57               	ld	d,a
3eb9 : 17               	rla
3eba : 4f               	ld	c,a
3ebb : 21832c           	ld	hl,MAPTAB
3ebe : 09               	add	hl,bc
3ebf : 7e               DrS1	ld	a,(hl)
3ec0 : b7               	or	a
3ec1 : 2009             	jr	nz,DrS2	; need out
3ec3 : 23               	inc	hl ; next record 
3ec4 : 23               DrS3:	inc	hl
3ec5 : 14               	inc	d
3ec6 : 3e4e             	ld	a,78
3ec8 : ba               	cp	d	;out table
3ec9 : 30f4             	jr	nc,DrS1
3ecb : c9               	ret	
3ecc : 23               DrS2:	inc	hl
3ecd : 7e               	ld	a,(hl)
3ece : d9               	exx	
3ecf : cdc62b           	call	PUT_P2	
3ed2 : 210080           	ld	hl,#8000
3ed5 : 118c33           	ld	de,BUFFER
3ed8 : 012200           	ld	bc,34
3edb : edb0             	ldir
3edd : eb               	ex	hl,de
3ede : 360d             	ld	(hl),13
3ee0 : 23               	inc	hl	
3ee1 : 360a             	ld	(hl),10
3ee3 : 23               	inc	hl
3ee4 : 3624             	ld	(hl),"$"
3ee6 : 3a7c2c           	ld	a,(P2_sys)
3ee9 : cdc62b           	call	PUT_P2
3eec : 218c33           	ld	hl,BUFFER
3eef : cd553b           	call	PRINT_TW
3ef2 : d9               	exx
3ef3 : 18cf             	jr	DrS3
                        ; Buffer segment active records table out to screen
3ef5 :                  BOSegT:
3ef5 : dd218888         	ld	ix,sWCB1
3ef9 : cd683e           	call	CLS_TW
3efc : dd7e10           	ld	a,(ix+16)
3eff : b7               	or	a
3f00 : c8               	ret	z		; not record
3f01 : 113700           	ld	de,50+4+1
3f04 : 210090           	ld	hl,#9000
3f07 : dd7e16           	ld	a,(ix+22)
3f0a : 3c               	inc	a
3f0b : 3d               BOS2:	dec	a
3f0c : 2803             	jr	z,BOS1
3f0e : 19               	add	hl,de
AS80 Assembler for i8080 [1.31].                                     Page  120
---------------------------------- M14.ASM -----------------------------------

3f0f : 18fa             	jr	BOS2
3f11 : dd7e10           BOS1:	ld	a,(ix+16)
3f14 : dd9616           	sub	(ix+22)
3f17 : ddbe05           	cp	(ix+5)
3f1a : 3803             	jr	c,BOS4
3f1c : dd7e05           	ld	a,(ix+5)
3f1f : 23               BOS4:	inc	hl
3f20 : eb               	ex	hl,de
3f21 : 210080           	ld	hl,#8000
3f24 : ed4b8a88         	ld	bc,(sWCB1+2)
3f28 : 09               	add	hl,bc
3f29 : eb               	ex	hl,de
3f2a : 012200           BOS3:	ld	bc,34
3f2d : edb0             	ldir
3f2f : 011500           	ld	bc,55-34
3f32 : 09               	add	hl,bc
3f33 : eb               	ex	hl,de
3f34 : 012e00           	ld	bc,80-34
3f37 : 09               	add	hl,bc
3f38 : eb               	ex	hl,de
3f39 : 3d               	dec	a
3f3a : 20ee             	jr	nz,BOS3
3f3c : c9               	ret
                        ; Bufferisation segment record table
3f3d :                  BFSegT:
3f3d : 3a7c2c           	ld	a,(P2_sys)
3f40 : cdc62b           	call	PUT_P2
3f43 : dd218888         	ld	ix,sWCB1
3f47 : 110090           	ld	de,#9000
3f4a : dd361000         	ld	(ix+16),0	;b_end
3f4e : dd361100         	ld	(ix+17),0
3f52 : 21832c           	ld	hl,MAPTAB
3f55 : 7e               BFS1	ld	a,(hl)
3f56 : b7               	or	a
3f57 : 202f             	jr	nz,BFS2			; not empry record
3f59 : 23               	inc	hl 			; next record 
3f5a : 23               BFS3:	inc	hl
3f5b : dd3411           	inc	(ix+17)			; counter record
3f5e : 3e4e             	ld	a,78
3f60 : ddbe11           	cp	(ix+17)	;out table
3f63 : 30f0             	jr	nc,BFS1
                        ;	ret				; finish scan records
3f65 : dd7e10           	ld	a,(ix+16)		; counter active records
3f68 : 3d               	dec	a
3f69 : dd9605           	sub	(ix+5)			; v- size
3f6c : 3006             	jr	nc,BFS4			
3f6e : dd361600         	ld	(ix+22),0		; no shift 
3f72 : 1809             	jr	BFS5
3f74 : 3c               BFS4:	inc	a
3f75 : ddbe16           	cp	(ix+22)
3f78 : 3003             	jr	nc,BFS5			; Shift <
3f7a : dd7716           	ld	(ix+22),a		
3f7d :                  BFS5:
3f7d : dd7e10           	ld	a,(ix+16)		
3f80 : ddbe0a           	cp	(ix+10)			; curs att > couter active ?
3f83 : d0               	ret	nc
3f84 : dd770a           	ld	(ix+10),a
3f87 : c9               	ret
                        
3f88 : 23               BFS2:	inc	hl
3f89 : 7e               	ld	a,(hl)
3f8a : d9               	exx	
AS80 Assembler for i8080 [1.31].                                     Page  121
---------------------------------- M14.ASM -----------------------------------

3f8b : 218c33           	ld	hl,BUFFER
3f8e : dd4611           	ld	b,(ix+17)
3f91 : 70               	ld	(hl),b
                        ;	ld	(hl),(ix+17)
3f92 : cdc62b           	call	PUT_P2
3f95 : 23               	inc	hl
3f96 : eb               	ex	hl,de
3f97 : 210080           	ld	hl,#8000
3f9a : 013600           	ld	bc,50+4
3f9d : edb0             	ldir
3f9f : 3a7c2c           	ld	a,(P2_sys)
3fa2 : cdc62b           	call	PUT_P2
3fa5 : d9               	exx
3fa6 : e5               	push	hl
3fa7 : 218c33           	ld	hl,BUFFER
3faa : 013700           	ld	bc,50+4+1
3fad : edb0             	ldir
3faf : e1               	pop	hl
3fb0 : dd3410           	inc	(ix+16)
3fb3 : 18a5             	jr	BFS3
                        
                        
                        ; Set segment information attribute
3fb5 : 21832c           SSIA:	ld	hl,MAPTAB
3fb8 : 11232d           	ld	de,SSIAT
3fbb : 0650             	ld	b,80
3fbd : 7e               SSIA1:	ld	a,(hl)
                        ;	ex	hl,de
3fbe : fe80             	cp	%10000000	; 7-bit = 0 -> exist new data on record
3fc0 : ce00             	adc	a,0
3fc2 : f680             	or	%10000000
3fc4 : e6bf             	and	%10111111
3fc6 : 12               	ld	(de),a
                        ;	ex	hl,de
3fc7 : 23               	inc	hl
3fc8 : 23               	inc	hl
3fc9 : 13               	inc	de
3fca : 10f1             	djnz	SSIA1
                        
                        ;	ld	de,SSIAT+80
3fcc : 6b               	ld	l,e
3fcd : 62               	ld	h,d
3fce : 060a             	ld	b,10
3fd0 : af               	xor	a
3fd1 : 77               SSIA2:	ld	(hl),a
3fd2 : 23               	inc	hl
3fd3 : 10fc             	djnz	SSIA2
                        
3fd5 : 3abb88           	ld	a,(segs)
3fd8 : 4f               	ld	c,a
3fd9 : af               	xor	a
3fda : 47               	ld	b,a
3fdb : cb19             	rr	c
3fdd : 1f               	rra
3fde : cb19             	rr	c
3fe0 : 1f               	rra
3fe1 : cb19             	rr	c
3fe3 : 1f               	rra
3fe4 : 1f               	rra
3fe5 : 1f               	rra
3fe6 : 1f               	rra
3fe7 : 1f               	rra
AS80 Assembler for i8080 [1.31].                                     Page  122
---------------------------------- M14.ASM -----------------------------------

3fe8 : 1f               	rra
3fe9 : eb               	ex	hl,de
3fea : 09               	add	hl,bc	
3feb : 47               	ld	b,a
3fec : 04               	inc	b
3fed : af               	xor	a
3fee : 37               	scf
3fef : 1f               SSIA3:	rra
3ff0 : 10fd             	djnz	SSIA3
3ff2 : 77               	ld	(hl),a	
3ff3 : c9               	ret	
                        
                        ; Load segment information to VRAM
3ff4 :                  L_SIA:	
3ff4 : f3               	di
3ff5 : 21232d           	ld	hl,SSIAT	
3ff8 : 3e20             	ld	a,#20
3ffa : d399             	out	(#99),a
3ffc : 3e48             	ld	a,#08+#40
3ffe : d399             	out	(#99),a
4000 : 0e98             	ld	c,#98
4002 : 0650             	ld	b,80
4004 : edb3             	otir
4006 : 3e04             	ld	a,#04
4008 : d399             	out	(#99),a
400a : 3e4b             	ld	a,#0B+#40
400c : d399             	out	(#99),a
                        ;	ld	c,#98
400e : 060a             	ld	b,10
4010 : edb3             	otir
4012 : fb               	ei
4013 : c9               	ret
                        ; Clear atribute for cannel and nicks area 1-25 string
4014 :                  CLAT_C_N:
4014 : 210a8a           	ld	hl,#8A00 + 10	; (80/8)
4017 : 06f0             	ld	b,10*24
4019 : af               	xor	a
401a : 77               clcn1:	ld	(hl),a
401b : 23               	inc	hl
401c : 10fc             	djnz	clcn1
401e : c9               	ret
                        ; Set atribute for nicks 
                        ; ix+10 - select nick from UP string window to Down, i
401f :                  SETAT_N:
401f : dd7e0a           	ld	a,(ix+10)	; 
4022 : b7               	or	a
4023 : c8               	ret	z
4024 : fe19             	cp	25
4026 : d0               	ret	nc
4027 : 47               	ld	b,a
4028 : 21088a           	ld	hl,#8A00 + 8
402b : 110a00           	ld	de,10
402e : 19               statn1:	add	hl,de
402f : 10fd             	djnz	statn1	
4031 : 367f             	ld	(hl),%01111111
4033 : 23               	inc	hl
4034 : 36ff             	ld	(hl),%11111111
4036 : c9               	ret
                        ; Set atribute for name segment 
                        ; ix+10 - select name from UP string window to Down, i
4037 :                  SETAT_S:
4037 : dd7e0a           	ld	a,(ix+10)	; 
AS80 Assembler for i8080 [1.31].                                     Page  123
---------------------------------- M14.ASM -----------------------------------

403a : b7               	or	a
403b : c8               	ret	z
403c : fe19             	cp	25
403e : d0               	ret	nc
403f : 47               	ld	b,a
4040 : 21058a           	ld	hl,#8A00 + 5
4043 : 110a00           	ld	de,10
4046 : 19               stats1:	add	hl,de
4047 : 10fd             	djnz	stats1	
4049 : 3603             	ld	(hl),%00000011
404b : 3eff             	ld	a,#FF
404d : 23               	inc	hl
404e : 77               	ld	(hl),a
404f : 23               	inc	hl
4050 : 77               	ld	(hl),a
4051 : 23               	inc	hl
4052 : 77               	ld	(hl),a
4053 : 23               	inc	hl
4054 : 77               	ld	(hl),a
4055 : c9               	ret
                        
                        ;
                        ; print part buffer of chanel 
                        ; last srtike - cur - end str win
                        ; WCB channel windows - sWCB0 (#8870)
4056 :                  PPBC:   
4056 : dd217088         	ld	ix,sWCB0
405a : cd683e           	call	CLS_TW
                        ;	ld	l,(ix+18)	; buffer curs
                        ;	ld	h,(ix+19)
405d : 2a8288           	ld	hl,(sWCB0+18)
4060 : 22ea44           	ld	(var3),hl	; save old buff curs 
4063 : 2b               	dec	hl
4064 : 2b               	dec	hl      
4065 : dd5605           	ld	d,(ix+5)	; vertical size ( nm str win ); search st
4068 : 01b80b           	ld	bc,3000
406b : 3e0a             ppb0:	ld	a,#0A
406d : edb9             	cpdr	; CP A,(HL) HL=HL-1 BC=BC-1 repeat until CP A,(H
406f : c26b40           	jp	nz,ppb0
4072 : dd7e0c           	ld	a,(ix+12)	;buf
                        ;	ld	a,(sWCB0+12)
4075 : 95               	sub	l
4076 : dd7e0d           	ld	a,(ix+13)
                        ;	ld	a,(sWCB0+13)
4079 : 9c               	sbc	a,h	
407a : 3006             	jr	nc,ppb3 
407c : 15               	dec	d
407d : 20ec             	jr	nz,ppb0	; next string..
407f : 23               	inc	hl
                        ;	inc	hl
4080 : 1803             	jr	ppb4
4082 :                  ppb3:	
                        ;	ld	l,(ix+12)	;start buufer
                        ;	ld	h,(ix+13)
4082 : 2a7c88           	ld	hl,(sWCB0+12)	
4085 :                  ppb4:
4085 : 7e               ppb2:	ld	a,(hl)
4086 : e5               	push	hl
4087 : cd5e3c           	call	OUTC_TW
408a : e1               	pop	hl
408b : 23               	inc	hl
408c : ed5bea44         	ld	de,(var3)
AS80 Assembler for i8080 [1.31].                                     Page  124
---------------------------------- M14.ASM -----------------------------------

4090 : 7d               	ld	a,l
4091 : 93               	sub	e
4092 : 7c               	ld	a,h
4093 : 9a               	sbc	a,d
4094 : 20ef             	jr	nz,ppb2
                        
4096 : cd003c           	call	LOAD_S
4099 : fb               	ei
409a : c9               	ret	
409b :                  APP_PA:
409b : 213f31           	ld	hl,PA_IC
409e : cd8439           	call	EXTNUM16
40a1 : 79               	ld	a,c
40a2 : cb17             	rl	a
40a4 : cb17             	rl	a
40a6 : cb17             	rl	a
40a8 : cb17             	rl	a
40aa : e6f0             	and	#F0
40ac : 4f               	ld	c,a
40ad : 3ac344           	ld	a,(SETIc)
40b0 : e60f             	and	#0F
40b2 : b1               	or	c
40b3 : 32c344           	ld	(SETIc),a
40b6 : 214431           	ld	hl,PA_PC
40b9 : cd9039           	call	EXTNUM
40bc : 79               	ld	a,c
40bd : e60f             	and	#0F
40bf : 4f               	ld	c,a
40c0 : 3ac344           	ld	a,(SETIc)
40c3 : e6f0             	and	#F0
40c5 : b1               	or	c
40c6 : 32c344           	ld	(SETIc),a
                        
40c9 : 214931           	ld	hl,PA_AIC
40cc : cd9039           	call	EXTNUM
40cf : 79               	ld	a,c
40d0 : cb17             	rl	a
40d2 : cb17             	rl	a
40d4 : cb17             	rl	a
40d6 : cb17             	rl	a
40d8 : e6f0             	and	#F0
40da : 4f               	ld	c,a
40db : 3ac544           	ld	a,(SETIc+2)
40de : e60f             	and	#0F
40e0 : b1               	or	c
40e1 : 32c544           	ld	(SETIc+2),a
40e4 : 214e31           	ld	hl,PA_APC
40e7 : cd9039           	call	EXTNUM
40ea : 79               	ld	a,c
40eb : e60f             	and	#0F
40ed : 4f               	ld	c,a
40ee : 3ac544           	ld	a,(SETIc+2)
40f1 : e6f0             	and	#F0
40f3 : b1               	or	c
40f4 : 32c544           	ld	(SETIc+2),a
                        
40f7 : 215331           	ld	hl,PA_TIMEST
40fa : cd9039           	call	EXTNUM
40fd : 79               	ld	a,c
40fe : 32e644           	ld	(t_stmp),a
                        
4101 : c9               	ret
AS80 Assembler for i8080 [1.31].                                     Page  125
---------------------------------- M14.ASM -----------------------------------

                        
                        ; ====================================================
                        ; Templates and Variable Set 1 (< #8000) (for user int
                        ; ====================================================
4102 : 00               S_U:		db	0
4103 : 87               S_L:		db	#87
                        
4104 : 4d535820495243.. SYSMESS1:	db	"MSX IRC Client v1.0 by Pasha Zakharov",1
412d : 55736520737973.. SM_fntBIOS:	db	"Use system ROM font",13,10,"$"
4143 : 437573746f6d20.. SM_fntLOAD:	db	"Custom font has beem loaded",13,10,"$"
4161 : 437573746f6d20.. SM_fntLERR:	db	"Custom font can not be loaded. Error -
4189 : 4d5358444f5332.. SM_D2MAPI:	db	"MSXDOS2 Mapper initialization - Ok",13,
41ae : 546f74616c206e.. SM_D2M_TOT:	db	"Total number of 16k RAM segments - ","
41d2 : 4e756d62657220.. SM_D2M_FREE:	db	"Number of free 16k RAM segments  - ",
41f6 : 5443502f495020.. SM_UNAPI3:	db	"TCP/IP UNAPI implementation found of pa
4224 : 5443502f495020.. SM_UNAPIM:	db	"TCP/IP UNAPI implementation found in RA
4263 : 5443502f495020.. SM_UNAPIR:	db	"TCP/IP UNAPI implementation found in RO
4293 : 4e6f206d6f7265.. SM_NOREC:	db	"No more free segment records",13,10,"$"
42b2 : 4e6f206d6f7265.. SM_NOSEG:	db	"No more free segment mapper",13,10,"$"
42d0 : 444f5332204d61.. SM_NOMAPPER:	db	"DOS2 Mapper initialization - Failure!
42f8 : 417474656d7074.. SM_DOS1MAP:	db	"Attempt of use Mapper on MSXDOS(1)",13
431d : 54686973207365.. SM_LostSeg:	db	"This segment is lost",13,10,"$" 
4334 : 4e6f206d6f7265.. SM_NOSERV:	db	"No more free Server control records",13
435a : 50757368204631.. SM_HELP:	db	"Push F1 for help screen",13,10,"$"
4374 : 50757368204632.. SM_CONNS:	db	"Push F2 to connect irc server, F3 - disc
43ba : 54686520636f6e.. SM_CONNEXIST:	db	"The connection with a server is alre
43f0 : 2f51554552593a.. SM_QNA:		db	"/QUERY: if insufficient parameters",13,10
                        
                        ;--- User Parametr's
                        
                        ;PA_PSERV	ds	256
                        ;--- Words param
4415 : 47445f2e5044642f WRDPA:		dw	WRDPA1,PA_SERVER,WRDPA2,PA_PORT
441d : 57447e2f6144942f 		dw	WRDPA3,PA_SRVPASS,WRDPA4,PA_NICK
4425 : 6844e32f6f44bd.. 		dw	WRDPA5,PA_USER,WRDPA6,PA_ANICK,WRDPA7,PA_FONT
4431 : 80443f31884444.. 		dw	WRDPA8,PA_IC,WRDPA9,PA_PC,WRDPA10,PA_AIC
443d : 9b444e31a64453.. 		dw	WRDPA11,PA_APC,WRDPA12,PA_TIMEST,0
4447 : 07736572766572.. WRDPA1:		db	7,"server ",%0001
4450 : 05706f72742002   WRDPA2:		db	5,"port ",%0010
4457 : 08737276706173.. WRDPA3:		db	8,"srvpass ",%0100
4461 : 056e69636b2008   WRDPA4:		db	5,"nick ",%1000
4468 : 05757365722010   WRDPA5:		db	5,"user ",%10000
446f : 08616c746e6963.. WRDPA6:		db	8,"altnick ",%100000
4479 : 05666f6e742040   WRDPA7:		db	5,"font ",%1000000
4480 : 06696e6b5f632000 WRDPA8:		db	6,"ink_c ",0
4488 : 0870617065725f.. WRDPA9:		db	8,"paper_c ",0
4492 : 0761696e6b5f63.. WRDPA10:	db	7,"aink_c ",0
449b : 09617061706572.. WRDPA11:	db	9,"apaper_c ",0
44a6 : 0b74696d657374.. WRDPA12:	db	11,"timestamp ",0 
                        	
44b2 :                  SETI:	;	db	#99,
44b2 : 1a               	db	SETIe - SETI -1
44b3 : 0480             	db	#04,0 + #80       ; text2
44b5 : 7081             	db	#70,1 + #80       ;
44b7 : 0888             	db	#08,8 + #80       ;
44b9 : 8089             	db	#80,9 + #80       ; width 80
44bb : 0382             	db	#03,2 + #80       ; base PNT
44bd : 0284             	db	#02,4 + #80       ; base PGT
44bf : 008a             	db	#00,10 + #80      ; base CT
44c1 : 2f83             	db	#2F,3 + #80       ;
44c3 : 1f87             SETIc:	db	#1F,7 + #80       ; inc/paper   color
44c5 : 1d8c             	db	#1D,12 + #80      ; flash inc/paper color
AS80 Assembler for i8080 [1.31].                                     Page  126
---------------------------------- M14.ASM -----------------------------------

44c7 : 708d             	db	#70,13 + #80      ; time flip/flop (flash)
44c9 : 00ad             	db	#00,45 + #80      ; VRAM / ERAM bank
44cb : 008e             	db	#00,14 + #80	  ; bank = 0
44cd :                  SETIe:		
                        
44cd : 81               sys_p2	db	#81
44ce : 84               use_p2	db	#84
44cf : 85               	db	#85
44d0 : 00000000000000.. 	ds	10
44da : 0000             bbuf	ds	2
44dc : 0000             lenb	ds	2
44de : 0000             bbuf1	ds	2
44e0 : 0000             lenb1	ds	2
44e2 : 0000             bbuf2	ds	2
44e4 : 0000             lenb2	ds	2
                        
44e6 : 00               t_stmp	db	0
44e7 : ff               s_ins	db	#FF
                        
44e8 : 0000             var2	dw	0
44ea : 0000             var3	dw	0
44ec : 00               nicu	db	0
44ed : 01               stopC	db	1
44ee : 00               fntsour	db	0
44ef : 00               fferr	db	0
44f0 : 0000             point	dw	0
44f2 : 0000             ttvar	dw	0
44f4 : 00               serv1	db	0
44f5 : 00               serv2	db	0
44f6 : 00               serv3	db	0
44f7 : 00               segsRS	db	0	; - map segment parental server save
44f8 : 00005000a000f0.. TMUV	dw	0,80,160,240,320,400,480,560,640,720
450c : 20037003c00310.. 	dw	800,880,960,1040,1120,1200,1280,1360,1440,1520
4520 : 40069006e00630.. 	dw	1600,1680,1760,1840,1920,2000,2080,2160,2240,2320
                        
                        ;Windows control block
                        ;
                        ;
4534 :                  WCB:                    ; 24b
4534 : 00               	db	0	; 0    0 - VRAM 1 - EXPANDED VRAM
4535 : 00               	db	0	; 1    00000bbb A16, A15, A14 (n - 16b page)
                        ;	dw	10+3*80	; 2 3  00hhhhhhlllllllll A13-A0 VRAM
4536 : 5100             	dw	1+80
                        ;	db	35	; 4    horizontal size 1-80
                        ;	db	15	; 5    vertical size   1-26
4538 : 4e                	db	78
4539 : 18               	db	24
453a : 00               	db	0	; 6    cursor horizontal posit
453b : 00               	db	0	; 7    cursor vertical posit	
453c : 01               	db	1	; 8    0 - drop end string 1 - auto LF
453d : 01               	db	1	; 9    0 - drop end windows 1 - auto scroll
453e : 00               	db	0	; 10   0 - invisible cursor 1 - visible cursor
453f : 01               	db	1	; 11   0 - disable VRAM load, RAM Buffer only
4540 : 0090             	dw	#9000	; 12   buffer
4542 : 00c0             	dw	#C000   ; 14   max buffer
4544 : 0090             	dw	#9000   ; 16   buffer end
4546 : 0090             	dw	#9000   ; 18   cur
4548 : 00               	db	0	; 20   0 - clear new string 1 - not clear
4549 : 00               	db	0	; 21   0 - normal 1- out of buffer
454a : 0090             	dw	#9000	; 22   last string
454c :                  WCB0:	; for help screen    ; 24b
454c : 0000             	db 	0,0
AS80 Assembler for i8080 [1.31].                                     Page  127
---------------------------------- M14.ASM -----------------------------------

454e : 5000             	dw	80
4550 : 5018             	db	80,24
4552 : 0000             	db	0,0
4554 : 0101             	db	1,1
4556 : 00               	db	0
4557 : 00               	db	0	; disable VRAM load
4558 : 0090             	dw	#9000
455a : 00c0             	dw	#C000
455c : 0090             	dw	#9000
455e : 0090             	dw	#9000
4560 : 0100             	db	1,0
4562 : 0090             	dw	#9000
                        
4564 :                  WCB01:	; for server and query screen    ; 24b
4564 : 0000             	db 	0,0
4566 : 5000             	dw	80
4568 : 5018             	db	80,24
456a : 0017             	db	0,23
456c : 0101             	db	1,1
456e : 00               	db	0
456f : 00               	db	0	; disable VRAM load
4570 : ffbf             	dw	#BFFF
4572 : 00c0             	dw	#C000
4574 : 00c0             	dw	#C000
4576 : 00c0             	dw	#C000
4578 : 0100             	db	1,0
457a : ffbf             	dw	#BFFF
                        
457c :                  WCB1:	; for cannel screen    ; 24b
457c : 0000             	db 	0,0
457e : 5000             	dw	80
4580 : 4018             	db	80-16,24
4582 : 0017             	db	0,23
4584 : 0101             	db	1,1
4586 : 00               	db	0
4587 : 00               	db	0	; disable VRAM load
4588 : ffbf             	dw	#BFFF
458a : 00c0             	dw	#C000
458c : 00c0             	dw	#C000
458e : 00c0             	dw	#C000
4590 : 0100             	db	1,0
4592 : ffbf             	dw	#BFFF
                        
4594 :                  WCB2:	; for nick screen    ; 24b
4594 : 0000             	db 	0,0
4596 : 9100             	dw	80+80-15
4598 : 0f18             	db	15,24
459a : 0000             	db	0,0
459c : 0000             	db	0,0	; no auto CR LF, no auto scroll
459e : 00               	db	0
459f : 00               	db	0	; disable VRAM load
45a0 : 008c             	dw	#8C00
45a2 : ff8e             	dw	#8EFF
45a4 : 008c             	dw	#8C00
45a6 : 008c             	dw	#8C00
45a8 : 0100             	db	1,0
45aa : 008c             	dw	#8C00
                        
45ac :                  WCB3:	; for input string    ; 24b
45ac : 0000             	db 	0,0
45ae : d007             	dw	80*25
45b0 : 5001             	db	80,1
AS80 Assembler for i8080 [1.31].                                     Page  128
---------------------------------- M14.ASM -----------------------------------

45b2 : 0000             	db	0,0
45b4 : 0101             	db	1,1
45b6 : 01               	db	1
45b7 : 01               	db	1	; enable VRAM load
45b8 : 008f             	dw	#8F00
45ba : 00c0             	dw	#C000
45bc : 008f             	dw	#8F00
45be : 008f             	dw	#8F00
45c0 : 0100             	db	1,0
45c2 : 008f             	dw	#8F00
                        
45c4 :                  WCB4:	; for system info     ; 24b
45c4 : 0000             	db 	0,0
45c6 : 5000             	dw	80*1
45c8 : 2d18             	db	80-32-3,24 ;80+80-32-3,24
45ca : 0000             	db	0,0
45cc : 0101             	db	1,1
45ce : 01               	db	1
45cf : 01               	db	1	; enable VRAM load
45d0 : 0090             	dw	#9000
45d2 : 00c0             	dw	#C000
45d4 : 0090             	dw	#9000
45d6 : 0090             	dw	#9000
45d8 : 0100             	db	1,0
45da : 008f             	dw	#8F00
45dc :                  WCB5:	; for page select     ; 24b
45dc : 0000             	db 	0,0
45de : 7e00             	dw	80+80-32-2 
45e0 : 2218             	db	34,24
45e2 : 0000             	db	0,0
45e4 : 0000             	db	0,0	; no auto CR LF, no auto scroll
45e6 : 01               	db	1
45e7 : 00               	db	0	; disable VRAM load
45e8 : 008c             	dw	#8C00
45ea : ff8e             	dw	#8EFF
45ec : 008c             	dw	#8C00
45ee : 008c             	dw	#8C00
45f0 : 0100             	db	1,0
45f2 : 008c             	dw	#8C00
                        ;--- File Control Block
45f4 : 00               FCB:	db	0
45f5 : 4d535849524320.. 	db	"MSXIRC  INI"
4600 : 00000000000000.. 	db	0,0,0,0,0,0,0,0,0,0
460a : 00000000000000.. 	db	0,0,0,0,0,0,0,0,0,0
4614 : 0000000000000000 	db	0,0,0,0,0,0,0,0
                        
461c :                  FCBhelp:
461c : 00               	db	0
461d : 4d535849524320.. 	db	"MSXIRC  HLP"
4628 : 00000000000000.. 	ds	28
4644 : 0000             var1:	dw	0
4646 : 48656c702000     helpdes	db	"Help ",0
                        ;SIND:	ds	80
                        
464c : 707465726f2078.. tnicks:	db	"ptero xn_ @Zhuchka DeCadance Phantasm nick
46cd :                  tnickse:
46cd : 0000             tsb:	dw	0	; counter
46cf : 0000             	dw	0	; pointer
46d1 : 00000000000000.. 	ds	512	; send buffer
                        
48d1 : e704             chsas:	dw	1255
                        
AS80 Assembler for i8080 [1.31].                                     Page  129
---------------------------------- M14.ASM -----------------------------------

                        
                        ;nick name 	-32b max
                        ;channel name 	-50b max
                        
                        
                        
                        ; Screen buffers
                        
8000 =                  fulls	equ	#8000   ; 16kB segment for one channel or pr
                        ;#8000-886F PNT buffer
                        ;#8870-89FF free area for variable parametr
                        ;#8A00-8B0E CT buffer
                        ;#8C00-8DFF = 512 b nick name buffer
                        ;#8E00-8FFF = -512
                        ;#9000-BFFF = 12287 free bytes for text buffer
8870 =                  sWCB0	equ	#8870
8888 =                  sWCB1	equ	#8870+24
88a0 =                  sWCB2   equ	#8870+48
88b8 =                  oldcur	equ	#8870+48+24 ; (3)
88bb =                  segs	equ	#8870+48+24+3 ; (1) #88BB
88bc =                  segsR	equ	#8870+48+24+3+1 ; (1) - map segment parental
88bd =                  nlnew	equ	#8870+48+24+3+1+1 ; (1) - flag new nickname 
8002 =                  w0new	equ	#8000+2 ; nlnew+1
8004 =                  w1new	equ	w0new+2
                        	END
No errors in pass 2.
Wrote binary from address $0100 through $48d2.
Total size 18387 bytes.
